{"uid":"2d6bbd417240ec6d","name":"test_precision[Test for Bittensor]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"3c12ea931b4fcd65868d09c1ec1e610d","time":{"start":1721811941751,"stop":1721811941752,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"chain_model","time":{"start":1721811932338,"stop":1721811933787,"duration":1449},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 64, in chain_model\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 691, in init_runtime\n    self.metadata = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 518, in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"chain_model","time":{"start":1721811938899,"stop":1721811941751,"duration":2852},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az1567-463"},{"name":"thread","value":"2087-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7f299e1a31f0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7de9111a90c4cc68","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}","time":{"start":1721811932337,"stop":1721811932337,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":21,"unknown":0,"total":21},"items":[{"uid":"c9ad712c0ca50e69","reportUrl":"https://novasamatech.github.io/test-runner/5599//#testresult/c9ad712c0ca50e69","status":"passed","time":{"start":1721747154196,"stop":1721747154196,"duration":0}},{"uid":"e8eaee917eedc94c","reportUrl":"https://novasamatech.github.io/test-runner/5598//#testresult/e8eaee917eedc94c","status":"passed","time":{"start":1721725543439,"stop":1721725543439,"duration":0}},{"uid":"df0abb6d8015b244","reportUrl":"https://novasamatech.github.io/test-runner/5597//#testresult/df0abb6d8015b244","status":"passed","time":{"start":1721660752311,"stop":1721660752311,"duration":0}},{"uid":"4048bbefea34f953","reportUrl":"https://novasamatech.github.io/test-runner/5596//#testresult/4048bbefea34f953","status":"passed","time":{"start":1721639207141,"stop":1721639207141,"duration":0}},{"uid":"3c61e1a2dd60993e","reportUrl":"https://novasamatech.github.io/test-runner/5595//#testresult/3c61e1a2dd60993e","status":"passed","time":{"start":1721574364733,"stop":1721574364733,"duration":0}},{"uid":"19c47ea4b65fa1c9","reportUrl":"https://novasamatech.github.io/test-runner/5594//#testresult/19c47ea4b65fa1c9","status":"passed","time":{"start":1721552739594,"stop":1721552739594,"duration":0}},{"uid":"e1a3dd04a343defa","reportUrl":"https://novasamatech.github.io/test-runner/5593//#testresult/e1a3dd04a343defa","status":"passed","time":{"start":1721487917881,"stop":1721487917881,"duration":0}},{"uid":"64dd917175a02f49","reportUrl":"https://novasamatech.github.io/test-runner/5592//#testresult/64dd917175a02f49","status":"passed","time":{"start":1721466306669,"stop":1721466306669,"duration":0}},{"uid":"873cc8bb427ccd8d","reportUrl":"https://novasamatech.github.io/test-runner/5591//#testresult/873cc8bb427ccd8d","status":"passed","time":{"start":1721401572884,"stop":1721401572884,"duration":0}},{"uid":"f713063874e47bb7","reportUrl":"https://novasamatech.github.io/test-runner/5590//#testresult/f713063874e47bb7","status":"passed","time":{"start":1721379912209,"stop":1721379912209,"duration":0}},{"uid":"9ee7b2ca34a277a9","reportUrl":"https://novasamatech.github.io/test-runner/5589//#testresult/9ee7b2ca34a277a9","status":"passed","time":{"start":1721315187643,"stop":1721315187643,"duration":0}},{"uid":"9618f15badec7e3d","reportUrl":"https://novasamatech.github.io/test-runner/5588//#testresult/9618f15badec7e3d","status":"passed","time":{"start":1721293519282,"stop":1721293519282,"duration":0}},{"uid":"f265478317cecb81","reportUrl":"https://novasamatech.github.io/test-runner/5587//#testresult/f265478317cecb81","status":"passed","time":{"start":1721228754327,"stop":1721228754327,"duration":0}},{"uid":"8b3225caf6349a69","reportUrl":"https://novasamatech.github.io/test-runner/5586//#testresult/8b3225caf6349a69","status":"passed","time":{"start":1721207222712,"stop":1721207222712,"duration":0}},{"uid":"e628269aa7b4765f","reportUrl":"https://novasamatech.github.io/test-runner/5585//#testresult/e628269aa7b4765f","status":"passed","time":{"start":1721142348206,"stop":1721142348207,"duration":1}},{"uid":"488c9e1b19b07aa0","reportUrl":"https://novasamatech.github.io/test-runner/5584//#testresult/488c9e1b19b07aa0","status":"passed","time":{"start":1721120781795,"stop":1721120781795,"duration":0}},{"uid":"e032a0c77c328820","reportUrl":"https://novasamatech.github.io/test-runner/5583//#testresult/e032a0c77c328820","status":"passed","time":{"start":1721056014328,"stop":1721056014329,"duration":1}},{"uid":"45277bd78d32d52b","reportUrl":"https://novasamatech.github.io/test-runner/5582//#testresult/45277bd78d32d52b","status":"passed","time":{"start":1721034359870,"stop":1721034359871,"duration":1}},{"uid":"4e9eca423f9793ad","reportUrl":"https://novasamatech.github.io/test-runner/5581//#testresult/4e9eca423f9793ad","status":"passed","time":{"start":1720969716797,"stop":1720969716798,"duration":1}},{"uid":"e3eae35ae98ed0b1","reportUrl":"https://novasamatech.github.io/test-runner/5580//#testresult/e3eae35ae98ed0b1","status":"passed","time":{"start":1720947922113,"stop":1720947922114,"duration":1}}]},"tags":[]},"source":"2d6bbd417240ec6d.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f299e1a31f0>"]}