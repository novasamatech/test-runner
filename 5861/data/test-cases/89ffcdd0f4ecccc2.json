{"uid":"89ffcdd0f4ecccc2","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"900a02a36e60d19a7ffc41e41fa7d34d","time":{"start":1732892840988,"stop":1732892840988,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1732892820032,"stop":1732892825774,"duration":5742},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1732892831993,"stop":1732892840987,"duration":8994},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"529bb8bbc22e109c","name":"stdout","source":"529bb8bbc22e109c.txt","type":"text/plain","size":195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1198-211"},{"name":"thread","value":"2115-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1719598d538a6385","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732892820030,"stop":1732892820030,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":15,"skipped":0,"passed":76,"unknown":0,"total":91},"items":[{"uid":"71ea881c663a00fd","reportUrl":"https://novasamatech.github.io/test-runner/5860//#testresult/71ea881c663a00fd","status":"passed","time":{"start":1732871207696,"stop":1732871207696,"duration":0}},{"uid":"21b9edfc3594ad9c","reportUrl":"https://novasamatech.github.io/test-runner/5859//#testresult/21b9edfc3594ad9c","status":"passed","time":{"start":1732806450954,"stop":1732806450954,"duration":0}},{"uid":"20f25f43474ae76e","reportUrl":"https://novasamatech.github.io/test-runner/5858//#testresult/20f25f43474ae76e","status":"passed","time":{"start":1732784817189,"stop":1732784817189,"duration":0}},{"uid":"f5ec7841a407c062","reportUrl":"https://novasamatech.github.io/test-runner/5857//#testresult/f5ec7841a407c062","status":"passed","time":{"start":1732719977076,"stop":1732719977076,"duration":0}},{"uid":"22a20430bb5fecde","reportUrl":"https://novasamatech.github.io/test-runner/5856//#testresult/22a20430bb5fecde","status":"passed","time":{"start":1732698433175,"stop":1732698433175,"duration":0}},{"uid":"28490e20b2a581c6","reportUrl":"https://novasamatech.github.io/test-runner/5855//#testresult/28490e20b2a581c6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732633597550,"stop":1732633597550,"duration":0}},{"uid":"6e314dd764179ab0","reportUrl":"https://novasamatech.github.io/test-runner/5854//#testresult/6e314dd764179ab0","status":"passed","time":{"start":1732612023366,"stop":1732612023366,"duration":0}},{"uid":"796ceb3e2f3cfc6d","reportUrl":"https://novasamatech.github.io/test-runner/5853//#testresult/796ceb3e2f3cfc6d","status":"passed","time":{"start":1732547226333,"stop":1732547226333,"duration":0}},{"uid":"48f6db08ac89c03f","reportUrl":"https://novasamatech.github.io/test-runner/5852//#testresult/48f6db08ac89c03f","status":"passed","time":{"start":1732525640057,"stop":1732525640058,"duration":1}},{"uid":"28f49e20fb8c1541","reportUrl":"https://novasamatech.github.io/test-runner/5851//#testresult/28f49e20fb8c1541","status":"passed","time":{"start":1732460773161,"stop":1732460773161,"duration":0}},{"uid":"e4d7801cfc118bcf","reportUrl":"https://novasamatech.github.io/test-runner/5850//#testresult/e4d7801cfc118bcf","status":"passed","time":{"start":1732439202757,"stop":1732439202757,"duration":0}},{"uid":"ce25f8a13f7f8013","reportUrl":"https://novasamatech.github.io/test-runner/5849//#testresult/ce25f8a13f7f8013","status":"passed","time":{"start":1732374444895,"stop":1732374444895,"duration":0}},{"uid":"f1c6a8a75fe74257","reportUrl":"https://novasamatech.github.io/test-runner/5848//#testresult/f1c6a8a75fe74257","status":"passed","time":{"start":1732352776300,"stop":1732352776300,"duration":0}},{"uid":"58726f85b46b2d32","reportUrl":"https://novasamatech.github.io/test-runner/5847//#testresult/58726f85b46b2d32","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732288054277,"stop":1732288054277,"duration":0}},{"uid":"5f7fe0b5652190f8","reportUrl":"https://novasamatech.github.io/test-runner/5846//#testresult/5f7fe0b5652190f8","status":"passed","time":{"start":1732266461059,"stop":1732266461059,"duration":0}},{"uid":"cb4669813f2cc459","reportUrl":"https://novasamatech.github.io/test-runner/5845//#testresult/cb4669813f2cc459","status":"passed","time":{"start":1732201627479,"stop":1732201627480,"duration":1}},{"uid":"2963bbd9a4b7d6fc","reportUrl":"https://novasamatech.github.io/test-runner/5844//#testresult/2963bbd9a4b7d6fc","status":"passed","time":{"start":1732180019235,"stop":1732180019235,"duration":0}},{"uid":"62b61e471c3f33be","reportUrl":"https://novasamatech.github.io/test-runner/5843//#testresult/62b61e471c3f33be","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732115233762,"stop":1732115233762,"duration":0}},{"uid":"351cc91140586556","reportUrl":"https://novasamatech.github.io/test-runner/5842//#testresult/351cc91140586556","status":"passed","time":{"start":1732093617459,"stop":1732093617459,"duration":0}},{"uid":"bf2f5644b8d3d41d","reportUrl":"https://novasamatech.github.io/test-runner/5841//#testresult/bf2f5644b8d3d41d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732028847594,"stop":1732028847594,"duration":0}}]},"tags":[]},"source":"89ffcdd0f4ecccc2.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}