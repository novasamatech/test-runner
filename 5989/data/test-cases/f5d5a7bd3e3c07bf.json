{"uid":"f5d5a7bd3e3c07bf","name":"test_can_create_connection[Test for Polkadot People, url: wss://polkadot-people-rpc.polkadot.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"adf818d75870653479573c4dca8e3645","time":{"start":1738249535594,"stop":1738249535594,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1738249527477,"stop":1738249527717,"duration":240},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'cloudflare', 'date': 'Thu, 30 Jan 2025 15:05:27 GMT', 'content-type': 'text/html', 'content-length': '155', 'connection': 'keep-alive', 'cf-ray': '90a25c3be9641821-EWR'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>cloudflare</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n                     ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1738249532828,"stop":1738249535594,"duration":2766},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"612e66243340ad8b","name":"stdout","source":"612e66243340ad8b.txt","type":"text/plain","size":488}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1673-509"},{"name":"thread","value":"5167-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://polkadot-people-rpc.polkadot.io', 'name': 'Polkadot People'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"78e8ae475f113bd7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'cloudflare', 'date': 'Thu, 30 Jan 2025 15:05:27 GMT', 'content-type': 'text/html', 'content-length': '155', 'connection': 'keep-alive', 'cf-ray': '90a25c3be9641821-EWR'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>cloudflare</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1738249527475,"stop":1738249527475,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":44,"unknown":0,"total":44},"items":[{"uid":"43040764b1edf037","reportUrl":"https://novasamatech.github.io/test-runner/5988//#testresult/43040764b1edf037","status":"passed","time":{"start":1738227950698,"stop":1738227950698,"duration":0}},{"uid":"c324f004935997cc","reportUrl":"https://novasamatech.github.io/test-runner/5987//#testresult/c324f004935997cc","status":"passed","time":{"start":1738163139778,"stop":1738163139778,"duration":0}},{"uid":"af7747ca410fc2f6","reportUrl":"https://novasamatech.github.io/test-runner/5986//#testresult/af7747ca410fc2f6","status":"passed","time":{"start":1738141549037,"stop":1738141549037,"duration":0}},{"uid":"a457ef925202ef6c","reportUrl":"https://novasamatech.github.io/test-runner/5985//#testresult/a457ef925202ef6c","status":"passed","time":{"start":1738076751708,"stop":1738076751708,"duration":0}},{"uid":"5cd472a70091fabd","reportUrl":"https://novasamatech.github.io/test-runner/5984//#testresult/5cd472a70091fabd","status":"passed","time":{"start":1738055216512,"stop":1738055216512,"duration":0}},{"uid":"d290d12e6bd11af6","reportUrl":"https://novasamatech.github.io/test-runner/5983//#testresult/d290d12e6bd11af6","status":"passed","time":{"start":1737990353669,"stop":1737990353669,"duration":0}},{"uid":"59264e910a6fc3e1","reportUrl":"https://novasamatech.github.io/test-runner/5982//#testresult/59264e910a6fc3e1","status":"passed","time":{"start":1737968788760,"stop":1737968788760,"duration":0}},{"uid":"51e8e39ff71b80e8","reportUrl":"https://novasamatech.github.io/test-runner/5981//#testresult/51e8e39ff71b80e8","status":"passed","time":{"start":1737903922403,"stop":1737903922403,"duration":0}},{"uid":"955c37e7638222ea","reportUrl":"https://novasamatech.github.io/test-runner/5980//#testresult/955c37e7638222ea","status":"passed","time":{"start":1737882337766,"stop":1737882337766,"duration":0}},{"uid":"5effdc8a873b94f3","reportUrl":"https://novasamatech.github.io/test-runner/5979//#testresult/5effdc8a873b94f3","status":"passed","time":{"start":1737817512761,"stop":1737817512761,"duration":0}},{"uid":"fdad686a6d4b7239","reportUrl":"https://novasamatech.github.io/test-runner/5978//#testresult/fdad686a6d4b7239","status":"passed","time":{"start":1737795922404,"stop":1737795922405,"duration":1}},{"uid":"1ef3c5215a9f2044","reportUrl":"https://novasamatech.github.io/test-runner/5977//#testresult/1ef3c5215a9f2044","status":"passed","time":{"start":1737731136053,"stop":1737731136053,"duration":0}},{"uid":"2cd98b018f9a9bf5","reportUrl":"https://novasamatech.github.io/test-runner/5976//#testresult/2cd98b018f9a9bf5","status":"passed","time":{"start":1737709580502,"stop":1737709580502,"duration":0}},{"uid":"b1022027e2c8ff8","reportUrl":"https://novasamatech.github.io/test-runner/5975//#testresult/b1022027e2c8ff8","status":"passed","time":{"start":1737644761717,"stop":1737644761717,"duration":0}},{"uid":"48b38331ee79a558","reportUrl":"https://novasamatech.github.io/test-runner/5974//#testresult/48b38331ee79a558","status":"passed","time":{"start":1737623182311,"stop":1737623182311,"duration":0}},{"uid":"70f2ff9e455e1612","reportUrl":"https://novasamatech.github.io/test-runner/5973//#testresult/70f2ff9e455e1612","status":"passed","time":{"start":1737558363642,"stop":1737558363642,"duration":0}},{"uid":"e03aef312ec8d874","reportUrl":"https://novasamatech.github.io/test-runner/5972//#testresult/e03aef312ec8d874","status":"passed","time":{"start":1737536776889,"stop":1737536776889,"duration":0}},{"uid":"dd11b3919e0e5aed","reportUrl":"https://novasamatech.github.io/test-runner/5971//#testresult/dd11b3919e0e5aed","status":"passed","time":{"start":1737471948379,"stop":1737471948379,"duration":0}},{"uid":"a00de9c1f9c1b487","reportUrl":"https://novasamatech.github.io/test-runner/5970//#testresult/a00de9c1f9c1b487","status":"passed","time":{"start":1737450384647,"stop":1737450384648,"duration":1}},{"uid":"3f63f6eda2482870","reportUrl":"https://novasamatech.github.io/test-runner/5969//#testresult/3f63f6eda2482870","status":"passed","time":{"start":1737385574034,"stop":1737385574034,"duration":0}}]},"tags":[]},"source":"f5d5a7bd3e3c07bf.json","parameterValues":["{'url': 'wss://polkadot-people-rpc.polkadot.io', 'name': 'Polkadot People'}"]}