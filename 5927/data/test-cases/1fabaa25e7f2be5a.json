{"uid":"1fabaa25e7f2be5a","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"900a02a36e60d19a7ffc41e41fa7d34d","time":{"start":1735657651930,"stop":1735657651930,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1735657635873,"stop":1735657641314,"duration":5441},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n                     ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1735657646406,"stop":1735657651930,"duration":5524},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"7ddbb32baa881918","name":"stdout","source":"7ddbb32baa881918.txt","type":"text/plain","size":195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1704-97"},{"name":"thread","value":"5156-Dummy-1"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f2f2e41212893bff","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1735657635872,"stop":1735657635872,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":29,"skipped":0,"passed":128,"unknown":0,"total":157},"items":[{"uid":"ee77d15e61f36d02","reportUrl":"https://novasamatech.github.io/test-runner/5926//#testresult/ee77d15e61f36d02","status":"passed","time":{"start":1735636054362,"stop":1735636054362,"duration":0}},{"uid":"f0f3e3651b3a9c2c","reportUrl":"https://novasamatech.github.io/test-runner/5925//#testresult/f0f3e3651b3a9c2c","status":"passed","time":{"start":1735571303129,"stop":1735571303130,"duration":1}},{"uid":"55250eb98376d9e4","reportUrl":"https://novasamatech.github.io/test-runner/5924//#testresult/55250eb98376d9e4","status":"passed","time":{"start":1735549691537,"stop":1735549691537,"duration":0}},{"uid":"2c9fe19e1a4f7931","reportUrl":"https://novasamatech.github.io/test-runner/5923//#testresult/2c9fe19e1a4f7931","status":"passed","time":{"start":1735503691004,"stop":1735503691004,"duration":0}},{"uid":"8f3d5588fe2160b6","reportUrl":"https://novasamatech.github.io/test-runner/5922//#testresult/8f3d5588fe2160b6","status":"passed","time":{"start":1735503455069,"stop":1735503455069,"duration":0}},{"uid":"f80b5654f1839631","reportUrl":"https://novasamatech.github.io/test-runner/5921//#testresult/f80b5654f1839631","status":"passed","time":{"start":1735484848581,"stop":1735484848581,"duration":0}},{"uid":"b722fe1e13b4a5d0","reportUrl":"https://novasamatech.github.io/test-runner/5920//#testresult/b722fe1e13b4a5d0","status":"passed","time":{"start":1735463234100,"stop":1735463234100,"duration":0}},{"uid":"2c21100c5b306899","reportUrl":"https://novasamatech.github.io/test-runner/5919//#testresult/2c21100c5b306899","status":"passed","time":{"start":1735398466053,"stop":1735398466053,"duration":0}},{"uid":"558954826c1c7fc7","reportUrl":"https://novasamatech.github.io/test-runner/5918//#testresult/558954826c1c7fc7","status":"passed","time":{"start":1735376864028,"stop":1735376864028,"duration":0}},{"uid":"414fe0d7b6960c98","reportUrl":"https://novasamatech.github.io/test-runner/5917//#testresult/414fe0d7b6960c98","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1735312072850,"stop":1735312072850,"duration":0}},{"uid":"de10157dc5069a9","reportUrl":"https://novasamatech.github.io/test-runner/5916//#testresult/de10157dc5069a9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1735290510628,"stop":1735290510628,"duration":0}},{"uid":"e6c56e8e5a5516f4","reportUrl":"https://novasamatech.github.io/test-runner/5915//#testresult/e6c56e8e5a5516f4","status":"passed","time":{"start":1735225711688,"stop":1735225711688,"duration":0}},{"uid":"5d3882e52381a1ac","reportUrl":"https://novasamatech.github.io/test-runner/5914//#testresult/5d3882e52381a1ac","status":"passed","time":{"start":1735204079489,"stop":1735204079489,"duration":0}},{"uid":"976ce363d3ecba46","reportUrl":"https://novasamatech.github.io/test-runner/5913//#testresult/976ce363d3ecba46","status":"passed","time":{"start":1735139221557,"stop":1735139221557,"duration":0}},{"uid":"7a61e129a13d469","reportUrl":"https://novasamatech.github.io/test-runner/5912//#testresult/7a61e129a13d469","status":"passed","time":{"start":1735117679656,"stop":1735117679657,"duration":1}},{"uid":"12d49a12f8de055e","reportUrl":"https://novasamatech.github.io/test-runner/5911//#testresult/12d49a12f8de055e","status":"passed","time":{"start":1735052883670,"stop":1735052883670,"duration":0}},{"uid":"e5ac10bf8914b75","reportUrl":"https://novasamatech.github.io/test-runner/5910//#testresult/e5ac10bf8914b75","status":"passed","time":{"start":1735031264014,"stop":1735031264014,"duration":0}},{"uid":"8bf960683dee956d","reportUrl":"https://novasamatech.github.io/test-runner/5909//#testresult/8bf960683dee956d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1734966443448,"stop":1734966443448,"duration":0}},{"uid":"203c37395ce210b1","reportUrl":"https://novasamatech.github.io/test-runner/5908//#testresult/203c37395ce210b1","status":"passed","time":{"start":1734944875472,"stop":1734944875472,"duration":0}},{"uid":"1fc07e5e5e327311","reportUrl":"https://novasamatech.github.io/test-runner/5907//#testresult/1fc07e5e5e327311","status":"passed","time":{"start":1734880000971,"stop":1734880000971,"duration":0}}]},"tags":[]},"source":"1fabaa25e7f2be5a.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}