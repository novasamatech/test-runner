{"uid":"22ff38db0fbc1a98","name":"test_rpc_node_is_synced[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_substrate_node_is_synced#test_rpc_node_is_synced","historyId":"d1dde89f48f5b964faa5b75d8926ce6c","time":{"start":1735657665046,"stop":1735657665171,"duration":125},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1735657648081,"stop":1735657653575,"duration":5494},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n                     ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1735657658687,"stop":1735657665045,"duration":6358},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"64f5fc99d6ce67ff","name":"stdout","source":"64f5fc99d6ce67ff.txt","type":"text/plain","size":195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_substrate_node_is_synced"},{"name":"host","value":"fv-az1660-675"},{"name":"thread","value":"5140-Dummy-1"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_substrate_node_is_synced"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"84b7e37012c9066a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1735657648080,"stop":1735657648080,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":31,"skipped":0,"passed":126,"unknown":0,"total":157},"items":[{"uid":"cda06bdf8b833a21","reportUrl":"https://novasamatech.github.io/test-runner/5926//#testresult/cda06bdf8b833a21","status":"passed","time":{"start":1735636072368,"stop":1735636072491,"duration":123}},{"uid":"e8f7e123219a692e","reportUrl":"https://novasamatech.github.io/test-runner/5925//#testresult/e8f7e123219a692e","status":"passed","time":{"start":1735571311320,"stop":1735571311441,"duration":121}},{"uid":"43d396d4f3a7f9db","reportUrl":"https://novasamatech.github.io/test-runner/5924//#testresult/43d396d4f3a7f9db","status":"passed","time":{"start":1735549690772,"stop":1735549690872,"duration":100}},{"uid":"b3fb9b55f1f5abaa","reportUrl":"https://novasamatech.github.io/test-runner/5923//#testresult/b3fb9b55f1f5abaa","status":"passed","time":{"start":1735503698268,"stop":1735503698374,"duration":106}},{"uid":"a2508a13a338b127","reportUrl":"https://novasamatech.github.io/test-runner/5922//#testresult/a2508a13a338b127","status":"passed","time":{"start":1735503470966,"stop":1735503471157,"duration":191}},{"uid":"12d04f6782f40c63","reportUrl":"https://novasamatech.github.io/test-runner/5921//#testresult/12d04f6782f40c63","status":"passed","time":{"start":1735484896931,"stop":1735484897102,"duration":171}},{"uid":"ea080dc4e31023ae","reportUrl":"https://novasamatech.github.io/test-runner/5920//#testresult/ea080dc4e31023ae","status":"passed","time":{"start":1735463230753,"stop":1735463230857,"duration":104}},{"uid":"df688a7daaf946d4","reportUrl":"https://novasamatech.github.io/test-runner/5919//#testresult/df688a7daaf946d4","status":"passed","time":{"start":1735398473099,"stop":1735398473220,"duration":121}},{"uid":"8cc19be4d556dac6","reportUrl":"https://novasamatech.github.io/test-runner/5918//#testresult/8cc19be4d556dac6","status":"passed","time":{"start":1735376867128,"stop":1735376867283,"duration":155}},{"uid":"7ad016d1365fdbb2","reportUrl":"https://novasamatech.github.io/test-runner/5917//#testresult/7ad016d1365fdbb2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1735312074829,"stop":1735312074829,"duration":0}},{"uid":"c0b801fcf823af62","reportUrl":"https://novasamatech.github.io/test-runner/5916//#testresult/c0b801fcf823af62","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1735290483383,"stop":1735290483383,"duration":0}},{"uid":"b5ed64be6f39b6cf","reportUrl":"https://novasamatech.github.io/test-runner/5915//#testresult/b5ed64be6f39b6cf","status":"passed","time":{"start":1735225720329,"stop":1735225720499,"duration":170}},{"uid":"330177660ec3ad13","reportUrl":"https://novasamatech.github.io/test-runner/5914//#testresult/330177660ec3ad13","status":"passed","time":{"start":1735204069815,"stop":1735204069943,"duration":128}},{"uid":"cd3b3aea7dd19c69","reportUrl":"https://novasamatech.github.io/test-runner/5913//#testresult/cd3b3aea7dd19c69","status":"passed","time":{"start":1735139225530,"stop":1735139225634,"duration":104}},{"uid":"e949ea1dc85ca79c","reportUrl":"https://novasamatech.github.io/test-runner/5912//#testresult/e949ea1dc85ca79c","status":"passed","time":{"start":1735117657905,"stop":1735117658015,"duration":110}},{"uid":"2fd9c36619db48ae","reportUrl":"https://novasamatech.github.io/test-runner/5911//#testresult/2fd9c36619db48ae","status":"passed","time":{"start":1735052834605,"stop":1735052834728,"duration":123}},{"uid":"89405bf290f77a97","reportUrl":"https://novasamatech.github.io/test-runner/5910//#testresult/89405bf290f77a97","status":"passed","time":{"start":1735031270301,"stop":1735031270471,"duration":170}},{"uid":"f698543624a61a53","reportUrl":"https://novasamatech.github.io/test-runner/5909//#testresult/f698543624a61a53","status":"passed","time":{"start":1734966457389,"stop":1734966457511,"duration":122}},{"uid":"a742c415bb81cef9","reportUrl":"https://novasamatech.github.io/test-runner/5908//#testresult/a742c415bb81cef9","status":"passed","time":{"start":1734944881481,"stop":1734944881655,"duration":174}},{"uid":"98ff194bbc454390","reportUrl":"https://novasamatech.github.io/test-runner/5907//#testresult/98ff194bbc454390","status":"passed","time":{"start":1734880005354,"stop":1734880005454,"duration":100}}]},"tags":[]},"source":"22ff38db0fbc1a98.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}