{"uid":"8f0269bc1a3e65d7","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"900a02a36e60d19a7ffc41e41fa7d34d","time":{"start":1721833670107,"stop":1721833670107,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1721833641865,"stop":1721833647323,"duration":5458},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1721833652421,"stop":1721833657843,"duration":5422},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1721833663162,"stop":1721833670106,"duration":6944},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"15b0bad9b1ae8a88","name":"stdout","source":"15b0bad9b1ae8a88.txt","type":"text/plain","size":390}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1210-451"},{"name":"thread","value":"2117-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"db7933e94f2fa6f3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1721833652421,"stop":1721833652421,"duration":0}},{"uid":"ccfd4920cae05001","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1721833641863,"stop":1721833641863,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":37,"unknown":0,"total":37},"items":[{"uid":"997ad83325ebf3fa","reportUrl":"https://novasamatech.github.io/test-runner/5600//#testresult/997ad83325ebf3fa","status":"passed","time":{"start":1721812003516,"stop":1721812003516,"duration":0}},{"uid":"e604d997c82186d1","reportUrl":"https://novasamatech.github.io/test-runner/5599//#testresult/e604d997c82186d1","status":"passed","time":{"start":1721747227621,"stop":1721747227621,"duration":0}},{"uid":"fd75c83a741f5e98","reportUrl":"https://novasamatech.github.io/test-runner/5598//#testresult/fd75c83a741f5e98","status":"passed","time":{"start":1721725595253,"stop":1721725595254,"duration":1}},{"uid":"5e21aa0124a41b41","reportUrl":"https://novasamatech.github.io/test-runner/5597//#testresult/5e21aa0124a41b41","status":"passed","time":{"start":1721660812651,"stop":1721660812651,"duration":0}},{"uid":"2fdfca8499e4da11","reportUrl":"https://novasamatech.github.io/test-runner/5596//#testresult/2fdfca8499e4da11","status":"passed","time":{"start":1721639258690,"stop":1721639258690,"duration":0}},{"uid":"1f9221992bbb9946","reportUrl":"https://novasamatech.github.io/test-runner/5595//#testresult/1f9221992bbb9946","status":"passed","time":{"start":1721574424203,"stop":1721574424203,"duration":0}},{"uid":"61b621443a8ce694","reportUrl":"https://novasamatech.github.io/test-runner/5594//#testresult/61b621443a8ce694","status":"passed","time":{"start":1721552801265,"stop":1721552801265,"duration":0}},{"uid":"c1fbafd586fe23d5","reportUrl":"https://novasamatech.github.io/test-runner/5593//#testresult/c1fbafd586fe23d5","status":"passed","time":{"start":1721487956185,"stop":1721487956185,"duration":0}},{"uid":"aca5e92a807f3740","reportUrl":"https://novasamatech.github.io/test-runner/5592//#testresult/aca5e92a807f3740","status":"passed","time":{"start":1721466375141,"stop":1721466375141,"duration":0}},{"uid":"68022323bec43a67","reportUrl":"https://novasamatech.github.io/test-runner/5591//#testresult/68022323bec43a67","status":"passed","time":{"start":1721401665043,"stop":1721401665043,"duration":0}},{"uid":"638d2916abdd397a","reportUrl":"https://novasamatech.github.io/test-runner/5590//#testresult/638d2916abdd397a","status":"passed","time":{"start":1721379964122,"stop":1721379964122,"duration":0}},{"uid":"cfa1b78b4c3826d5","reportUrl":"https://novasamatech.github.io/test-runner/5589//#testresult/cfa1b78b4c3826d5","status":"passed","time":{"start":1721315257286,"stop":1721315257287,"duration":1}},{"uid":"675af00998ec942d","reportUrl":"https://novasamatech.github.io/test-runner/5588//#testresult/675af00998ec942d","status":"passed","time":{"start":1721293574289,"stop":1721293574289,"duration":0}},{"uid":"22d9ee609dfed895","reportUrl":"https://novasamatech.github.io/test-runner/5587//#testresult/22d9ee609dfed895","status":"passed","time":{"start":1721228830733,"stop":1721228830733,"duration":0}},{"uid":"6f03e3c325cb5aff","reportUrl":"https://novasamatech.github.io/test-runner/5586//#testresult/6f03e3c325cb5aff","status":"passed","time":{"start":1721207271532,"stop":1721207271532,"duration":0}},{"uid":"34faa30f631b26e","reportUrl":"https://novasamatech.github.io/test-runner/5585//#testresult/34faa30f631b26e","status":"passed","time":{"start":1721142404493,"stop":1721142404493,"duration":0}},{"uid":"c715ae1d16d25384","reportUrl":"https://novasamatech.github.io/test-runner/5584//#testresult/c715ae1d16d25384","status":"passed","time":{"start":1721120840678,"stop":1721120840678,"duration":0}},{"uid":"f9b0ca5cb7b2efb2","reportUrl":"https://novasamatech.github.io/test-runner/5583//#testresult/f9b0ca5cb7b2efb2","status":"passed","time":{"start":1721056080551,"stop":1721056080551,"duration":0}},{"uid":"2c9664de5e38ed10","reportUrl":"https://novasamatech.github.io/test-runner/5582//#testresult/2c9664de5e38ed10","status":"passed","time":{"start":1721034415505,"stop":1721034415505,"duration":0}},{"uid":"1a3b0271d0491e7","reportUrl":"https://novasamatech.github.io/test-runner/5581//#testresult/1a3b0271d0491e7","status":"passed","time":{"start":1720969770784,"stop":1720969770784,"duration":0}}]},"tags":[]},"source":"8f0269bc1a3e65d7.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}