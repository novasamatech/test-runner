{"uid":"7b047c99f06320ea","name":"test_rpc_node_is_synced[Test for Avail, url: wss://avail.rpc.bountyblok.io]","fullName":"tests.test_substrate_node_is_synced#test_rpc_node_is_synced","historyId":"c33296438ab161dd52ad2dfb3230e69b","time":{"start":1730192958843,"stop":1730192958843,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:09:19 GMT'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_node_is_synced[Test for Avail, url: wss://avail.rpc.bountyblok.io]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:09:19 GMT'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1730192958843,"stop":1730192959565,"duration":722},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:09:19 GMT'} -+-+- b'Too many connections. Please try again later.'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:09:19 GMT'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_node_is_synced[Test for Avail, url: wss://avail.rpc.bountyblok.io]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:09:19 GMT'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"15ffc1773e8e4f70","name":"stdout","source":"15ffc1773e8e4f70.txt","type":"text/plain","size":1176}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_substrate_node_is_synced"},{"name":"host","value":"fv-az1437-197"},{"name":"thread","value":"2213-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_substrate_node_is_synced"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://avail.rpc.bountyblok.io', 'name': 'Avail'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"25bdf21005bc66cd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:09:13 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1730192952923,"stop":1730192952923,"duration":0}},{"uid":"38fb6fcc64a44c56","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:09:07 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1730192947026,"stop":1730192947026,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":26,"unknown":0,"total":28},"items":[{"uid":"b7f8687dfde8d703","reportUrl":"https://novasamatech.github.io/test-runner/5797//#testresult/b7f8687dfde8d703","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 28 Oct 2024 15:08:58 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=KLWF01oz9XD4mtIylwmQMMWmIR2P0sD6FlyAWQ8N19Z%2BQ7tdLRgeRNwj1PT%2Bu9nPiUdjaLCouBjOX30f3ts2oqFlSYA2%2BP0f2xe3OnOryZfExa7X5Mqs8DoDZ1Aip%2FXndBbWKv9CX92Y\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '8d9bd81e2c17aca8-ORD'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1730128137752,"stop":1730128137752,"duration":0}},{"uid":"5489a2e28b03a414","reportUrl":"https://novasamatech.github.io/test-runner/5796//#testresult/5489a2e28b03a414","status":"passed","time":{"start":1730106527829,"stop":1730106527936,"duration":107}},{"uid":"27fd625faf3b81bc","reportUrl":"https://novasamatech.github.io/test-runner/5795//#testresult/27fd625faf3b81bc","status":"passed","time":{"start":1730041679759,"stop":1730041679875,"duration":116}},{"uid":"77f367b54a783df8","reportUrl":"https://novasamatech.github.io/test-runner/5794//#testresult/77f367b54a783df8","status":"passed","time":{"start":1730020102201,"stop":1730020102317,"duration":116}},{"uid":"4ba589c3de5b29e4","reportUrl":"https://novasamatech.github.io/test-runner/5793//#testresult/4ba589c3de5b29e4","status":"passed","time":{"start":1729955311615,"stop":1729955311748,"duration":133}},{"uid":"3a92c0fcb7926ce4","reportUrl":"https://novasamatech.github.io/test-runner/5792//#testresult/3a92c0fcb7926ce4","status":"passed","time":{"start":1729933698867,"stop":1729933699001,"duration":134}},{"uid":"f212efd17ea02f35","reportUrl":"https://novasamatech.github.io/test-runner/5791//#testresult/f212efd17ea02f35","status":"passed","time":{"start":1729868910018,"stop":1729868910130,"duration":112}},{"uid":"7e54f6f9fc7da859","reportUrl":"https://novasamatech.github.io/test-runner/5790//#testresult/7e54f6f9fc7da859","status":"passed","time":{"start":1729847325712,"stop":1729847325820,"duration":108}},{"uid":"3aca024e60b61999","reportUrl":"https://novasamatech.github.io/test-runner/5789//#testresult/3aca024e60b61999","status":"passed","time":{"start":1729782526195,"stop":1729782526317,"duration":122}},{"uid":"f7dd98016a4b1b37","reportUrl":"https://novasamatech.github.io/test-runner/5788//#testresult/f7dd98016a4b1b37","status":"passed","time":{"start":1729760910498,"stop":1729760910609,"duration":111}},{"uid":"9cf303d3fef22e9e","reportUrl":"https://novasamatech.github.io/test-runner/5787//#testresult/9cf303d3fef22e9e","status":"passed","time":{"start":1729696110798,"stop":1729696110912,"duration":114}},{"uid":"eae84330e8ec4639","reportUrl":"https://novasamatech.github.io/test-runner/5786//#testresult/eae84330e8ec4639","status":"passed","time":{"start":1729674519321,"stop":1729674519431,"duration":110}},{"uid":"b9cc3a13693f6cbe","reportUrl":"https://novasamatech.github.io/test-runner/5785//#testresult/b9cc3a13693f6cbe","status":"passed","time":{"start":1729609798472,"stop":1729609798643,"duration":171}},{"uid":"78fe8f81ac4f0242","reportUrl":"https://novasamatech.github.io/test-runner/5784//#testresult/78fe8f81ac4f0242","status":"passed","time":{"start":1729588126839,"stop":1729588126982,"duration":143}},{"uid":"2ecf3fa079e0c6b5","reportUrl":"https://novasamatech.github.io/test-runner/5783//#testresult/2ecf3fa079e0c6b5","status":"passed","time":{"start":1729523346221,"stop":1729523346335,"duration":114}},{"uid":"ae95763470343e8a","reportUrl":"https://novasamatech.github.io/test-runner/5782//#testresult/ae95763470343e8a","status":"passed","time":{"start":1729501736235,"stop":1729501736377,"duration":142}},{"uid":"fe600acd8674c5a","reportUrl":"https://novasamatech.github.io/test-runner/5781//#testresult/fe600acd8674c5a","status":"passed","time":{"start":1729436888086,"stop":1729436888202,"duration":116}},{"uid":"7a756f8620ad9dd3","reportUrl":"https://novasamatech.github.io/test-runner/5780//#testresult/7a756f8620ad9dd3","status":"passed","time":{"start":1729415270466,"stop":1729415270583,"duration":117}},{"uid":"2aa4e8d2ca8d67a0","reportUrl":"https://novasamatech.github.io/test-runner/5779//#testresult/2aa4e8d2ca8d67a0","status":"passed","time":{"start":1729350480573,"stop":1729350480695,"duration":122}},{"uid":"58a00cf005d6553b","reportUrl":"https://novasamatech.github.io/test-runner/5778//#testresult/58a00cf005d6553b","status":"passed","time":{"start":1729328853380,"stop":1729328853500,"duration":120}}]},"tags":[]},"source":"7b047c99f06320ea.json","parameterValues":["{'url': 'wss://avail.rpc.bountyblok.io', 'name': 'Avail'}"]}