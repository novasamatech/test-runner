{"uid":"2782385a3bec97ca","name":"test_can_create_connection[Test for Avail, url: wss://avail.rpc.bountyblok.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0db726eff18503a64b51bc05dbd22238","time":{"start":1730192924608,"stop":1730192924608,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:08:44 GMT'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Avail, url: wss://avail.rpc.bountyblok.io]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:08:44 GMT'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1730192924608,"stop":1730192925238,"duration":630},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:08:44 GMT'} -+-+- b'Too many connections. Please try again later.'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:08:44 GMT'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Avail, url: wss://avail.rpc.bountyblok.io]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:08:44 GMT'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"d70bcff77202b049","name":"stdout","source":"d70bcff77202b049.txt","type":"text/plain","size":1176}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az520-282"},{"name":"thread","value":"2108-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://avail.rpc.bountyblok.io', 'name': 'Avail'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3ba96f7059aa9320","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:08:39 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1730192918884,"stop":1730192918884,"duration":0}},{"uid":"8a182479ecbda768","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'content-length': '45', 'date': 'Tue, 29 Oct 2024 09:08:33 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1730192912929,"stop":1730192912929,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":26,"unknown":0,"total":28},"items":[{"uid":"12106ff5f2b72a66","reportUrl":"https://novasamatech.github.io/test-runner/5797//#testresult/12106ff5f2b72a66","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 28 Oct 2024 15:08:58 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'vary': 'access-control-request-headers', 'access-control-expose-headers': '*', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=InRsYC5jtuWCJww2CaNccr%2BzOeRFBLto8iMRIv8Nw1jPC2LrSild4D%2BHf2zFEnhnohjo53nWZLQMFmJve1LtHuueozI1MGZhgqR5%2FthEu2BzdqlUbO1P3eKQo4kI6ExgbLeCYfxSwxVZ\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '8d9bd81f9e521149-ORD'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1730128137996,"stop":1730128137996,"duration":0}},{"uid":"5e7dce8a8016e588","reportUrl":"https://novasamatech.github.io/test-runner/5796//#testresult/5e7dce8a8016e588","status":"passed","time":{"start":1730106520417,"stop":1730106520418,"duration":1}},{"uid":"207e950d6f071e31","reportUrl":"https://novasamatech.github.io/test-runner/5795//#testresult/207e950d6f071e31","status":"passed","time":{"start":1730041677123,"stop":1730041677124,"duration":1}},{"uid":"bc62ac7ea6375ed1","reportUrl":"https://novasamatech.github.io/test-runner/5794//#testresult/bc62ac7ea6375ed1","status":"passed","time":{"start":1730020108536,"stop":1730020108536,"duration":0}},{"uid":"13f69ee1e5373c91","reportUrl":"https://novasamatech.github.io/test-runner/5793//#testresult/13f69ee1e5373c91","status":"passed","time":{"start":1729955316353,"stop":1729955316353,"duration":0}},{"uid":"8e662d8d4d7e0f10","reportUrl":"https://novasamatech.github.io/test-runner/5792//#testresult/8e662d8d4d7e0f10","status":"passed","time":{"start":1729933684092,"stop":1729933684092,"duration":0}},{"uid":"9da6269df040c22a","reportUrl":"https://novasamatech.github.io/test-runner/5791//#testresult/9da6269df040c22a","status":"passed","time":{"start":1729868889944,"stop":1729868889944,"duration":0}},{"uid":"fe1d180fe6c0be93","reportUrl":"https://novasamatech.github.io/test-runner/5790//#testresult/fe1d180fe6c0be93","status":"passed","time":{"start":1729847367067,"stop":1729847367067,"duration":0}},{"uid":"e1d1dc2d769b2229","reportUrl":"https://novasamatech.github.io/test-runner/5789//#testresult/e1d1dc2d769b2229","status":"passed","time":{"start":1729782513532,"stop":1729782513533,"duration":1}},{"uid":"f513bb43977eade","reportUrl":"https://novasamatech.github.io/test-runner/5788//#testresult/f513bb43977eade","status":"passed","time":{"start":1729760905850,"stop":1729760905851,"duration":1}},{"uid":"57954be988404db6","reportUrl":"https://novasamatech.github.io/test-runner/5787//#testresult/57954be988404db6","status":"passed","time":{"start":1729696093554,"stop":1729696093555,"duration":1}},{"uid":"8a4a0e3460c448ee","reportUrl":"https://novasamatech.github.io/test-runner/5786//#testresult/8a4a0e3460c448ee","status":"passed","time":{"start":1729674515550,"stop":1729674515551,"duration":1}},{"uid":"e5158a6e4e496ff7","reportUrl":"https://novasamatech.github.io/test-runner/5785//#testresult/e5158a6e4e496ff7","status":"passed","time":{"start":1729609747839,"stop":1729609747839,"duration":0}},{"uid":"17f8770e0e4899c0","reportUrl":"https://novasamatech.github.io/test-runner/5784//#testresult/17f8770e0e4899c0","status":"passed","time":{"start":1729588113792,"stop":1729588113792,"duration":0}},{"uid":"29181956a0cea3ab","reportUrl":"https://novasamatech.github.io/test-runner/5783//#testresult/29181956a0cea3ab","status":"passed","time":{"start":1729523356234,"stop":1729523356234,"duration":0}},{"uid":"76df00aeff5aa832","reportUrl":"https://novasamatech.github.io/test-runner/5782//#testresult/76df00aeff5aa832","status":"passed","time":{"start":1729501745469,"stop":1729501745469,"duration":0}},{"uid":"e29c7e06008f1176","reportUrl":"https://novasamatech.github.io/test-runner/5781//#testresult/e29c7e06008f1176","status":"passed","time":{"start":1729436883650,"stop":1729436883650,"duration":0}},{"uid":"cde64ccf60a9e437","reportUrl":"https://novasamatech.github.io/test-runner/5780//#testresult/cde64ccf60a9e437","status":"passed","time":{"start":1729415269940,"stop":1729415269941,"duration":1}},{"uid":"90bb46eddded85ee","reportUrl":"https://novasamatech.github.io/test-runner/5779//#testresult/90bb46eddded85ee","status":"passed","time":{"start":1729350499007,"stop":1729350499007,"duration":0}},{"uid":"8e7cf018fcf646c0","reportUrl":"https://novasamatech.github.io/test-runner/5778//#testresult/8e7cf018fcf646c0","status":"passed","time":{"start":1729328866853,"stop":1729328866853,"duration":0}}]},"tags":[]},"source":"2782385a3bec97ca.json","parameterValues":["{'url': 'wss://avail.rpc.bountyblok.io', 'name': 'Avail'}"]}