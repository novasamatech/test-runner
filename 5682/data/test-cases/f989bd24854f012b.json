{"uid":"f989bd24854f012b","name":"test_can_create_connection[Test for NeuroWeb, url: wss://parachain-rpc.origin-trail.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"6eb16cb568cd5b60f5963d2db7aab074","time":{"start":1725289609968,"stop":1725289609968,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-length': '104', 'content-type': 'text/html', 'date': 'Mon, 02 Sep 2024 15:06:50 GMT', 'connection': 'close'} -+-+- b'<html><body><h1>503 Service Unavailable</h1>No server is available to handle this request.</body></html>'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for NeuroWeb, url: wss://parachain-rpc.origin-trail.network]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-length': '104', 'content-type': 'text/html', 'date': 'Mon, 02 Sep 2024 15:06:50 GMT', 'connection': 'close'} -+-+- b'<html><body><h1>503 Service Unavailable</h1>No server is available to handle this request.</body></html>'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1725289598261,"stop":1725289599345,"duration":1084},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-length': '104', 'content-type': 'text/html', 'date': 'Mon, 02 Sep 2024 15:06:39 GMT', 'connection': 'close'} -+-+- b'<html><body><h1>503 Service Unavailable</h1>No server is available to handle this request.</body></html>'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1725289604420,"stop":1725289604909,"duration":489},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-length': '104', 'content-type': 'text/html', 'date': 'Mon, 02 Sep 2024 15:06:44 GMT', 'connection': 'close'} -+-+- b'<html><body><h1>503 Service Unavailable</h1>No server is available to handle this request.</body></html>'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1725289609968,"stop":1725289610453,"duration":485},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-length': '104', 'content-type': 'text/html', 'date': 'Mon, 02 Sep 2024 15:06:50 GMT', 'connection': 'close'} -+-+- b'<html><body><h1>503 Service Unavailable</h1>No server is available to handle this request.</body></html>'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-length': '104', 'content-type': 'text/html', 'date': 'Mon, 02 Sep 2024 15:06:50 GMT', 'connection': 'close'} -+-+- b'<html><body><h1>503 Service Unavailable</h1>No server is available to handle this request.</body></html>'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for NeuroWeb, url: wss://parachain-rpc.origin-trail.network]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-length': '104', 'content-type': 'text/html', 'date': 'Mon, 02 Sep 2024 15:06:50 GMT', 'connection': 'close'} -+-+- b'<html><body><h1>503 Service Unavailable</h1>No server is available to handle this request.</body></html>'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"6fe51f0c6031bb2","name":"stdout","source":"6fe51f0c6031bb2.txt","type":"text/plain","size":1200}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1424-965"},{"name":"thread","value":"2178-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://parachain-rpc.origin-trail.network', 'name': 'NeuroWeb'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"19ad245a47c6eb0a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-length': '104', 'content-type': 'text/html', 'date': 'Mon, 02 Sep 2024 15:06:44 GMT', 'connection': 'close'} -+-+- b'<html><body><h1>503 Service Unavailable</h1>No server is available to handle this request.</body></html>'","time":{"start":1725289604420,"stop":1725289604420,"duration":0}},{"uid":"8c8c3bbf73c956ac","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-length': '104', 'content-type': 'text/html', 'date': 'Mon, 02 Sep 2024 15:06:39 GMT', 'connection': 'close'} -+-+- b'<html><body><h1>503 Service Unavailable</h1>No server is available to handle this request.</body></html>'","time":{"start":1725289598260,"stop":1725289598260,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":113,"unknown":0,"total":118},"items":[{"uid":"b9b750f1214243c4","reportUrl":"https://novasamatech.github.io/test-runner/5681//#testresult/b9b750f1214243c4","status":"passed","time":{"start":1725267997856,"stop":1725267997856,"duration":0}},{"uid":"89a27b1902b77034","reportUrl":"https://novasamatech.github.io/test-runner/5680//#testresult/89a27b1902b77034","status":"passed","time":{"start":1725203193907,"stop":1725203193907,"duration":0}},{"uid":"3b1124f3bdead683","reportUrl":"https://novasamatech.github.io/test-runner/5679//#testresult/3b1124f3bdead683","status":"passed","time":{"start":1725181634829,"stop":1725181634829,"duration":0}},{"uid":"dcb5605252bc7fa8","reportUrl":"https://novasamatech.github.io/test-runner/5678//#testresult/dcb5605252bc7fa8","status":"passed","time":{"start":1725116827763,"stop":1725116827763,"duration":0}},{"uid":"af4f8f11533892a4","reportUrl":"https://novasamatech.github.io/test-runner/5677//#testresult/af4f8f11533892a4","status":"passed","time":{"start":1725095186670,"stop":1725095186670,"duration":0}},{"uid":"2380558fe58555fd","reportUrl":"https://novasamatech.github.io/test-runner/5676//#testresult/2380558fe58555fd","status":"passed","time":{"start":1725030382795,"stop":1725030382796,"duration":1}},{"uid":"ed89db8fe9877815","reportUrl":"https://novasamatech.github.io/test-runner/5675//#testresult/ed89db8fe9877815","status":"passed","time":{"start":1725008827069,"stop":1725008827069,"duration":0}},{"uid":"5ad2be1da3a1e969","reportUrl":"https://novasamatech.github.io/test-runner/5674//#testresult/5ad2be1da3a1e969","status":"passed","time":{"start":1724950045311,"stop":1724950045312,"duration":1}},{"uid":"5f9155a5929f90fb","reportUrl":"https://novasamatech.github.io/test-runner/5673//#testresult/5f9155a5929f90fb","status":"passed","time":{"start":1724944041208,"stop":1724944041209,"duration":1}},{"uid":"6ac31eca0118a7a9","reportUrl":"https://novasamatech.github.io/test-runner/5672//#testresult/6ac31eca0118a7a9","status":"passed","time":{"start":1724922410717,"stop":1724922410717,"duration":0}},{"uid":"f73beca3f6a0d59d","reportUrl":"https://novasamatech.github.io/test-runner/5671//#testresult/f73beca3f6a0d59d","status":"passed","time":{"start":1724857590612,"stop":1724857590612,"duration":0}},{"uid":"51c083445bc9f8eb","reportUrl":"https://novasamatech.github.io/test-runner/5670//#testresult/51c083445bc9f8eb","status":"passed","time":{"start":1724836037521,"stop":1724836037521,"duration":0}},{"uid":"a232b6dc6637d7a4","reportUrl":"https://novasamatech.github.io/test-runner/5669//#testresult/a232b6dc6637d7a4","status":"passed","time":{"start":1724771204519,"stop":1724771204519,"duration":0}},{"uid":"f0ddc6359ce8b0b4","reportUrl":"https://novasamatech.github.io/test-runner/5668//#testresult/f0ddc6359ce8b0b4","status":"passed","time":{"start":1724749592989,"stop":1724749592989,"duration":0}},{"uid":"9e56533b60b575ea","reportUrl":"https://novasamatech.github.io/test-runner/5667//#testresult/9e56533b60b575ea","status":"passed","time":{"start":1724684836763,"stop":1724684836764,"duration":1}},{"uid":"7ceb30812fa85549","reportUrl":"https://novasamatech.github.io/test-runner/5666//#testresult/7ceb30812fa85549","status":"passed","time":{"start":1724663228065,"stop":1724663228065,"duration":0}},{"uid":"b198e4772cf6ca9b","reportUrl":"https://novasamatech.github.io/test-runner/5665//#testresult/b198e4772cf6ca9b","status":"passed","time":{"start":1724598442481,"stop":1724598442482,"duration":1}},{"uid":"b1235872a754290f","reportUrl":"https://novasamatech.github.io/test-runner/5664//#testresult/b1235872a754290f","status":"passed","time":{"start":1724576816280,"stop":1724576816280,"duration":0}},{"uid":"81966a88ceeb2ffd","reportUrl":"https://novasamatech.github.io/test-runner/5663//#testresult/81966a88ceeb2ffd","status":"passed","time":{"start":1724512044918,"stop":1724512044919,"duration":1}},{"uid":"18bfd85bf0f65c33","reportUrl":"https://novasamatech.github.io/test-runner/5662//#testresult/18bfd85bf0f65c33","status":"passed","time":{"start":1724490387966,"stop":1724490387966,"duration":0}}]},"tags":[]},"source":"f989bd24854f012b.json","parameterValues":["{'url': 'wss://parachain-rpc.origin-trail.network', 'name': 'NeuroWeb'}"]}