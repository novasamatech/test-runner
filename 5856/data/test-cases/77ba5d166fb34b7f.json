{"uid":"77ba5d166fb34b7f","name":"test_rpc_method_is_available[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_rpc_methods_availability#test_rpc_method_is_available","historyId":"08673a041a5e97df267c5fe36110b6df","time":{"start":1732698439762,"stop":1732698439842,"duration":80},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":true,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1732698419480,"stop":1732698425143,"duration":5663},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1732698431476,"stop":1732698439761,"duration":8285},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"70c1446367e14dcd","name":"stdout","source":"70c1446367e14dcd.txt","type":"text/plain","size":195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_rpc_methods_availability"},{"name":"host","value":"fv-az1456-869"},{"name":"thread","value":"2227-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_rpc_methods_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"583840cb6b9e2519","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732698419479,"stop":1732698419479,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":19,"skipped":0,"passed":67,"unknown":0,"total":86},"items":[{"uid":"a4c02799e6d53ee6","reportUrl":"https://novasamatech.github.io/test-runner/5855//#testresult/a4c02799e6d53ee6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732633597541,"stop":1732633597541,"duration":0}},{"uid":"3c8a6d40b4c51b2","reportUrl":"https://novasamatech.github.io/test-runner/5854//#testresult/3c8a6d40b4c51b2","status":"passed","time":{"start":1732612026885,"stop":1732612027009,"duration":124}},{"uid":"3b0698369d856201","reportUrl":"https://novasamatech.github.io/test-runner/5853//#testresult/3b0698369d856201","status":"passed","time":{"start":1732547235926,"stop":1732547236004,"duration":78}},{"uid":"61a3138d72617645","reportUrl":"https://novasamatech.github.io/test-runner/5852//#testresult/61a3138d72617645","status":"passed","time":{"start":1732525612267,"stop":1732525612344,"duration":77}},{"uid":"c35e53b08d731884","reportUrl":"https://novasamatech.github.io/test-runner/5851//#testresult/c35e53b08d731884","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732460822135,"stop":1732460822135,"duration":0}},{"uid":"2855f39b0bce2b58","reportUrl":"https://novasamatech.github.io/test-runner/5850//#testresult/2855f39b0bce2b58","status":"passed","time":{"start":1732439167291,"stop":1732439167423,"duration":132}},{"uid":"38dd03537277cb38","reportUrl":"https://novasamatech.github.io/test-runner/5849//#testresult/38dd03537277cb38","status":"passed","time":{"start":1732374428806,"stop":1732374428882,"duration":76}},{"uid":"9ad024dce56220fd","reportUrl":"https://novasamatech.github.io/test-runner/5848//#testresult/9ad024dce56220fd","status":"passed","time":{"start":1732352814254,"stop":1732352814332,"duration":78}},{"uid":"8e0f72c8ebe86188","reportUrl":"https://novasamatech.github.io/test-runner/5847//#testresult/8e0f72c8ebe86188","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732288049760,"stop":1732288049760,"duration":0}},{"uid":"ae61f7807099129a","reportUrl":"https://novasamatech.github.io/test-runner/5846//#testresult/ae61f7807099129a","status":"passed","time":{"start":1732266459372,"stop":1732266459508,"duration":136}},{"uid":"a493816139010480","reportUrl":"https://novasamatech.github.io/test-runner/5845//#testresult/a493816139010480","status":"passed","time":{"start":1732201630170,"stop":1732201630290,"duration":120}},{"uid":"72fc03bb7ebb9725","reportUrl":"https://novasamatech.github.io/test-runner/5844//#testresult/72fc03bb7ebb9725","status":"passed","time":{"start":1732180003087,"stop":1732180003164,"duration":77}},{"uid":"7ac3ce919e2e3a51","reportUrl":"https://novasamatech.github.io/test-runner/5843//#testresult/7ac3ce919e2e3a51","status":"passed","time":{"start":1732115239999,"stop":1732115240078,"duration":79}},{"uid":"b64cfc1e80c11f1c","reportUrl":"https://novasamatech.github.io/test-runner/5842//#testresult/b64cfc1e80c11f1c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732093621190,"stop":1732093621190,"duration":0}},{"uid":"3384069dd120c532","reportUrl":"https://novasamatech.github.io/test-runner/5841//#testresult/3384069dd120c532","status":"passed","time":{"start":1732028871259,"stop":1732028871336,"duration":77}},{"uid":"c15a916d2dd2464e","reportUrl":"https://novasamatech.github.io/test-runner/5840//#testresult/c15a916d2dd2464e","status":"passed","time":{"start":1732007197235,"stop":1732007197365,"duration":130}},{"uid":"5b14d7dcc9436b91","reportUrl":"https://novasamatech.github.io/test-runner/5839//#testresult/5b14d7dcc9436b91","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1731942456242,"stop":1731942456242,"duration":0}},{"uid":"2a849580cdac6500","reportUrl":"https://novasamatech.github.io/test-runner/5838//#testresult/2a849580cdac6500","status":"passed","time":{"start":1731920899117,"stop":1731920899193,"duration":76}},{"uid":"abfd59149f5b92c5","reportUrl":"https://novasamatech.github.io/test-runner/5837//#testresult/abfd59149f5b92c5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1731855973895,"stop":1731855973895,"duration":0}},{"uid":"8316c6ccf59469d5","reportUrl":"https://novasamatech.github.io/test-runner/5836//#testresult/8316c6ccf59469d5","status":"passed","time":{"start":1731834380824,"stop":1731834380931,"duration":107}}]},"tags":[]},"source":"77ba5d166fb34b7f.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}