{"uid":"8d29580db7b731af","name":"test_rpc_node_is_synced[Test for Astar, url: wss://astar.api.onfinality.io/public-ws]","fullName":"tests.test_substrate_node_is_synced#test_rpc_node_is_synced","historyId":"f9c38ff9f7011275b66ac66a71b2da0b","time":{"start":1732719977696,"stop":1732719977696,"duration":0},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_node_is_synced[Test for Astar, url: wss://astar.api.onfinality.io/public-ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n        connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n>       execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=get_properties,\n            args=(connection,),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when getting properties: {data[\"url\"]}'\n        )\n\ntests/conftest.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/metadata_interaction.py:85: in get_properties\n    chain_id=substrate.get_block_hash(0)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:473: in get_block_hash\n    response = self.rpc_request(\"chain_getBlockHash\", [block_id])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <substrateinterface.base.SubstrateInterface object at 0x7f27bad737c0>\nmethod = 'chain_getBlockHash', params = [0], result_handler = None\n\n    def rpc_request(self, method, params, result_handler=None):\n        \"\"\"\n        Method that handles the actual RPC request to the Substrate node. The other implemented functions eventually\n        use this method to perform the request.\n    \n        Parameters\n        ----------\n        result_handler: Callback function that processes the result received from the node\n        method: method of the JSONRPC request\n        params: a list containing the parameters of the JSONRPC request\n    \n        Returns\n        -------\n        a dict with the parsed result of the request.\n        \"\"\"\n    \n        request_id = self.request_id\n        self.request_id += 1\n    \n        payload = {\n            \"jsonrpc\": \"2.0\",\n            \"method\": method,\n            \"params\": params,\n            \"id\": request_id\n        }\n    \n        self.debug_message('RPC request #{}: \"{}\"'.format(request_id, method))\n    \n        if self.websocket:\n            try:\n                self.websocket.send(json.dumps(payload))\n            except WebSocketConnectionClosedException:\n                if self.config.get('auto_reconnect') and self.url:\n                    # Try to reconnect websocket and retry rpc_request\n                    self.debug_message(\"Connection Closed; Trying to reconnecting...\")\n                    self.connect_websocket()\n    \n                    return self.rpc_request(method=method, params=params, result_handler=result_handler)\n                else:\n                    # websocket connection is externally created, re-raise exception\n                    raise\n    \n            update_nr = 0\n            json_body = None\n            subscription_id = None\n    \n            while json_body is None:\n                # Search for subscriptions\n                for message, remove_message in list_remove_iter(self.__rpc_message_queue):\n    \n                    # Check if result message is matching request ID\n                    if 'id' in message and message['id'] == request_id:\n    \n                        remove_message()\n    \n                        # Check if response has error\n                        if 'error' in message:\n>                           raise SubstrateRequestException(message['error'])\nE                           substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}\n\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:293: SubstrateRequestException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1732719966769,"stop":1732719967139,"duration":370},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 63, in connection_by_url\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 655, in init_runtime\n    block_header = self.rpc_request('chain_getHeader', [self.block_hash])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1732719972282,"stop":1732719972545,"duration":263},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 63, in connection_by_url\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 648, in init_runtime\n    block_hash = self.get_chain_head()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 435, in get_chain_head\n    response = self.rpc_request(\"chain_getHead\", [])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1732719977696,"stop":1732719981003,"duration":3307},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 63, in connection_by_url\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 85, in get_properties\n    chain_id=substrate.get_block_hash(0)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 473, in get_block_hash\n    response = self.rpc_request(\"chain_getBlockHash\", [block_id])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_substrate_node_is_synced"},{"name":"host","value":"fv-az1536-526"},{"name":"thread","value":"2188-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_substrate_node_is_synced"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://astar.api.onfinality.io/public-ws', 'name': 'Astar'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9eb94cd147cc1a2f","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","time":{"start":1732719972282,"stop":1732719972282,"duration":0}},{"uid":"88fb353d9a95573b","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","time":{"start":1732719966768,"stop":1732719966768,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":85,"unknown":0,"total":87},"items":[{"uid":"cd1461d4922d5bf4","reportUrl":"https://novasamatech.github.io/test-runner/5856//#testresult/cd1461d4922d5bf4","status":"passed","time":{"start":1732698393554,"stop":1732698393559,"duration":5}},{"uid":"dfda51af00df60a","reportUrl":"https://novasamatech.github.io/test-runner/5855//#testresult/dfda51af00df60a","status":"passed","time":{"start":1732633574338,"stop":1732633574348,"duration":10}},{"uid":"671d5978c6773050","reportUrl":"https://novasamatech.github.io/test-runner/5854//#testresult/671d5978c6773050","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","time":{"start":1732612004374,"stop":1732612004374,"duration":0}},{"uid":"d0776844ae524fad","reportUrl":"https://novasamatech.github.io/test-runner/5853//#testresult/d0776844ae524fad","status":"passed","time":{"start":1732547193966,"stop":1732547193973,"duration":7}},{"uid":"331df1f58af07931","reportUrl":"https://novasamatech.github.io/test-runner/5852//#testresult/331df1f58af07931","status":"passed","time":{"start":1732525604089,"stop":1732525604119,"duration":30}},{"uid":"a56d2a045721de63","reportUrl":"https://novasamatech.github.io/test-runner/5851//#testresult/a56d2a045721de63","status":"passed","time":{"start":1732460728183,"stop":1732460728220,"duration":37}},{"uid":"9bbb0b2d4e338441","reportUrl":"https://novasamatech.github.io/test-runner/5850//#testresult/9bbb0b2d4e338441","status":"passed","time":{"start":1732439129547,"stop":1732439129571,"duration":24}},{"uid":"cd250871239d49eb","reportUrl":"https://novasamatech.github.io/test-runner/5849//#testresult/cd250871239d49eb","status":"passed","time":{"start":1732374323758,"stop":1732374323769,"duration":11}},{"uid":"271977c9e69538e3","reportUrl":"https://novasamatech.github.io/test-runner/5848//#testresult/271977c9e69538e3","status":"passed","time":{"start":1732352778600,"stop":1732352778619,"duration":19}},{"uid":"59cb251006118ef2","reportUrl":"https://novasamatech.github.io/test-runner/5847//#testresult/59cb251006118ef2","status":"passed","time":{"start":1732288005792,"stop":1732288005803,"duration":11}},{"uid":"f79c790d2cb762c5","reportUrl":"https://novasamatech.github.io/test-runner/5846//#testresult/f79c790d2cb762c5","status":"passed","time":{"start":1732266397851,"stop":1732266397857,"duration":6}},{"uid":"b363872575e64b4e","reportUrl":"https://novasamatech.github.io/test-runner/5845//#testresult/b363872575e64b4e","status":"passed","time":{"start":1732201615022,"stop":1732201615034,"duration":12}},{"uid":"27aedc77bafb7cee","reportUrl":"https://novasamatech.github.io/test-runner/5844//#testresult/27aedc77bafb7cee","status":"passed","time":{"start":1732179975758,"stop":1732179975790,"duration":32}},{"uid":"c337c809dcfd2297","reportUrl":"https://novasamatech.github.io/test-runner/5843//#testresult/c337c809dcfd2297","status":"passed","time":{"start":1732115160470,"stop":1732115160541,"duration":71}},{"uid":"6bbcc7a7ecf2012e","reportUrl":"https://novasamatech.github.io/test-runner/5842//#testresult/6bbcc7a7ecf2012e","status":"passed","time":{"start":1732093581748,"stop":1732093581822,"duration":74}},{"uid":"22fec3a91604bd0c","reportUrl":"https://novasamatech.github.io/test-runner/5841//#testresult/22fec3a91604bd0c","status":"passed","time":{"start":1732028761770,"stop":1732028761791,"duration":21}},{"uid":"a9b034f0e1d2d23e","reportUrl":"https://novasamatech.github.io/test-runner/5840//#testresult/a9b034f0e1d2d23e","status":"passed","time":{"start":1732007171536,"stop":1732007171547,"duration":11}},{"uid":"9c605005a9c68d97","reportUrl":"https://novasamatech.github.io/test-runner/5839//#testresult/9c605005a9c68d97","status":"passed","time":{"start":1731942369330,"stop":1731942369340,"duration":10}},{"uid":"fe746442da4f6f02","reportUrl":"https://novasamatech.github.io/test-runner/5838//#testresult/fe746442da4f6f02","status":"passed","time":{"start":1731920802770,"stop":1731920802843,"duration":73}},{"uid":"3da9397abbb28eb8","reportUrl":"https://novasamatech.github.io/test-runner/5837//#testresult/3da9397abbb28eb8","status":"passed","time":{"start":1731855942161,"stop":1731855942240,"duration":79}}]},"tags":[]},"source":"8d29580db7b731af.json","parameterValues":["{'url': 'wss://astar.api.onfinality.io/public-ws', 'name': 'Astar'}"]}