{"uid":"64787207a7239029","name":"test_rpc_method_is_available[Test for Astar, url: wss://astar.api.onfinality.io/public-ws]","fullName":"tests.test_rpc_methods_availability#test_rpc_method_is_available","historyId":"f7bac7b7ce12eef09b0123e9aed6ca78","time":{"start":1732719962602,"stop":1732719962602,"duration":0},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_method_is_available[Test for Astar, url: wss://astar.api.onfinality.io/public-ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n        connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n>       execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=get_properties,\n            args=(connection,),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when getting properties: {data[\"url\"]}'\n        )\n\ntests/conftest.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/metadata_interaction.py:68: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2133: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2107: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:655: in init_runtime\n    block_header = self.rpc_request('chain_getHeader', [self.block_hash])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <substrateinterface.base.SubstrateInterface object at 0x7f58fbe5b4f0>\nmethod = 'chain_getHeader'\nparams = ['0x74719b8d956ab81f685d0457fcd895542b6d7c04fd7528d88c202b31cbeb990a']\nresult_handler = None\n\n    def rpc_request(self, method, params, result_handler=None):\n        \"\"\"\n        Method that handles the actual RPC request to the Substrate node. The other implemented functions eventually\n        use this method to perform the request.\n    \n        Parameters\n        ----------\n        result_handler: Callback function that processes the result received from the node\n        method: method of the JSONRPC request\n        params: a list containing the parameters of the JSONRPC request\n    \n        Returns\n        -------\n        a dict with the parsed result of the request.\n        \"\"\"\n    \n        request_id = self.request_id\n        self.request_id += 1\n    \n        payload = {\n            \"jsonrpc\": \"2.0\",\n            \"method\": method,\n            \"params\": params,\n            \"id\": request_id\n        }\n    \n        self.debug_message('RPC request #{}: \"{}\"'.format(request_id, method))\n    \n        if self.websocket:\n            try:\n                self.websocket.send(json.dumps(payload))\n            except WebSocketConnectionClosedException:\n                if self.config.get('auto_reconnect') and self.url:\n                    # Try to reconnect websocket and retry rpc_request\n                    self.debug_message(\"Connection Closed; Trying to reconnecting...\")\n                    self.connect_websocket()\n    \n                    return self.rpc_request(method=method, params=params, result_handler=result_handler)\n                else:\n                    # websocket connection is externally created, re-raise exception\n                    raise\n    \n            update_nr = 0\n            json_body = None\n            subscription_id = None\n    \n            while json_body is None:\n                # Search for subscriptions\n                for message, remove_message in list_remove_iter(self.__rpc_message_queue):\n    \n                    # Check if result message is matching request ID\n                    if 'id' in message and message['id'] == request_id:\n    \n                        remove_message()\n    \n                        # Check if response has error\n                        if 'error' in message:\n>                           raise SubstrateRequestException(message['error'])\nE                           substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}\n\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:293: SubstrateRequestException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1732719949351,"stop":1732719949719,"duration":368},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 63, in connection_by_url\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 667, in init_runtime\n    runtime_info = self.get_block_runtime_version(block_hash=runtime_block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 571, in get_block_runtime_version\n    response = self.rpc_request(\"state_getRuntimeVersion\", [block_hash])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1732719955390,"stop":1732719957535,"duration":2145},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 63, in connection_by_url\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 85, in get_properties\n    chain_id=substrate.get_block_hash(0)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 473, in get_block_hash\n    response = self.rpc_request(\"chain_getBlockHash\", [block_id])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1732719962602,"stop":1732719962761,"duration":159},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 63, in connection_by_url\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 655, in init_runtime\n    block_header = self.rpc_request('chain_getHeader', [self.block_hash])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_rpc_methods_availability"},{"name":"host","value":"fv-az1117-982"},{"name":"thread","value":"2100-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_rpc_methods_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://astar.api.onfinality.io/public-ws', 'name': 'Astar'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"68284216a98eac3","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","time":{"start":1732719955390,"stop":1732719955390,"duration":0}},{"uid":"1788ac046095fcb9","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","time":{"start":1732719949350,"stop":1732719949350,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":86,"unknown":0,"total":87},"items":[{"uid":"1da1b073383e6c1","reportUrl":"https://novasamatech.github.io/test-runner/5856//#testresult/1da1b073383e6c1","status":"passed","time":{"start":1732698412635,"stop":1732698412753,"duration":118}},{"uid":"74f44a2a1c8ff3fb","reportUrl":"https://novasamatech.github.io/test-runner/5855//#testresult/74f44a2a1c8ff3fb","status":"passed","time":{"start":1732633561330,"stop":1732633561469,"duration":139}},{"uid":"25f28c13045223ab","reportUrl":"https://novasamatech.github.io/test-runner/5854//#testresult/25f28c13045223ab","status":"passed","time":{"start":1732612000236,"stop":1732612000313,"duration":77}},{"uid":"dbffe9feab184645","reportUrl":"https://novasamatech.github.io/test-runner/5853//#testresult/dbffe9feab184645","status":"passed","time":{"start":1732547209807,"stop":1732547209941,"duration":134}},{"uid":"36baa1c1ff89a73e","reportUrl":"https://novasamatech.github.io/test-runner/5852//#testresult/36baa1c1ff89a73e","status":"passed","time":{"start":1732525590937,"stop":1732525591026,"duration":89}},{"uid":"187c1da72a62d961","reportUrl":"https://novasamatech.github.io/test-runner/5851//#testresult/187c1da72a62d961","status":"passed","time":{"start":1732460781955,"stop":1732460782033,"duration":78}},{"uid":"ec98e546b7ea9076","reportUrl":"https://novasamatech.github.io/test-runner/5850//#testresult/ec98e546b7ea9076","status":"passed","time":{"start":1732439135008,"stop":1732439135092,"duration":84}},{"uid":"5e2c37c37d157f81","reportUrl":"https://novasamatech.github.io/test-runner/5849//#testresult/5e2c37c37d157f81","status":"passed","time":{"start":1732374390580,"stop":1732374390658,"duration":78}},{"uid":"4170d34de674551","reportUrl":"https://novasamatech.github.io/test-runner/5848//#testresult/4170d34de674551","status":"passed","time":{"start":1732352788908,"stop":1732352788994,"duration":86}},{"uid":"5e5ccd3ed9e1fdf8","reportUrl":"https://novasamatech.github.io/test-runner/5847//#testresult/5e5ccd3ed9e1fdf8","status":"passed","time":{"start":1732287960493,"stop":1732287960570,"duration":77}},{"uid":"2877f87a6727b0ce","reportUrl":"https://novasamatech.github.io/test-runner/5846//#testresult/2877f87a6727b0ce","status":"passed","time":{"start":1732266403533,"stop":1732266403671,"duration":138}},{"uid":"57bb9c0e0379d6e6","reportUrl":"https://novasamatech.github.io/test-runner/5845//#testresult/57bb9c0e0379d6e6","status":"passed","time":{"start":1732201607943,"stop":1732201608085,"duration":142}},{"uid":"cd7dd6c1435a61da","reportUrl":"https://novasamatech.github.io/test-runner/5844//#testresult/cd7dd6c1435a61da","status":"passed","time":{"start":1732179971488,"stop":1732179971609,"duration":121}},{"uid":"4d0fcb7ec7c7c6cc","reportUrl":"https://novasamatech.github.io/test-runner/5843//#testresult/4d0fcb7ec7c7c6cc","status":"passed","time":{"start":1732115144166,"stop":1732115144242,"duration":76}},{"uid":"5f345974e95b84e6","reportUrl":"https://novasamatech.github.io/test-runner/5842//#testresult/5f345974e95b84e6","status":"passed","time":{"start":1732093576745,"stop":1732093576824,"duration":79}},{"uid":"bed1d19db59255b8","reportUrl":"https://novasamatech.github.io/test-runner/5841//#testresult/bed1d19db59255b8","status":"passed","time":{"start":1732028758393,"stop":1732028758512,"duration":119}},{"uid":"fd11180c067c042d","reportUrl":"https://novasamatech.github.io/test-runner/5840//#testresult/fd11180c067c042d","status":"passed","time":{"start":1732007177396,"stop":1732007177484,"duration":88}},{"uid":"a99832277cdb188e","reportUrl":"https://novasamatech.github.io/test-runner/5839//#testresult/a99832277cdb188e","status":"passed","time":{"start":1731942379362,"stop":1731942379439,"duration":77}},{"uid":"5dd3a6895e639ade","reportUrl":"https://novasamatech.github.io/test-runner/5838//#testresult/5dd3a6895e639ade","status":"passed","time":{"start":1731920812208,"stop":1731920812288,"duration":80}},{"uid":"e05acb7a55d6fb0b","reportUrl":"https://novasamatech.github.io/test-runner/5837//#testresult/e05acb7a55d6fb0b","status":"passed","time":{"start":1731855925783,"stop":1731855925885,"duration":102}}]},"tags":[]},"source":"64787207a7239029.json","parameterValues":["{'url': 'wss://astar.api.onfinality.io/public-ws', 'name': 'Astar'}"]}