{"uid":"26303365132572ac","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"900a02a36e60d19a7ffc41e41fa7d34d","time":{"start":1738595283977,"stop":1738595283977,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1738595265067,"stop":1738595270568,"duration":5501},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n                     ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1738595275649,"stop":1738595283976,"duration":8327},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"1849f407bc6d4911","name":"stdout","source":"1849f407bc6d4911.txt","type":"text/plain","size":195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1964-453"},{"name":"thread","value":"5176-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"37d190ce1f89b676","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1738595265066,"stop":1738595265066,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":46,"unknown":0,"total":52},"items":[{"uid":"4956e5162b6678d7","reportUrl":"https://novasamatech.github.io/test-runner/5996//#testresult/4956e5162b6678d7","status":"passed","time":{"start":1738573652804,"stop":1738573652804,"duration":0}},{"uid":"d6410f7cd7a2d3bb","reportUrl":"https://novasamatech.github.io/test-runner/5995//#testresult/d6410f7cd7a2d3bb","status":"passed","time":{"start":1738508820852,"stop":1738508820852,"duration":0}},{"uid":"76de6b617cdbcf89","reportUrl":"https://novasamatech.github.io/test-runner/5994//#testresult/76de6b617cdbcf89","status":"passed","time":{"start":1738487218249,"stop":1738487218249,"duration":0}},{"uid":"c9f61581148d44db","reportUrl":"https://novasamatech.github.io/test-runner/5993//#testresult/c9f61581148d44db","status":"passed","time":{"start":1738422435721,"stop":1738422435721,"duration":0}},{"uid":"fe3725c91c5d07b5","reportUrl":"https://novasamatech.github.io/test-runner/5992//#testresult/fe3725c91c5d07b5","status":"passed","time":{"start":1738400878567,"stop":1738400878567,"duration":0}},{"uid":"790d87294120557b","reportUrl":"https://novasamatech.github.io/test-runner/5991//#testresult/790d87294120557b","status":"passed","time":{"start":1738336034011,"stop":1738336034011,"duration":0}},{"uid":"7ea17c644b61ba57","reportUrl":"https://novasamatech.github.io/test-runner/5990//#testresult/7ea17c644b61ba57","status":"passed","time":{"start":1738314452028,"stop":1738314452028,"duration":0}},{"uid":"b870114efc7cbb21","reportUrl":"https://novasamatech.github.io/test-runner/5989//#testresult/b870114efc7cbb21","status":"passed","time":{"start":1738249644164,"stop":1738249644165,"duration":1}},{"uid":"192fe61dc7affaeb","reportUrl":"https://novasamatech.github.io/test-runner/5988//#testresult/192fe61dc7affaeb","status":"passed","time":{"start":1738228037264,"stop":1738228037264,"duration":0}},{"uid":"12fd80b1af877fbe","reportUrl":"https://novasamatech.github.io/test-runner/5987//#testresult/12fd80b1af877fbe","status":"passed","time":{"start":1738163256424,"stop":1738163256424,"duration":0}},{"uid":"baad38da01039a6e","reportUrl":"https://novasamatech.github.io/test-runner/5986//#testresult/baad38da01039a6e","status":"passed","time":{"start":1738141666423,"stop":1738141666424,"duration":1}},{"uid":"e3818213ca2ba421","reportUrl":"https://novasamatech.github.io/test-runner/5985//#testresult/e3818213ca2ba421","status":"passed","time":{"start":1738076839279,"stop":1738076839279,"duration":0}},{"uid":"c296160cea39fa93","reportUrl":"https://novasamatech.github.io/test-runner/5984//#testresult/c296160cea39fa93","status":"passed","time":{"start":1738055305140,"stop":1738055305140,"duration":0}},{"uid":"f2f56c85f630e1da","reportUrl":"https://novasamatech.github.io/test-runner/5983//#testresult/f2f56c85f630e1da","status":"passed","time":{"start":1737990447776,"stop":1737990447776,"duration":0}},{"uid":"70b30759a645cd80","reportUrl":"https://novasamatech.github.io/test-runner/5982//#testresult/70b30759a645cd80","status":"passed","time":{"start":1737968898359,"stop":1737968898360,"duration":1}},{"uid":"f43a63554a8ee48f","reportUrl":"https://novasamatech.github.io/test-runner/5981//#testresult/f43a63554a8ee48f","status":"passed","time":{"start":1737904087673,"stop":1737904087673,"duration":0}},{"uid":"e50db8cba77ac12b","reportUrl":"https://novasamatech.github.io/test-runner/5980//#testresult/e50db8cba77ac12b","status":"passed","time":{"start":1737882429682,"stop":1737882429682,"duration":0}},{"uid":"177b9434bc817f6d","reportUrl":"https://novasamatech.github.io/test-runner/5979//#testresult/177b9434bc817f6d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1737817623244,"stop":1737817623244,"duration":0}},{"uid":"a1ba16efc2519163","reportUrl":"https://novasamatech.github.io/test-runner/5978//#testresult/a1ba16efc2519163","status":"passed","time":{"start":1737796054547,"stop":1737796054548,"duration":1}},{"uid":"e182566387a49297","reportUrl":"https://novasamatech.github.io/test-runner/5977//#testresult/e182566387a49297","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1737731254960,"stop":1737731254960,"duration":0}}]},"tags":[]},"source":"26303365132572ac.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}