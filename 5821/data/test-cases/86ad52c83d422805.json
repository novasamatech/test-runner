{"uid":"86ad52c83d422805","name":"test_has_new_assets[Test for Hyperbridge Nexus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"118a1fbbe4ed4172b4418ab0f110d2b0","time":{"start":1731164786371,"stop":1731164786406,"duration":35},"status":"failed","statusMessage":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:34\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: BRIDGE\u001B[0m\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7ff6f99d9b10>\nchain_model = <scripts.utils.chain_model.Chain object at 0x7ff6f9d73940>\n\n    def test_has_new_assets(self, chain_model: Chain):\n    \n        chain_assets = {asset['symbol'].upper(\n        ): '' for asset in chain_model.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain_model.name in self.exclusions:\n            chain_assets.update(\n                {ex_asset: '' for ex_asset in self.exclusions[chain_model.name]})\n        symbols = chain_model.substrate.token_symbol if isinstance(chain_model.substrate.token_symbol, list) else [\n            chain_model.properties.symbol]\n    \n        for symbol in symbols:\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),\n                                  \"new token to add: \" + symbol)\n    \n>       delayed_assert.assert_expectations()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def assert_expectations():\n        'raise an assert if there are any failed expectations'\n        if _failed_expectations:\n>           assert False, _report_failures()\nE           AssertionError: \u001B[93m\nE           \nE           assert_expectations() called at\u001B[0m\nE           \u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:34\"\u001B[0m\u001B[93m in test_has_new_assets()\nE           \nE           \u001B[91m\u001B[4mFailed Expectations : 1\nE           \u001B[0m\nE           1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\u001B[0m\u001B[91m\", in test_has_new_assets()\nE           \t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: BRIDGE\u001B[0m\nE                       delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),\n\n.venv/lib/python3.10/site-packages/delayed_assert/delayed_assert.py:74: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"chain_model","time":{"start":1731164785643,"stop":1731164786371,"duration":728},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1020-383"},{"name":"thread","value":"2092-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7ff6f9d73940>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d9ad9ed2086228ce","status":"failed","statusDetails":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:34\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: BRIDGE\u001B[0m\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),","time":{"start":1731164780594,"stop":1731164780633,"duration":39}},{"uid":"e0521ebc00e56ae3","status":"failed","statusDetails":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:34\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: BRIDGE\u001B[0m\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),","time":{"start":1731164774665,"stop":1731164774682,"duration":17}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":1,"skipped":0,"passed":47,"unknown":0,"total":51},"items":[{"uid":"f40af6c5476e009a","reportUrl":"https://novasamatech.github.io/test-runner/5820//#testresult/f40af6c5476e009a","status":"failed","statusDetails":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:34\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: BRIDGE\u001B[0m\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),","time":{"start":1731143162777,"stop":1731143162798,"duration":21}},{"uid":"c385527ab953dfb9","reportUrl":"https://novasamatech.github.io/test-runner/5819//#testresult/c385527ab953dfb9","status":"broken","statusDetails":"tests.conftest.FixtureTimeoutError: Timeout 15 when creating connection: Hyperbridge Nexus","time":{"start":1731078438635,"stop":1731078438635,"duration":0}},{"uid":"1ad1c9984d3afff2","reportUrl":"https://novasamatech.github.io/test-runner/5818//#testresult/1ad1c9984d3afff2","status":"failed","statusDetails":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:34\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: BRIDGE\u001B[0m\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),","time":{"start":1731056798828,"stop":1731056798906,"duration":78}},{"uid":"e1eba1e22d95c3aa","reportUrl":"https://novasamatech.github.io/test-runner/5817//#testresult/e1eba1e22d95c3aa","status":"passed","time":{"start":1730991957167,"stop":1730991957174,"duration":7}},{"uid":"4aea1e5d8f186371","reportUrl":"https://novasamatech.github.io/test-runner/5816//#testresult/4aea1e5d8f186371","status":"passed","time":{"start":1730970390267,"stop":1730970390275,"duration":8}},{"uid":"7063886ba03ab28e","reportUrl":"https://novasamatech.github.io/test-runner/5815//#testresult/7063886ba03ab28e","status":"passed","time":{"start":1730905565253,"stop":1730905565259,"duration":6}},{"uid":"bfd62de04e695505","reportUrl":"https://novasamatech.github.io/test-runner/5814//#testresult/bfd62de04e695505","status":"passed","time":{"start":1730883988716,"stop":1730883988726,"duration":10}},{"uid":"9210de7ad8ee9b4e","reportUrl":"https://novasamatech.github.io/test-runner/5813//#testresult/9210de7ad8ee9b4e","status":"passed","time":{"start":1730819195358,"stop":1730819195365,"duration":7}},{"uid":"ff37f21c8bb1e70e","reportUrl":"https://novasamatech.github.io/test-runner/5812//#testresult/ff37f21c8bb1e70e","status":"passed","time":{"start":1730797578934,"stop":1730797578942,"duration":8}},{"uid":"c9edcd5add507de5","reportUrl":"https://novasamatech.github.io/test-runner/5811//#testresult/c9edcd5add507de5","status":"passed","time":{"start":1730732783556,"stop":1730732783563,"duration":7}},{"uid":"a4f82da8fab46685","reportUrl":"https://novasamatech.github.io/test-runner/5810//#testresult/a4f82da8fab46685","status":"passed","time":{"start":1730711220239,"stop":1730711220247,"duration":8}},{"uid":"b501fff0721cb648","reportUrl":"https://novasamatech.github.io/test-runner/5809//#testresult/b501fff0721cb648","status":"passed","time":{"start":1730646341275,"stop":1730646341286,"duration":11}},{"uid":"40850a9ffe1970a2","reportUrl":"https://novasamatech.github.io/test-runner/5808//#testresult/40850a9ffe1970a2","status":"passed","time":{"start":1730624801829,"stop":1730624801834,"duration":5}},{"uid":"a650aff2cc1ae4dc","reportUrl":"https://novasamatech.github.io/test-runner/5807//#testresult/a650aff2cc1ae4dc","status":"passed","time":{"start":1730560004518,"stop":1730560004526,"duration":8}},{"uid":"45ddd0f3b8f2387a","reportUrl":"https://novasamatech.github.io/test-runner/5806//#testresult/45ddd0f3b8f2387a","status":"passed","time":{"start":1730538376503,"stop":1730538376508,"duration":5}},{"uid":"6b419f7275d8aab1","reportUrl":"https://novasamatech.github.io/test-runner/5805//#testresult/6b419f7275d8aab1","status":"passed","time":{"start":1730473572262,"stop":1730473572272,"duration":10}},{"uid":"7a0ef608d617f59","reportUrl":"https://novasamatech.github.io/test-runner/5804//#testresult/7a0ef608d617f59","status":"passed","time":{"start":1730451993269,"stop":1730451993278,"duration":9}},{"uid":"ae52cec551b17f2","reportUrl":"https://novasamatech.github.io/test-runner/5803//#testresult/ae52cec551b17f2","status":"passed","time":{"start":1730387161307,"stop":1730387161313,"duration":6}},{"uid":"48309f9f9ae1d8f3","reportUrl":"https://novasamatech.github.io/test-runner/5802//#testresult/48309f9f9ae1d8f3","status":"passed","time":{"start":1730365576921,"stop":1730365576928,"duration":7}},{"uid":"63bd4fea7103c4ad","reportUrl":"https://novasamatech.github.io/test-runner/5801//#testresult/63bd4fea7103c4ad","status":"passed","time":{"start":1730300779444,"stop":1730300779451,"duration":7}}]},"tags":[]},"source":"86ad52c83d422805.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7ff6f9d73940>"]}