{"uid":"f22bcb9867aaf9c3","name":"test_rpc_node_is_synced[Test for Ethereum, url: https://1rpc.io/eth]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_is_synced","historyId":"9e0c16e1a7876bd51b49d655a0298c26","time":{"start":1731164679974,"stop":1731164680264,"duration":290},"status":"failed","statusMessage":"AssertionError: assert 'error' not in {'error': {'code': -32005, 'data': {'see': 'https://infura.io/dashboard'}, 'message': 'daily request count exceeded, request rate limited'}, 'id': 0, 'jsonrpc': '2.0'}","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7f6428f7db10>\ndata = {'name': 'Ethereum', 'url': 'https://1rpc.io/eth'}\n\n    def test_rpc_node_is_synced(self, data):\n    \n        wss_w3 = Web3(Web3.WebsocketProvider('wss://mainnet.infura.io/ws/v3/32a2be59297444c9bcb2b61bb700c6fe'))\n        # Check if connected to wss node\n>       assert wss_w3.is_connected(), \"Failed to connect to Ethereum wss node\"\n\ntests/test_eth_nodes_availability.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.10/site-packages/web3/main.py:445: in is_connected\n    return self.provider.is_connected()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <web3.providers.websocket.WebsocketProvider object at 0x7f6428e6e1d0>\n\n    def is_connected(self) -> bool:\n        try:\n            response = self.make_request(RPCEndpoint(\"web3_clientVersion\"), [])\n        except OSError:\n            return False\n    \n        assert response[\"jsonrpc\"] == \"2.0\"\n>       assert \"error\" not in response\nE       AssertionError: assert 'error' not in {'error': {'code': -32005, 'data': {'see': 'https://infura.io/dashboard'}, 'message': 'daily request count exceeded, request rate limited'}, 'id': 0, 'jsonrpc': '2.0'}\n\n.venv/lib/python3.10/site-packages/web3/providers/base.py:115: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az1153-168"},{"name":"thread","value":"2172-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://1rpc.io/eth', 'name': 'Ethereum'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"824b1841a6a0e1fe","status":"failed","statusDetails":"AssertionError: assert 'error' not in {'error': {'code': -32005, 'data': {'see': 'https://infura.io/dashboard'}, 'message': 'daily request count exceeded, request rate limited'}, 'id': 0, 'jsonrpc': '2.0'}","time":{"start":1731164674897,"stop":1731164674959,"duration":62}},{"uid":"e698343be1f81235","status":"failed","statusDetails":"AssertionError: assert 'error' not in {'error': {'code': -32005, 'data': {'see': 'https://infura.io/dashboard'}, 'message': 'daily request count exceeded, request rate limited'}, 'id': 0, 'jsonrpc': '2.0'}","time":{"start":1731164669462,"stop":1731164669799,"duration":337}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":50,"unknown":0,"total":51},"items":[{"uid":"df2a1748f3cf7547","reportUrl":"https://novasamatech.github.io/test-runner/5820//#testresult/df2a1748f3cf7547","status":"passed","time":{"start":1731143058581,"stop":1731143059354,"duration":773}},{"uid":"f93bb0d1dc5059f9","reportUrl":"https://novasamatech.github.io/test-runner/5819//#testresult/f93bb0d1dc5059f9","status":"passed","time":{"start":1731078263448,"stop":1731078264452,"duration":1004}},{"uid":"ffccb057c9992e64","reportUrl":"https://novasamatech.github.io/test-runner/5818//#testresult/ffccb057c9992e64","status":"passed","time":{"start":1731056680117,"stop":1731056681303,"duration":1186}},{"uid":"d68db5358376774a","reportUrl":"https://novasamatech.github.io/test-runner/5817//#testresult/d68db5358376774a","status":"passed","time":{"start":1730991859092,"stop":1730991859994,"duration":902}},{"uid":"8facb62f2127559f","reportUrl":"https://novasamatech.github.io/test-runner/5816//#testresult/8facb62f2127559f","status":"passed","time":{"start":1730970280924,"stop":1730970281516,"duration":592}},{"uid":"3d89f148723622f5","reportUrl":"https://novasamatech.github.io/test-runner/5815//#testresult/3d89f148723622f5","status":"passed","time":{"start":1730905468195,"stop":1730905469189,"duration":994}},{"uid":"a78e10ee19a8e9bd","reportUrl":"https://novasamatech.github.io/test-runner/5814//#testresult/a78e10ee19a8e9bd","status":"passed","time":{"start":1730883888709,"stop":1730883889468,"duration":759}},{"uid":"4904d02c781360d5","reportUrl":"https://novasamatech.github.io/test-runner/5813//#testresult/4904d02c781360d5","status":"passed","time":{"start":1730819090691,"stop":1730819091689,"duration":998}},{"uid":"eb3e2500fb7d1e74","reportUrl":"https://novasamatech.github.io/test-runner/5812//#testresult/eb3e2500fb7d1e74","status":"passed","time":{"start":1730797482228,"stop":1730797483132,"duration":904}},{"uid":"11b5138bb9ba60d6","reportUrl":"https://novasamatech.github.io/test-runner/5811//#testresult/11b5138bb9ba60d6","status":"passed","time":{"start":1730732686644,"stop":1730732687716,"duration":1072}},{"uid":"f4a2087e72727670","reportUrl":"https://novasamatech.github.io/test-runner/5810//#testresult/f4a2087e72727670","status":"passed","time":{"start":1730711114436,"stop":1730711115272,"duration":836}},{"uid":"eff6dad0f43ff7f1","reportUrl":"https://novasamatech.github.io/test-runner/5809//#testresult/eff6dad0f43ff7f1","status":"passed","time":{"start":1730646262113,"stop":1730646263537,"duration":1424}},{"uid":"5a23b76faf42af0d","reportUrl":"https://novasamatech.github.io/test-runner/5808//#testresult/5a23b76faf42af0d","status":"passed","time":{"start":1730624717064,"stop":1730624718132,"duration":1068}},{"uid":"62c9be8103636e03","reportUrl":"https://novasamatech.github.io/test-runner/5807//#testresult/62c9be8103636e03","status":"passed","time":{"start":1730559903568,"stop":1730559904560,"duration":992}},{"uid":"57698a6540a5d3fb","reportUrl":"https://novasamatech.github.io/test-runner/5806//#testresult/57698a6540a5d3fb","status":"passed","time":{"start":1730538268260,"stop":1730538269078,"duration":818}},{"uid":"2a17a795ce607ecc","reportUrl":"https://novasamatech.github.io/test-runner/5805//#testresult/2a17a795ce607ecc","status":"passed","time":{"start":1730473479972,"stop":1730473481324,"duration":1352}},{"uid":"4f1cde15fd3d7d7e","reportUrl":"https://novasamatech.github.io/test-runner/5804//#testresult/4f1cde15fd3d7d7e","status":"passed","time":{"start":1730451907410,"stop":1730451908518,"duration":1108}},{"uid":"bba010106856d1d","reportUrl":"https://novasamatech.github.io/test-runner/5803//#testresult/bba010106856d1d","status":"passed","time":{"start":1730387076383,"stop":1730387077787,"duration":1404}},{"uid":"563b98b61142be34","reportUrl":"https://novasamatech.github.io/test-runner/5802//#testresult/563b98b61142be34","status":"passed","time":{"start":1730365480847,"stop":1730365482018,"duration":1171}},{"uid":"80a9b83947bc94e3","reportUrl":"https://novasamatech.github.io/test-runner/5801//#testresult/80a9b83947bc94e3","status":"passed","time":{"start":1730300677502,"stop":1730300678396,"duration":894}}]},"tags":[]},"source":"f22bcb9867aaf9c3.json","parameterValues":["{'url': 'https://1rpc.io/eth', 'name': 'Ethereum'}"]}