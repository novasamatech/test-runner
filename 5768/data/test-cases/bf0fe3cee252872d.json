{"uid":"bf0fe3cee252872d","name":"test_can_create_connection[Test for Bajun, url: wss://rpc-parachain.bajun.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"06269b76fd98506b84c27aec414e36f1","time":{"start":1728907212529,"stop":1728907212529,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1728907202282,"stop":1728907203074,"duration":792},"status":"broken","statusMessage":"OSError: [Errno 101] Network is unreachable\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 256, in connect\n    self.sock, addrs = connect(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 141, in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 228, in _open_socket\n    raise err\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 205, in _open_socket\n    sock.connect(address)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1728907208168,"stop":1728907212529,"duration":4361},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"ccfbcf05e82ce7","name":"stdout","source":"ccfbcf05e82ce7.txt","type":"text/plain","size":119}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1198-989"},{"name":"thread","value":"2186-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://rpc-parachain.bajun.network', 'name': 'Bajun'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"41af576da5ec7820","status":"broken","statusDetails":"OSError: [Errno 101] Network is unreachable","time":{"start":1728907202281,"stop":1728907202281,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":193,"unknown":0,"total":197},"items":[{"uid":"516659b8abe533a1","reportUrl":"https://novasamatech.github.io/test-runner/5767//#testresult/516659b8abe533a1","status":"passed","time":{"start":1728896846229,"stop":1728896846229,"duration":0}},{"uid":"31f0b65270b7176b","reportUrl":"https://novasamatech.github.io/test-runner/5766//#testresult/31f0b65270b7176b","status":"passed","time":{"start":1728832018440,"stop":1728832018440,"duration":0}},{"uid":"b2581ab26fea6c8a","reportUrl":"https://novasamatech.github.io/test-runner/5765//#testresult/b2581ab26fea6c8a","status":"passed","time":{"start":1728810411904,"stop":1728810411905,"duration":1}},{"uid":"64cf8a8308a193b1","reportUrl":"https://novasamatech.github.io/test-runner/5764//#testresult/64cf8a8308a193b1","status":"passed","time":{"start":1728745616881,"stop":1728745616881,"duration":0}},{"uid":"3995a38753fbc6fb","reportUrl":"https://novasamatech.github.io/test-runner/5763//#testresult/3995a38753fbc6fb","status":"passed","time":{"start":1728724068761,"stop":1728724068762,"duration":1}},{"uid":"d2c118f9e46d5c5a","reportUrl":"https://novasamatech.github.io/test-runner/5762//#testresult/d2c118f9e46d5c5a","status":"passed","time":{"start":1728659209424,"stop":1728659209424,"duration":0}},{"uid":"cbd89b956a4d108e","reportUrl":"https://novasamatech.github.io/test-runner/5761//#testresult/cbd89b956a4d108e","status":"passed","time":{"start":1728637638990,"stop":1728637638990,"duration":0}},{"uid":"611674e2e9d25f5d","reportUrl":"https://novasamatech.github.io/test-runner/5760//#testresult/611674e2e9d25f5d","status":"passed","time":{"start":1728572808472,"stop":1728572808472,"duration":0}},{"uid":"b987ce216bd2f7f4","reportUrl":"https://novasamatech.github.io/test-runner/5758//#testresult/b987ce216bd2f7f4","status":"passed","time":{"start":1728486398287,"stop":1728486398287,"duration":0}},{"uid":"abe69b9af35ace6c","reportUrl":"https://novasamatech.github.io/test-runner/5757//#testresult/abe69b9af35ace6c","status":"passed","time":{"start":1728464841488,"stop":1728464841488,"duration":0}},{"uid":"92826477dcd2f4a8","reportUrl":"https://novasamatech.github.io/test-runner/5756//#testresult/92826477dcd2f4a8","status":"passed","time":{"start":1728400023660,"stop":1728400023661,"duration":1}},{"uid":"ff45af86b718b8bd","reportUrl":"https://novasamatech.github.io/test-runner/5755//#testresult/ff45af86b718b8bd","status":"passed","time":{"start":1728378409314,"stop":1728378409314,"duration":0}},{"uid":"d7971d23972f7ac2","reportUrl":"https://novasamatech.github.io/test-runner/5754//#testresult/d7971d23972f7ac2","status":"passed","time":{"start":1728313626687,"stop":1728313626687,"duration":0}},{"uid":"24e035752c6077d0","reportUrl":"https://novasamatech.github.io/test-runner/5753//#testresult/24e035752c6077d0","status":"passed","time":{"start":1728292030104,"stop":1728292030104,"duration":0}},{"uid":"aec9eda4458bb087","reportUrl":"https://novasamatech.github.io/test-runner/5752//#testresult/aec9eda4458bb087","status":"passed","time":{"start":1728227237973,"stop":1728227237974,"duration":1}},{"uid":"9c479134bd3f4eb8","reportUrl":"https://novasamatech.github.io/test-runner/5751//#testresult/9c479134bd3f4eb8","status":"passed","time":{"start":1728205668693,"stop":1728205668693,"duration":0}},{"uid":"aebc9cf1f322260c","reportUrl":"https://novasamatech.github.io/test-runner/5750//#testresult/aebc9cf1f322260c","status":"passed","time":{"start":1728140832309,"stop":1728140832309,"duration":0}},{"uid":"cb8be71d9970ed97","reportUrl":"https://novasamatech.github.io/test-runner/5749//#testresult/cb8be71d9970ed97","status":"passed","time":{"start":1728119271988,"stop":1728119271988,"duration":0}},{"uid":"ed5757032ca23a10","reportUrl":"https://novasamatech.github.io/test-runner/5748//#testresult/ed5757032ca23a10","status":"passed","time":{"start":1728054412831,"stop":1728054412831,"duration":0}},{"uid":"18658794b0ba3c95","reportUrl":"https://novasamatech.github.io/test-runner/5747//#testresult/18658794b0ba3c95","status":"passed","time":{"start":1728032869427,"stop":1728032869427,"duration":0}}]},"tags":[]},"source":"bf0fe3cee252872d.json","parameterValues":["{'url': 'wss://rpc-parachain.bajun.network', 'name': 'Bajun'}"]}