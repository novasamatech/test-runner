{"uid":"e9d906319f8eab28","name":"test_rpc_method_is_available[Test for Litentry, url: wss://rpc.litentry-parachain.litentry.io]","fullName":"tests.test_rpc_methods_availability#test_rpc_method_is_available","historyId":"e169e76210a39e7fff35419ce09ae4ec","time":{"start":1737990526388,"stop":1737990526461,"duration":73},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1737990515202,"stop":1737990516002,"duration":800},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'content-length': '157', 'content-type': 'text/html', 'date': 'Mon, 27 Jan 2025 15:08:35 GMT', 'server': 'nginx/1.27.0'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.27.0</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n                     ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1737990521077,"stop":1737990526388,"duration":5311},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"fa58521d5b2c2f1b","name":"stdout","source":"fa58521d5b2c2f1b.txt","type":"text/plain","size":433}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_rpc_methods_availability"},{"name":"host","value":"fv-az1335-582"},{"name":"thread","value":"5124-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_rpc_methods_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://rpc.litentry-parachain.litentry.io', 'name': 'Litentry'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b74a50f922fe4f7a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'content-length': '157', 'content-type': 'text/html', 'date': 'Mon, 27 Jan 2025 15:08:35 GMT', 'server': 'nginx/1.27.0'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.27.0</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1737990515201,"stop":1737990515201,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":38,"unknown":0,"total":38},"items":[{"uid":"4ca0dc4de7be6bf2","reportUrl":"https://novasamatech.github.io/test-runner/5982//#testresult/4ca0dc4de7be6bf2","status":"passed","time":{"start":1737968970692,"stop":1737968970810,"duration":118}},{"uid":"191d2fdb819bb788","reportUrl":"https://novasamatech.github.io/test-runner/5981//#testresult/191d2fdb819bb788","status":"passed","time":{"start":1737904074177,"stop":1737904074244,"duration":67}},{"uid":"6992478a34ec5e55","reportUrl":"https://novasamatech.github.io/test-runner/5980//#testresult/6992478a34ec5e55","status":"passed","time":{"start":1737882464390,"stop":1737882464460,"duration":70}},{"uid":"422cc3c78a3440c1","reportUrl":"https://novasamatech.github.io/test-runner/5979//#testresult/422cc3c78a3440c1","status":"passed","time":{"start":1737817649611,"stop":1737817649714,"duration":103}},{"uid":"718f5202d6a021c8","reportUrl":"https://novasamatech.github.io/test-runner/5978//#testresult/718f5202d6a021c8","status":"passed","time":{"start":1737796046760,"stop":1737796046830,"duration":70}},{"uid":"ed0c295a8a9ee39a","reportUrl":"https://novasamatech.github.io/test-runner/5977//#testresult/ed0c295a8a9ee39a","status":"passed","time":{"start":1737731313236,"stop":1737731313305,"duration":69}},{"uid":"32afce0a52930907","reportUrl":"https://novasamatech.github.io/test-runner/5976//#testresult/32afce0a52930907","status":"passed","time":{"start":1737709710447,"stop":1737709710515,"duration":68}},{"uid":"cdd4eccb5c08de18","reportUrl":"https://novasamatech.github.io/test-runner/5975//#testresult/cdd4eccb5c08de18","status":"passed","time":{"start":1737644909231,"stop":1737644909325,"duration":94}},{"uid":"6a8405a646fb7c97","reportUrl":"https://novasamatech.github.io/test-runner/5974//#testresult/6a8405a646fb7c97","status":"passed","time":{"start":1737623330862,"stop":1737623330967,"duration":105}},{"uid":"6a21bf77b8b6392c","reportUrl":"https://novasamatech.github.io/test-runner/5973//#testresult/6a21bf77b8b6392c","status":"passed","time":{"start":1737558487774,"stop":1737558487847,"duration":73}},{"uid":"472d2f9065b3d6db","reportUrl":"https://novasamatech.github.io/test-runner/5972//#testresult/472d2f9065b3d6db","status":"passed","time":{"start":1737536905677,"stop":1737536905771,"duration":94}},{"uid":"f8a8bc0da4118252","reportUrl":"https://novasamatech.github.io/test-runner/5971//#testresult/f8a8bc0da4118252","status":"passed","time":{"start":1737472075565,"stop":1737472075636,"duration":71}},{"uid":"78b1d5e176b8566c","reportUrl":"https://novasamatech.github.io/test-runner/5970//#testresult/78b1d5e176b8566c","status":"passed","time":{"start":1737450494818,"stop":1737450494931,"duration":113}},{"uid":"5536d344ad72f83b","reportUrl":"https://novasamatech.github.io/test-runner/5969//#testresult/5536d344ad72f83b","status":"passed","time":{"start":1737385741708,"stop":1737385741779,"duration":71}},{"uid":"10cdccf329e6b3cd","reportUrl":"https://novasamatech.github.io/test-runner/5968//#testresult/10cdccf329e6b3cd","status":"passed","time":{"start":1737364216782,"stop":1737364216898,"duration":116}},{"uid":"2c94963d2a1cc8a7","reportUrl":"https://novasamatech.github.io/test-runner/5967//#testresult/2c94963d2a1cc8a7","status":"passed","time":{"start":1737299352872,"stop":1737299352940,"duration":68}},{"uid":"8a3d5b3a24991c51","reportUrl":"https://novasamatech.github.io/test-runner/5966//#testresult/8a3d5b3a24991c51","status":"passed","time":{"start":1737277692445,"stop":1737277692517,"duration":72}},{"uid":"f5e58a6ca116c455","reportUrl":"https://novasamatech.github.io/test-runner/5965//#testresult/f5e58a6ca116c455","status":"passed","time":{"start":1737212871198,"stop":1737212871249,"duration":51}},{"uid":"9f50cb28adf5ece5","reportUrl":"https://novasamatech.github.io/test-runner/5964//#testresult/9f50cb28adf5ece5","status":"passed","time":{"start":1737191282307,"stop":1737191282386,"duration":79}},{"uid":"596ffbdc96ab372b","reportUrl":"https://novasamatech.github.io/test-runner/5963//#testresult/596ffbdc96ab372b","status":"passed","time":{"start":1737126508884,"stop":1737126508951,"duration":67}}]},"tags":[]},"source":"e9d906319f8eab28.json","parameterValues":["{'url': 'wss://rpc.litentry-parachain.litentry.io', 'name': 'Litentry'}"]}