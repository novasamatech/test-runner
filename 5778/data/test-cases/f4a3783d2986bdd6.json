{"uid":"f4a3783d2986bdd6","name":"test_can_create_connection[Test for Kusama, url: wss://kusama.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"04d2da413eab4f2e9d3d030b6cb0949b","time":{"start":1729328688228,"stop":1729328688228,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Sat, 19 Oct 2024 09:04:48 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '10', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': 'ea24d33fc748ad71d5b2480985180519'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1847564545321598976}'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Kusama, url: wss://kusama.api.onfinality.io/public-ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Sat, 19 Oct 2024 09:04:48 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '10', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': 'ea24d33fc748ad71d5b2480985180519'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1847564545321598976}'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1729328677678,"stop":1729328677859,"duration":181},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Sat, 19 Oct 2024 09:04:37 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '9', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': '1add06629e056f0c3802281693f4e668'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1847564501264629760}'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1729328683027,"stop":1729328683171,"duration":144},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Sat, 19 Oct 2024 09:04:43 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '9', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': '85e06c0166f77f1543af572fcaa21f76'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1847564523540578304}'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1729328688228,"stop":1729328688365,"duration":137},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Sat, 19 Oct 2024 09:04:48 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '10', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': 'ea24d33fc748ad71d5b2480985180519'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1847564545321598976}'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Sat, 19 Oct 2024 09:04:48 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '10', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': 'ea24d33fc748ad71d5b2480985180519'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1847564545321598976}'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Kusama, url: wss://kusama.api.onfinality.io/public-ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Sat, 19 Oct 2024 09:04:48 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '10', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': 'ea24d33fc748ad71d5b2480985180519'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1847564545321598976}'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"2c0c3f8eb06fd465","name":"stdout","source":"2c0c3f8eb06fd465.txt","type":"text/plain","size":1927}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1113-88"},{"name":"thread","value":"2095-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://kusama.api.onfinality.io/public-ws', 'name': 'Kusama'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7ef34831043d84e6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Sat, 19 Oct 2024 09:04:43 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '9', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': '85e06c0166f77f1543af572fcaa21f76'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1847564523540578304}'","time":{"start":1729328683027,"stop":1729328683027,"duration":0}},{"uid":"f4df7f3be735509a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Sat, 19 Oct 2024 09:04:37 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '9', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': '1add06629e056f0c3802281693f4e668'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1847564501264629760}'","time":{"start":1729328677676,"stop":1729328677676,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":6,"unknown":0,"total":8},"items":[{"uid":"c9a8a738f5fd73d2","reportUrl":"https://novasamatech.github.io/test-runner/5777//#testresult/c9a8a738f5fd73d2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Fri, 18 Oct 2024 15:05:14 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '11', 'x-kong-proxy-latency': '1', 'via': 'kong/3.6.1', 'x-kong-request-id': '40a2ad5d9ad4144fa742db0f190a176b'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1847292862882906112}'","time":{"start":1729263913938,"stop":1729263913938,"duration":0}},{"uid":"c711459cdc0041c1","reportUrl":"https://novasamatech.github.io/test-runner/5776//#testresult/c711459cdc0041c1","status":"passed","time":{"start":1729242340502,"stop":1729242340503,"duration":1}},{"uid":"496c749f787d9db6","reportUrl":"https://novasamatech.github.io/test-runner/5775//#testresult/496c749f787d9db6","status":"passed","time":{"start":1729177473518,"stop":1729177473518,"duration":0}},{"uid":"a603b3f029e09485","reportUrl":"https://novasamatech.github.io/test-runner/5774//#testresult/a603b3f029e09485","status":"passed","time":{"start":1729155901225,"stop":1729155901225,"duration":0}},{"uid":"74fd542b15fce8ab","reportUrl":"https://novasamatech.github.io/test-runner/5773//#testresult/74fd542b15fce8ab","status":"passed","time":{"start":1729091107004,"stop":1729091107004,"duration":0}},{"uid":"201fb5d82daac82b","reportUrl":"https://novasamatech.github.io/test-runner/5772//#testresult/201fb5d82daac82b","status":"passed","time":{"start":1729069509660,"stop":1729069509660,"duration":0}},{"uid":"bf0d17c0e1a5c5e7","reportUrl":"https://novasamatech.github.io/test-runner/5771//#testresult/bf0d17c0e1a5c5e7","status":"passed","time":{"start":1729004708347,"stop":1729004708348,"duration":1}}]},"tags":[]},"source":"f4a3783d2986bdd6.json","parameterValues":["{'url': 'wss://kusama.api.onfinality.io/public-ws', 'name': 'Kusama'}"]}