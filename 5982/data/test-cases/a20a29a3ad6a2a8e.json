{"uid":"a20a29a3ad6a2a8e","name":"test_can_create_connection[Test for Litentry, url: wss://rpc.litentry-parachain.litentry.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"9c560a9ef18ba5b1bbc9b73618259a12","time":{"start":1737968948535,"stop":1737968948535,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1737968937378,"stop":1737968938181,"duration":803},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'content-length': '157', 'content-type': 'text/html', 'date': 'Mon, 27 Jan 2025 09:08:58 GMT', 'server': 'nginx/1.27.0'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.27.0</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n                     ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1737968943242,"stop":1737968948535,"duration":5293},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"2c171afa3945bdc4","name":"stdout","source":"2c171afa3945bdc4.txt","type":"text/plain","size":433}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az813-161"},{"name":"thread","value":"5164-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://rpc.litentry-parachain.litentry.io', 'name': 'Litentry'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1b93f61137fc10bf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'content-length': '157', 'content-type': 'text/html', 'date': 'Mon, 27 Jan 2025 09:08:58 GMT', 'server': 'nginx/1.27.0'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.27.0</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1737968937377,"stop":1737968937377,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":37,"unknown":0,"total":37},"items":[{"uid":"c4a70981cfa8b897","reportUrl":"https://novasamatech.github.io/test-runner/5981//#testresult/c4a70981cfa8b897","status":"passed","time":{"start":1737904078605,"stop":1737904078605,"duration":0}},{"uid":"e8194481060ca714","reportUrl":"https://novasamatech.github.io/test-runner/5980//#testresult/e8194481060ca714","status":"passed","time":{"start":1737882459342,"stop":1737882459343,"duration":1}},{"uid":"de1ac2f6326a8d0d","reportUrl":"https://novasamatech.github.io/test-runner/5979//#testresult/de1ac2f6326a8d0d","status":"passed","time":{"start":1737817636893,"stop":1737817636893,"duration":0}},{"uid":"5865c75c474db9c2","reportUrl":"https://novasamatech.github.io/test-runner/5978//#testresult/5865c75c474db9c2","status":"passed","time":{"start":1737796044987,"stop":1737796044987,"duration":0}},{"uid":"cd5d16469f4c6429","reportUrl":"https://novasamatech.github.io/test-runner/5977//#testresult/cd5d16469f4c6429","status":"passed","time":{"start":1737731265039,"stop":1737731265039,"duration":0}},{"uid":"74518bd70b5606dc","reportUrl":"https://novasamatech.github.io/test-runner/5976//#testresult/74518bd70b5606dc","status":"passed","time":{"start":1737709719219,"stop":1737709719219,"duration":0}},{"uid":"8ff0ce37d5a8d026","reportUrl":"https://novasamatech.github.io/test-runner/5975//#testresult/8ff0ce37d5a8d026","status":"passed","time":{"start":1737644877210,"stop":1737644877210,"duration":0}},{"uid":"8e94dada2fbd34e9","reportUrl":"https://novasamatech.github.io/test-runner/5974//#testresult/8e94dada2fbd34e9","status":"passed","time":{"start":1737623327048,"stop":1737623327049,"duration":1}},{"uid":"6a18dcfc55dd56c8","reportUrl":"https://novasamatech.github.io/test-runner/5973//#testresult/6a18dcfc55dd56c8","status":"passed","time":{"start":1737558541200,"stop":1737558541200,"duration":0}},{"uid":"5cb625947d3ddfeb","reportUrl":"https://novasamatech.github.io/test-runner/5972//#testresult/5cb625947d3ddfeb","status":"passed","time":{"start":1737536932700,"stop":1737536932700,"duration":0}},{"uid":"63163098e316ba04","reportUrl":"https://novasamatech.github.io/test-runner/5971//#testresult/63163098e316ba04","status":"passed","time":{"start":1737472088882,"stop":1737472088882,"duration":0}},{"uid":"c29ba2484abaad0c","reportUrl":"https://novasamatech.github.io/test-runner/5970//#testresult/c29ba2484abaad0c","status":"passed","time":{"start":1737450507335,"stop":1737450507335,"duration":0}},{"uid":"1da0d5a82eb990a","reportUrl":"https://novasamatech.github.io/test-runner/5969//#testresult/1da0d5a82eb990a","status":"passed","time":{"start":1737385690310,"stop":1737385690311,"duration":1}},{"uid":"3e66834f5eb96a73","reportUrl":"https://novasamatech.github.io/test-runner/5968//#testresult/3e66834f5eb96a73","status":"passed","time":{"start":1737364176854,"stop":1737364176854,"duration":0}},{"uid":"285b0e4eeea0aec2","reportUrl":"https://novasamatech.github.io/test-runner/5967//#testresult/285b0e4eeea0aec2","status":"passed","time":{"start":1737299336348,"stop":1737299336348,"duration":0}},{"uid":"8bdea474e6d14b3f","reportUrl":"https://novasamatech.github.io/test-runner/5966//#testresult/8bdea474e6d14b3f","status":"passed","time":{"start":1737277708429,"stop":1737277708429,"duration":0}},{"uid":"20d49ea67df28040","reportUrl":"https://novasamatech.github.io/test-runner/5965//#testresult/20d49ea67df28040","status":"passed","time":{"start":1737212882507,"stop":1737212882507,"duration":0}},{"uid":"390e565495f42500","reportUrl":"https://novasamatech.github.io/test-runner/5964//#testresult/390e565495f42500","status":"passed","time":{"start":1737191302028,"stop":1737191302028,"duration":0}},{"uid":"73ca32cc5469ad0e","reportUrl":"https://novasamatech.github.io/test-runner/5963//#testresult/73ca32cc5469ad0e","status":"passed","time":{"start":1737126465897,"stop":1737126465897,"duration":0}},{"uid":"349874d39d347285","reportUrl":"https://novasamatech.github.io/test-runner/5962//#testresult/349874d39d347285","status":"passed","time":{"start":1737104917354,"stop":1737104917354,"duration":0}}]},"tags":[]},"source":"a20a29a3ad6a2a8e.json","parameterValues":["{'url': 'wss://rpc.litentry-parachain.litentry.io', 'name': 'Litentry'}"]}