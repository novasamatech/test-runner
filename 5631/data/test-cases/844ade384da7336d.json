{"uid":"844ade384da7336d","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"900a02a36e60d19a7ffc41e41fa7d34d","time":{"start":1723129613476,"stop":1723129613476,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1723129596762,"stop":1723129602368,"duration":5606},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1723129607481,"stop":1723129613476,"duration":5995},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"f4acb149eab37b7c","name":"stdout","source":"f4acb149eab37b7c.txt","type":"text/plain","size":195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az730-916"},{"name":"thread","value":"2118-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"929d8ed8c3cb0fb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1723129596761,"stop":1723129596761,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":67,"unknown":0,"total":67},"items":[{"uid":"def6d30f86aa3fb7","reportUrl":"https://novasamatech.github.io/test-runner/5630//#testresult/def6d30f86aa3fb7","status":"passed","time":{"start":1723108018305,"stop":1723108018305,"duration":0}},{"uid":"8be67ecadccd18f2","reportUrl":"https://novasamatech.github.io/test-runner/5629//#testresult/8be67ecadccd18f2","status":"passed","time":{"start":1723043193805,"stop":1723043193805,"duration":0}},{"uid":"734c36044350e5d6","reportUrl":"https://novasamatech.github.io/test-runner/5628//#testresult/734c36044350e5d6","status":"passed","time":{"start":1723021621478,"stop":1723021621479,"duration":1}},{"uid":"339bb2c8f295693","reportUrl":"https://novasamatech.github.io/test-runner/5627//#testresult/339bb2c8f295693","status":"passed","time":{"start":1722956854006,"stop":1722956854006,"duration":0}},{"uid":"d4d7a1df508f5ad6","reportUrl":"https://novasamatech.github.io/test-runner/5626//#testresult/d4d7a1df508f5ad6","status":"passed","time":{"start":1722935217630,"stop":1722935217631,"duration":1}},{"uid":"aaf3d418fec176e8","reportUrl":"https://novasamatech.github.io/test-runner/5625//#testresult/aaf3d418fec176e8","status":"passed","time":{"start":1722870382887,"stop":1722870382887,"duration":0}},{"uid":"4d6ec5ff6254a6d9","reportUrl":"https://novasamatech.github.io/test-runner/5624//#testresult/4d6ec5ff6254a6d9","status":"passed","time":{"start":1722848786727,"stop":1722848786727,"duration":0}},{"uid":"118e750af368116e","reportUrl":"https://novasamatech.github.io/test-runner/5623//#testresult/118e750af368116e","status":"passed","time":{"start":1722784054700,"stop":1722784054700,"duration":0}},{"uid":"ba8958c1299db442","reportUrl":"https://novasamatech.github.io/test-runner/5622//#testresult/ba8958c1299db442","status":"passed","time":{"start":1722762399294,"stop":1722762399294,"duration":0}},{"uid":"630e183a897da994","reportUrl":"https://novasamatech.github.io/test-runner/5621//#testresult/630e183a897da994","status":"passed","time":{"start":1722697578742,"stop":1722697578742,"duration":0}},{"uid":"baa826689ed1c77e","reportUrl":"https://novasamatech.github.io/test-runner/5620//#testresult/baa826689ed1c77e","status":"passed","time":{"start":1722676021455,"stop":1722676021455,"duration":0}},{"uid":"45397038bf3c2ae5","reportUrl":"https://novasamatech.github.io/test-runner/5619//#testresult/45397038bf3c2ae5","status":"passed","time":{"start":1722611226647,"stop":1722611226647,"duration":0}},{"uid":"4398eefd13016a45","reportUrl":"https://novasamatech.github.io/test-runner/5618//#testresult/4398eefd13016a45","status":"passed","time":{"start":1722589662629,"stop":1722589662629,"duration":0}},{"uid":"e67086b6d8941dcd","reportUrl":"https://novasamatech.github.io/test-runner/5617//#testresult/e67086b6d8941dcd","status":"passed","time":{"start":1722524794448,"stop":1722524794448,"duration":0}},{"uid":"dfde5d36a899466f","reportUrl":"https://novasamatech.github.io/test-runner/5616//#testresult/dfde5d36a899466f","status":"passed","time":{"start":1722503176513,"stop":1722503176513,"duration":0}},{"uid":"3b9178080a9b6fc2","reportUrl":"https://novasamatech.github.io/test-runner/5615//#testresult/3b9178080a9b6fc2","status":"passed","time":{"start":1722438374313,"stop":1722438374313,"duration":0}},{"uid":"24d2b820488725e9","reportUrl":"https://novasamatech.github.io/test-runner/5614//#testresult/24d2b820488725e9","status":"passed","time":{"start":1722416811540,"stop":1722416811540,"duration":0}},{"uid":"a84057a53bdec260","reportUrl":"https://novasamatech.github.io/test-runner/5613//#testresult/a84057a53bdec260","status":"passed","time":{"start":1722352002362,"stop":1722352002362,"duration":0}},{"uid":"8340cc2cf6af4781","reportUrl":"https://novasamatech.github.io/test-runner/5612//#testresult/8340cc2cf6af4781","status":"passed","time":{"start":1722330371357,"stop":1722330371357,"duration":0}},{"uid":"afa073b8c223dd3e","reportUrl":"https://novasamatech.github.io/test-runner/5611//#testresult/afa073b8c223dd3e","status":"passed","time":{"start":1722265600717,"stop":1722265600718,"duration":1}}]},"tags":[]},"source":"844ade384da7336d.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}