{"uid":"30671a96245da6ea","name":"test_rpc_node_is_synced[Test for Cere, url: wss://rpc.mainnet.cere.network/ws]","fullName":"tests.test_substrate_node_is_synced#test_rpc_node_is_synced","historyId":"ef657998e4118dd9d45534e2321c0d73","time":{"start":1728896964887,"stop":1728896964887,"duration":0},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_node_is_synced[Test for Cere, url: wss://rpc.mainnet.cere.network/ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:256: in connect\n    self.sock, addrs = connect(\n.venv/lib/python3.10/site-packages/websocket/_http.py:147: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:307: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:277: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1100: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1371: SSLCertVerificationError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1728896964887,"stop":1728896965387,"duration":500},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 256, in connect\n    self.sock, addrs = connect(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 147, in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 307, in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 277, in _wrap_sni_socket\n    return context.wrap_socket(\n  File \"/usr/lib/python3.10/ssl.py\", line 513, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/lib/python3.10/ssl.py\", line 1100, in _create\n    self.do_handshake()\n  File \"/usr/lib/python3.10/ssl.py\", line 1371, in do_handshake\n    self._sslobj.do_handshake()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_node_is_synced[Test for Cere, url: wss://rpc.mainnet.cere.network/ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:256: in connect\n    self.sock, addrs = connect(\n.venv/lib/python3.10/site-packages/websocket/_http.py:147: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:307: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:277: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1100: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1371: SSLCertVerificationError","steps":[],"attachments":[{"uid":"eb720e31b51a0de3","name":"stdout","source":"eb720e31b51a0de3.txt","type":"text/plain","size":546}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_substrate_node_is_synced"},{"name":"host","value":"fv-az1530-664"},{"name":"thread","value":"2228-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_substrate_node_is_synced"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://rpc.mainnet.cere.network/ws', 'name': 'Cere'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5518c33b0576f91","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","time":{"start":1728896959308,"stop":1728896959308,"duration":0}},{"uid":"9d22574dbc5f69","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","time":{"start":1728896953566,"stop":1728896953566,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":78,"unknown":0,"total":79},"items":[{"uid":"494fe18fc50ae2b6","reportUrl":"https://novasamatech.github.io/test-runner/5766//#testresult/494fe18fc50ae2b6","status":"passed","time":{"start":1728832082055,"stop":1728832082135,"duration":80}},{"uid":"56d5ecb450b47646","reportUrl":"https://novasamatech.github.io/test-runner/5765//#testresult/56d5ecb450b47646","status":"passed","time":{"start":1728810487739,"stop":1728810487831,"duration":92}},{"uid":"7c3984b3fca0da76","reportUrl":"https://novasamatech.github.io/test-runner/5764//#testresult/7c3984b3fca0da76","status":"passed","time":{"start":1728745683453,"stop":1728745683533,"duration":80}},{"uid":"6b2a8052d7bbc579","reportUrl":"https://novasamatech.github.io/test-runner/5763//#testresult/6b2a8052d7bbc579","status":"passed","time":{"start":1728724159060,"stop":1728724159218,"duration":158}},{"uid":"cf32c6c509fa6a0f","reportUrl":"https://novasamatech.github.io/test-runner/5762//#testresult/cf32c6c509fa6a0f","status":"passed","time":{"start":1728659278261,"stop":1728659278341,"duration":80}},{"uid":"9ef59eb0f59887b9","reportUrl":"https://novasamatech.github.io/test-runner/5761//#testresult/9ef59eb0f59887b9","status":"passed","time":{"start":1728637690784,"stop":1728637690876,"duration":92}},{"uid":"7feda84e34d84473","reportUrl":"https://novasamatech.github.io/test-runner/5760//#testresult/7feda84e34d84473","status":"passed","time":{"start":1728572906534,"stop":1728572906664,"duration":130}},{"uid":"4df9879796fe714c","reportUrl":"https://novasamatech.github.io/test-runner/5759//#testresult/4df9879796fe714c","status":"passed","time":{"start":1728551324759,"stop":1728551324854,"duration":95}},{"uid":"332da6c02e089085","reportUrl":"https://novasamatech.github.io/test-runner/5758//#testresult/332da6c02e089085","status":"passed","time":{"start":1728486483781,"stop":1728486483875,"duration":94}},{"uid":"921430bd6fd4b679","reportUrl":"https://novasamatech.github.io/test-runner/5757//#testresult/921430bd6fd4b679","status":"passed","time":{"start":1728464911958,"stop":1728464912038,"duration":80}},{"uid":"64fad14d8ca810d","reportUrl":"https://novasamatech.github.io/test-runner/5756//#testresult/64fad14d8ca810d","status":"passed","time":{"start":1728400086484,"stop":1728400086573,"duration":89}},{"uid":"df9fd5104dd2ea99","reportUrl":"https://novasamatech.github.io/test-runner/5755//#testresult/df9fd5104dd2ea99","status":"passed","time":{"start":1728378499306,"stop":1728378499413,"duration":107}},{"uid":"f315249697e9d3dc","reportUrl":"https://novasamatech.github.io/test-runner/5754//#testresult/f315249697e9d3dc","status":"passed","time":{"start":1728313725809,"stop":1728313725956,"duration":147}},{"uid":"f8fdf1d6f0f363d1","reportUrl":"https://novasamatech.github.io/test-runner/5753//#testresult/f8fdf1d6f0f363d1","status":"passed","time":{"start":1728292131213,"stop":1728292131320,"duration":107}},{"uid":"4a0d6cbe10cd9c0d","reportUrl":"https://novasamatech.github.io/test-runner/5752//#testresult/4a0d6cbe10cd9c0d","status":"passed","time":{"start":1728227353220,"stop":1728227353351,"duration":131}},{"uid":"de23a92ca713cc5c","reportUrl":"https://novasamatech.github.io/test-runner/5751//#testresult/de23a92ca713cc5c","status":"passed","time":{"start":1728205739646,"stop":1728205739791,"duration":145}},{"uid":"b3a2d6e9c67f8985","reportUrl":"https://novasamatech.github.io/test-runner/5750//#testresult/b3a2d6e9c67f8985","status":"passed","time":{"start":1728140946415,"stop":1728140946561,"duration":146}},{"uid":"2bbb36e9d67b6df7","reportUrl":"https://novasamatech.github.io/test-runner/5749//#testresult/2bbb36e9d67b6df7","status":"passed","time":{"start":1728119354468,"stop":1728119354627,"duration":159}},{"uid":"f08328a45338532a","reportUrl":"https://novasamatech.github.io/test-runner/5748//#testresult/f08328a45338532a","status":"passed","time":{"start":1728054497384,"stop":1728054497475,"duration":91}},{"uid":"2c17d75954fb1ec2","reportUrl":"https://novasamatech.github.io/test-runner/5747//#testresult/2c17d75954fb1ec2","status":"passed","time":{"start":1728032941097,"stop":1728032941180,"duration":83}}]},"tags":[]},"source":"30671a96245da6ea.json","parameterValues":["{'url': 'wss://rpc.mainnet.cere.network/ws', 'name': 'Cere'}"]}