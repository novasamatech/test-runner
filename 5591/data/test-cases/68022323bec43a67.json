{"uid":"68022323bec43a67","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"900a02a36e60d19a7ffc41e41fa7d34d","time":{"start":1721401665043,"stop":1721401665043,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1721401636517,"stop":1721401642038,"duration":5521},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1721401647165,"stop":1721401652693,"duration":5528},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1721401657796,"stop":1721401665042,"duration":7246},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"88746469d64105eb","name":"stdout","source":"88746469d64105eb.txt","type":"text/plain","size":390}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az973-101"},{"name":"thread","value":"2095-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"649b99dcb0986a6a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1721401647165,"stop":1721401647165,"duration":0}},{"uid":"3e6dc322a0912fa","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1721401636516,"stop":1721401636516,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":27,"unknown":0,"total":27},"items":[{"uid":"638d2916abdd397a","reportUrl":"https://novasamatech.github.io/test-runner/5590//#testresult/638d2916abdd397a","status":"passed","time":{"start":1721379964122,"stop":1721379964122,"duration":0}},{"uid":"cfa1b78b4c3826d5","reportUrl":"https://novasamatech.github.io/test-runner/5589//#testresult/cfa1b78b4c3826d5","status":"passed","time":{"start":1721315257286,"stop":1721315257287,"duration":1}},{"uid":"675af00998ec942d","reportUrl":"https://novasamatech.github.io/test-runner/5588//#testresult/675af00998ec942d","status":"passed","time":{"start":1721293574289,"stop":1721293574289,"duration":0}},{"uid":"22d9ee609dfed895","reportUrl":"https://novasamatech.github.io/test-runner/5587//#testresult/22d9ee609dfed895","status":"passed","time":{"start":1721228830733,"stop":1721228830733,"duration":0}},{"uid":"6f03e3c325cb5aff","reportUrl":"https://novasamatech.github.io/test-runner/5586//#testresult/6f03e3c325cb5aff","status":"passed","time":{"start":1721207271532,"stop":1721207271532,"duration":0}},{"uid":"34faa30f631b26e","reportUrl":"https://novasamatech.github.io/test-runner/5585//#testresult/34faa30f631b26e","status":"passed","time":{"start":1721142404493,"stop":1721142404493,"duration":0}},{"uid":"c715ae1d16d25384","reportUrl":"https://novasamatech.github.io/test-runner/5584//#testresult/c715ae1d16d25384","status":"passed","time":{"start":1721120840678,"stop":1721120840678,"duration":0}},{"uid":"f9b0ca5cb7b2efb2","reportUrl":"https://novasamatech.github.io/test-runner/5583//#testresult/f9b0ca5cb7b2efb2","status":"passed","time":{"start":1721056080551,"stop":1721056080551,"duration":0}},{"uid":"2c9664de5e38ed10","reportUrl":"https://novasamatech.github.io/test-runner/5582//#testresult/2c9664de5e38ed10","status":"passed","time":{"start":1721034415505,"stop":1721034415505,"duration":0}},{"uid":"1a3b0271d0491e7","reportUrl":"https://novasamatech.github.io/test-runner/5581//#testresult/1a3b0271d0491e7","status":"passed","time":{"start":1720969770784,"stop":1720969770784,"duration":0}},{"uid":"a5c777b95c901eae","reportUrl":"https://novasamatech.github.io/test-runner/5580//#testresult/a5c777b95c901eae","status":"passed","time":{"start":1720947997593,"stop":1720947997593,"duration":0}},{"uid":"e1468814ce134b0","reportUrl":"https://novasamatech.github.io/test-runner/5579//#testresult/e1468814ce134b0","status":"passed","time":{"start":1720883199644,"stop":1720883199644,"duration":0}},{"uid":"5a4f5b76153f660a","reportUrl":"https://novasamatech.github.io/test-runner/5578//#testresult/5a4f5b76153f660a","status":"passed","time":{"start":1720861568052,"stop":1720861568052,"duration":0}},{"uid":"22368ca763c600de","reportUrl":"https://novasamatech.github.io/test-runner/5577//#testresult/22368ca763c600de","status":"passed","time":{"start":1720796801443,"stop":1720796801443,"duration":0}},{"uid":"199f9c6424896bd6","reportUrl":"https://novasamatech.github.io/test-runner/5576//#testresult/199f9c6424896bd6","status":"passed","time":{"start":1720775175520,"stop":1720775175520,"duration":0}},{"uid":"7b5c898d05fa336e","reportUrl":"https://novasamatech.github.io/test-runner/5575//#testresult/7b5c898d05fa336e","status":"passed","time":{"start":1720710401890,"stop":1720710401890,"duration":0}},{"uid":"9d60ca3b2a5e01fc","reportUrl":"https://novasamatech.github.io/test-runner/5574//#testresult/9d60ca3b2a5e01fc","status":"passed","time":{"start":1720688780557,"stop":1720688780557,"duration":0}},{"uid":"858394d67de483ed","reportUrl":"https://novasamatech.github.io/test-runner/5573//#testresult/858394d67de483ed","status":"passed","time":{"start":1720624018122,"stop":1720624018122,"duration":0}},{"uid":"17df9cb65f3f3610","reportUrl":"https://novasamatech.github.io/test-runner/5572//#testresult/17df9cb65f3f3610","status":"passed","time":{"start":1720602375693,"stop":1720602375693,"duration":0}},{"uid":"d835395013a9e8e0","reportUrl":"https://novasamatech.github.io/test-runner/5571//#testresult/d835395013a9e8e0","status":"passed","time":{"start":1720537586565,"stop":1720537586566,"duration":1}}]},"tags":[]},"source":"68022323bec43a67.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}