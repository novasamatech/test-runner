{"uid":"e49d0b941333b023","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"900a02a36e60d19a7ffc41e41fa7d34d","time":{"start":1734361657465,"stop":1734361657465,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1734361638822,"stop":1734361644427,"duration":5605},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1734361649493,"stop":1734361657464,"duration":7971},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"a4cc5fb749bee636","name":"stdout","source":"a4cc5fb749bee636.txt","type":"text/plain","size":195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az802-392"},{"name":"thread","value":"2115-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8eded48945c158f7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1734361638821,"stop":1734361638821,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":24,"skipped":0,"passed":101,"unknown":0,"total":125},"items":[{"uid":"a5c4cbaf206c7980","reportUrl":"https://novasamatech.github.io/test-runner/5894//#testresult/a5c4cbaf206c7980","status":"passed","time":{"start":1734340065050,"stop":1734340065050,"duration":0}},{"uid":"549ec06737462a00","reportUrl":"https://novasamatech.github.io/test-runner/5893//#testresult/549ec06737462a00","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1734275177897,"stop":1734275177897,"duration":0}},{"uid":"a323e3b558d1d815","reportUrl":"https://novasamatech.github.io/test-runner/5892//#testresult/a323e3b558d1d815","status":"passed","time":{"start":1734253560083,"stop":1734253560084,"duration":1}},{"uid":"cdc69a9d5d71c5a3","reportUrl":"https://novasamatech.github.io/test-runner/5891//#testresult/cdc69a9d5d71c5a3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1734188806821,"stop":1734188806821,"duration":0}},{"uid":"4399519740470f5","reportUrl":"https://novasamatech.github.io/test-runner/5890//#testresult/4399519740470f5","status":"passed","time":{"start":1734167167672,"stop":1734167167672,"duration":0}},{"uid":"224b28cecd69843a","reportUrl":"https://novasamatech.github.io/test-runner/5889//#testresult/224b28cecd69843a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1734102411268,"stop":1734102411268,"duration":0}},{"uid":"976649ad5af37d88","reportUrl":"https://novasamatech.github.io/test-runner/5888//#testresult/976649ad5af37d88","status":"passed","time":{"start":1734080803275,"stop":1734080803275,"duration":0}},{"uid":"110fbd94f082f323","reportUrl":"https://novasamatech.github.io/test-runner/5887//#testresult/110fbd94f082f323","status":"passed","time":{"start":1734016023823,"stop":1734016023823,"duration":0}},{"uid":"27d677ff86cb3b46","reportUrl":"https://novasamatech.github.io/test-runner/5886//#testresult/27d677ff86cb3b46","status":"passed","time":{"start":1733994412881,"stop":1733994412881,"duration":0}},{"uid":"221267f32bbd1bda","reportUrl":"https://novasamatech.github.io/test-runner/5885//#testresult/221267f32bbd1bda","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733929622211,"stop":1733929622211,"duration":0}},{"uid":"bbda394966a17c8c","reportUrl":"https://novasamatech.github.io/test-runner/5884//#testresult/bbda394966a17c8c","status":"passed","time":{"start":1733908009686,"stop":1733908009687,"duration":1}},{"uid":"1adf51824c2eaefd","reportUrl":"https://novasamatech.github.io/test-runner/5883//#testresult/1adf51824c2eaefd","status":"passed","time":{"start":1733843217423,"stop":1733843217423,"duration":0}},{"uid":"250b451a825006cd","reportUrl":"https://novasamatech.github.io/test-runner/5882//#testresult/250b451a825006cd","status":"passed","time":{"start":1733821696256,"stop":1733821696256,"duration":0}},{"uid":"d723cf9546f4c30f","reportUrl":"https://novasamatech.github.io/test-runner/5881//#testresult/d723cf9546f4c30f","status":"passed","time":{"start":1733756802681,"stop":1733756802681,"duration":0}},{"uid":"33a4f8a10129fb55","reportUrl":"https://novasamatech.github.io/test-runner/5880//#testresult/33a4f8a10129fb55","status":"passed","time":{"start":1733735248267,"stop":1733735248267,"duration":0}},{"uid":"ed66d0afde5c9e98","reportUrl":"https://novasamatech.github.io/test-runner/5879//#testresult/ed66d0afde5c9e98","status":"passed","time":{"start":1733670365226,"stop":1733670365226,"duration":0}},{"uid":"71a0065f9933fd8b","reportUrl":"https://novasamatech.github.io/test-runner/5878//#testresult/71a0065f9933fd8b","status":"passed","time":{"start":1733648782714,"stop":1733648782714,"duration":0}},{"uid":"fe17274beb5a9027","reportUrl":"https://novasamatech.github.io/test-runner/5877//#testresult/fe17274beb5a9027","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733583969463,"stop":1733583969463,"duration":0}},{"uid":"5f028d9dfc05d62c","reportUrl":"https://novasamatech.github.io/test-runner/5876//#testresult/5f028d9dfc05d62c","status":"passed","time":{"start":1733562413164,"stop":1733562413164,"duration":0}},{"uid":"d9ca60a34e95fc92","reportUrl":"https://novasamatech.github.io/test-runner/5875//#testresult/d9ca60a34e95fc92","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733497636355,"stop":1733497636355,"duration":0}}]},"tags":[]},"source":"e49d0b941333b023.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}