{"uid":"3fb56c4f5f203ac2","name":"test_rpc_method_is_available[Test for Khala, url: wss://rpc.helikon.io/khala]","fullName":"tests.test_rpc_methods_availability#test_rpc_method_is_available","historyId":"ed76a67cc322c47118b14f4dca5a37ea","time":{"start":1734771980811,"stop":1734771980926,"duration":115},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1734771966632,"stop":1734771970533,"duration":3901},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'content-length': '107', 'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- b'<html><body><h1>503 Service Unavailable</h1>\\nNo server is available to handle this request.\\n</body></html>\\n'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n                     ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1734771975639,"stop":1734771980810,"duration":5171},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"f45605a97199ecef","name":"stdout","source":"f45605a97199ecef.txt","type":"text/plain","size":328}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_rpc_methods_availability"},{"name":"host","value":"fv-az788-20"},{"name":"thread","value":"5144-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_rpc_methods_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://rpc.helikon.io/khala', 'name': 'Khala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fcdf67d7a06e5a89","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'content-length': '107', 'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- b'<html><body><h1>503 Service Unavailable</h1>\\nNo server is available to handle this request.\\n</body></html>\\n'","time":{"start":1734771966631,"stop":1734771966631,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":58,"unknown":0,"total":58},"items":[{"uid":"5a157d5da583a8e7","reportUrl":"https://novasamatech.github.io/test-runner/5903//#testresult/5a157d5da583a8e7","status":"passed","time":{"start":1734707191607,"stop":1734707191675,"duration":68}},{"uid":"90471fee7c4c0feb","reportUrl":"https://novasamatech.github.io/test-runner/5902//#testresult/90471fee7c4c0feb","status":"passed","time":{"start":1734685547934,"stop":1734685548010,"duration":76}},{"uid":"7eaf4afb7e2c5370","reportUrl":"https://novasamatech.github.io/test-runner/5901//#testresult/7eaf4afb7e2c5370","status":"passed","time":{"start":1734620740611,"stop":1734620740687,"duration":76}},{"uid":"9a573ff5db016db5","reportUrl":"https://novasamatech.github.io/test-runner/5900//#testresult/9a573ff5db016db5","status":"passed","time":{"start":1734599157286,"stop":1734599157420,"duration":134}},{"uid":"824c97fffde72ea","reportUrl":"https://novasamatech.github.io/test-runner/5899//#testresult/824c97fffde72ea","status":"passed","time":{"start":1734534352418,"stop":1734534352494,"duration":76}},{"uid":"c510f1ff2bf9a6f0","reportUrl":"https://novasamatech.github.io/test-runner/5898//#testresult/c510f1ff2bf9a6f0","status":"passed","time":{"start":1734512776991,"stop":1734512777067,"duration":76}},{"uid":"a8a8de157c87d636","reportUrl":"https://novasamatech.github.io/test-runner/5897//#testresult/a8a8de157c87d636","status":"passed","time":{"start":1734447965323,"stop":1734447965403,"duration":80}},{"uid":"e6ae2b0c2c3690b4","reportUrl":"https://novasamatech.github.io/test-runner/5896//#testresult/e6ae2b0c2c3690b4","status":"passed","time":{"start":1734426382296,"stop":1734426382421,"duration":125}},{"uid":"a9679b50492ef11","reportUrl":"https://novasamatech.github.io/test-runner/5895//#testresult/a9679b50492ef11","status":"passed","time":{"start":1734361566771,"stop":1734361566846,"duration":75}},{"uid":"92b657505bbbcf54","reportUrl":"https://novasamatech.github.io/test-runner/5894//#testresult/92b657505bbbcf54","status":"passed","time":{"start":1734340003822,"stop":1734340003924,"duration":102}},{"uid":"a43cf736ff865682","reportUrl":"https://novasamatech.github.io/test-runner/5893//#testresult/a43cf736ff865682","status":"passed","time":{"start":1734275117999,"stop":1734275118118,"duration":119}},{"uid":"f3f386a680b61267","reportUrl":"https://novasamatech.github.io/test-runner/5892//#testresult/f3f386a680b61267","status":"passed","time":{"start":1734253548440,"stop":1734253548516,"duration":76}},{"uid":"ace26518c5a208d3","reportUrl":"https://novasamatech.github.io/test-runner/5891//#testresult/ace26518c5a208d3","status":"passed","time":{"start":1734188731407,"stop":1734188731512,"duration":105}},{"uid":"6a4adf72afab3e59","reportUrl":"https://novasamatech.github.io/test-runner/5890//#testresult/6a4adf72afab3e59","status":"passed","time":{"start":1734167124412,"stop":1734167124489,"duration":77}},{"uid":"2d5b0456d3cde240","reportUrl":"https://novasamatech.github.io/test-runner/5889//#testresult/2d5b0456d3cde240","status":"passed","time":{"start":1734102343981,"stop":1734102344057,"duration":76}},{"uid":"dbb082d1b655cafe","reportUrl":"https://novasamatech.github.io/test-runner/5888//#testresult/dbb082d1b655cafe","status":"passed","time":{"start":1734080774919,"stop":1734080775034,"duration":115}},{"uid":"d318a26fb2a526eb","reportUrl":"https://novasamatech.github.io/test-runner/5887//#testresult/d318a26fb2a526eb","status":"passed","time":{"start":1734015978254,"stop":1734015978359,"duration":105}},{"uid":"7852eea51ef79b3","reportUrl":"https://novasamatech.github.io/test-runner/5886//#testresult/7852eea51ef79b3","status":"passed","time":{"start":1733994373737,"stop":1733994373847,"duration":110}},{"uid":"7be8b6020580bd74","reportUrl":"https://novasamatech.github.io/test-runner/5885//#testresult/7be8b6020580bd74","status":"passed","time":{"start":1733929567131,"stop":1733929567264,"duration":133}},{"uid":"58f9b6022ce30cfc","reportUrl":"https://novasamatech.github.io/test-runner/5884//#testresult/58f9b6022ce30cfc","status":"passed","time":{"start":1733907979501,"stop":1733907979578,"duration":77}}]},"tags":[]},"source":"3fb56c4f5f203ac2.json","parameterValues":["{'url': 'wss://rpc.helikon.io/khala', 'name': 'Khala'}"]}