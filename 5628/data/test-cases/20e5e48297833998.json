{"uid":"20e5e48297833998","name":"test_chainId[Test for Bittensor]","fullName":"tests.test_network_parameters.TestChainId#test_chainId","historyId":"3933afdfafb6eaf6fa4d5e4b01d96e28","time":{"start":1723021571292,"stop":1723021571292,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"chain_model","time":{"start":1723021563277,"stop":1723021564211,"duration":934},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 64, in chain_model\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 691, in init_runtime\n    self.metadata = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 518, in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"chain_model","time":{"start":1723021569361,"stop":1723021571291,"duration":1930},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestChainId"},{"name":"host","value":"fv-az732-661"},{"name":"thread","value":"2101-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7f4a8bf834c0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fd6c74bfd20ee4cb","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}","time":{"start":1723021563276,"stop":1723021563276,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":49,"unknown":0,"total":49},"items":[{"uid":"14b04937fed1782c","reportUrl":"https://novasamatech.github.io/test-runner/5627//#testresult/14b04937fed1782c","status":"passed","time":{"start":1722956759242,"stop":1722956759242,"duration":0}},{"uid":"c40fa00c72a9a42d","reportUrl":"https://novasamatech.github.io/test-runner/5626//#testresult/c40fa00c72a9a42d","status":"passed","time":{"start":1722935128232,"stop":1722935128232,"duration":0}},{"uid":"4110f4661dd757e9","reportUrl":"https://novasamatech.github.io/test-runner/5625//#testresult/4110f4661dd757e9","status":"passed","time":{"start":1722870327272,"stop":1722870327272,"duration":0}},{"uid":"bd8a8da1a842554e","reportUrl":"https://novasamatech.github.io/test-runner/5624//#testresult/bd8a8da1a842554e","status":"passed","time":{"start":1722848714476,"stop":1722848714476,"duration":0}},{"uid":"e39bad302212279c","reportUrl":"https://novasamatech.github.io/test-runner/5623//#testresult/e39bad302212279c","status":"passed","time":{"start":1722783966577,"stop":1722783966577,"duration":0}},{"uid":"4f827c096e1f1025","reportUrl":"https://novasamatech.github.io/test-runner/5622//#testresult/4f827c096e1f1025","status":"passed","time":{"start":1722762322263,"stop":1722762322263,"duration":0}},{"uid":"4568eeaca9c8822e","reportUrl":"https://novasamatech.github.io/test-runner/5621//#testresult/4568eeaca9c8822e","status":"passed","time":{"start":1722697514928,"stop":1722697514928,"duration":0}},{"uid":"4ef4d4bacb9ac51","reportUrl":"https://novasamatech.github.io/test-runner/5620//#testresult/4ef4d4bacb9ac51","status":"passed","time":{"start":1722675962057,"stop":1722675962057,"duration":0}},{"uid":"a17ce59fe3ce9718","reportUrl":"https://novasamatech.github.io/test-runner/5619//#testresult/a17ce59fe3ce9718","status":"passed","time":{"start":1722611139862,"stop":1722611139862,"duration":0}},{"uid":"3f5cb99f003dae38","reportUrl":"https://novasamatech.github.io/test-runner/5618//#testresult/3f5cb99f003dae38","status":"passed","time":{"start":1722589583223,"stop":1722589583223,"duration":0}},{"uid":"4ed468086f5cabed","reportUrl":"https://novasamatech.github.io/test-runner/5617//#testresult/4ed468086f5cabed","status":"passed","time":{"start":1722524727451,"stop":1722524727451,"duration":0}},{"uid":"7cdd77c5e446899a","reportUrl":"https://novasamatech.github.io/test-runner/5616//#testresult/7cdd77c5e446899a","status":"passed","time":{"start":1722503117047,"stop":1722503117047,"duration":0}},{"uid":"56f101a9549c6d82","reportUrl":"https://novasamatech.github.io/test-runner/5615//#testresult/56f101a9549c6d82","status":"passed","time":{"start":1722438310553,"stop":1722438310553,"duration":0}},{"uid":"3ce9910cd9063363","reportUrl":"https://novasamatech.github.io/test-runner/5614//#testresult/3ce9910cd9063363","status":"passed","time":{"start":1722416755179,"stop":1722416755179,"duration":0}},{"uid":"1809b9421aea134d","reportUrl":"https://novasamatech.github.io/test-runner/5613//#testresult/1809b9421aea134d","status":"passed","time":{"start":1722351944799,"stop":1722351944800,"duration":1}},{"uid":"5b22ba5d2a41742c","reportUrl":"https://novasamatech.github.io/test-runner/5612//#testresult/5b22ba5d2a41742c","status":"passed","time":{"start":1722330333039,"stop":1722330333040,"duration":1}},{"uid":"d04931997a1271ec","reportUrl":"https://novasamatech.github.io/test-runner/5611//#testresult/d04931997a1271ec","status":"passed","time":{"start":1722265538991,"stop":1722265538991,"duration":0}},{"uid":"90b4b172de138386","reportUrl":"https://novasamatech.github.io/test-runner/5610//#testresult/90b4b172de138386","status":"passed","time":{"start":1722243949131,"stop":1722243949132,"duration":1}},{"uid":"c33faa35b27eccd8","reportUrl":"https://novasamatech.github.io/test-runner/5609//#testresult/c33faa35b27eccd8","status":"passed","time":{"start":1722179144594,"stop":1722179144594,"duration":0}},{"uid":"354b980c878e1e7d","reportUrl":"https://novasamatech.github.io/test-runner/5608//#testresult/354b980c878e1e7d","status":"passed","time":{"start":1722157505427,"stop":1722157505427,"duration":0}}]},"tags":[]},"source":"20e5e48297833998.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f4a8bf834c0>"]}