{"uid":"4c5ffd1400c926d8","name":"test_rpc_node_is_synced[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_substrate_node_is_synced#test_rpc_node_is_synced","historyId":"d1dde89f48f5b964faa5b75d8926ce6c","time":{"start":1733065647384,"stop":1733065647488,"duration":104},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1733065629778,"stop":1733065635241,"duration":5463},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1733065640312,"stop":1733065647383,"duration":7071},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"ea91e95b182da5a0","name":"stdout","source":"ea91e95b182da5a0.txt","type":"text/plain","size":195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_substrate_node_is_synced"},{"name":"host","value":"fv-az1435-33"},{"name":"thread","value":"2134-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_substrate_node_is_synced"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"88b713864915689c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733065629776,"stop":1733065629776,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":73,"unknown":0,"total":95},"items":[{"uid":"fe3187168af342e","reportUrl":"https://novasamatech.github.io/test-runner/5864//#testresult/fe3187168af342e","status":"passed","time":{"start":1733043963765,"stop":1733043963870,"duration":105}},{"uid":"6a77292873a87f0e","reportUrl":"https://novasamatech.github.io/test-runner/5863//#testresult/6a77292873a87f0e","status":"passed","time":{"start":1732979189470,"stop":1732979189574,"duration":104}},{"uid":"4a2bbb309f62f0ce","reportUrl":"https://novasamatech.github.io/test-runner/5862//#testresult/4a2bbb309f62f0ce","status":"passed","time":{"start":1732957624338,"stop":1732957624451,"duration":113}},{"uid":"356da4907e979497","reportUrl":"https://novasamatech.github.io/test-runner/5861//#testresult/356da4907e979497","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732892819472,"stop":1732892819472,"duration":0}},{"uid":"dff03827dfb932db","reportUrl":"https://novasamatech.github.io/test-runner/5860//#testresult/dff03827dfb932db","status":"passed","time":{"start":1732871204981,"stop":1732871205086,"duration":105}},{"uid":"10f11401fa6a2d65","reportUrl":"https://novasamatech.github.io/test-runner/5859//#testresult/10f11401fa6a2d65","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732806387149,"stop":1732806387149,"duration":0}},{"uid":"6f23bb527678a6bc","reportUrl":"https://novasamatech.github.io/test-runner/5858//#testresult/6f23bb527678a6bc","status":"passed","time":{"start":1732784815303,"stop":1732784815408,"duration":105}},{"uid":"443776039403569c","reportUrl":"https://novasamatech.github.io/test-runner/5857//#testresult/443776039403569c","status":"passed","time":{"start":1732719973409,"stop":1732719973511,"duration":102}},{"uid":"6b1bb0b276bb30b9","reportUrl":"https://novasamatech.github.io/test-runner/5856//#testresult/6b1bb0b276bb30b9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732698422656,"stop":1732698422656,"duration":0}},{"uid":"7e413f2a354b2d85","reportUrl":"https://novasamatech.github.io/test-runner/5855//#testresult/7e413f2a354b2d85","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732633600618,"stop":1732633600618,"duration":0}},{"uid":"d85ab486bc63104","reportUrl":"https://novasamatech.github.io/test-runner/5854//#testresult/d85ab486bc63104","status":"passed","time":{"start":1732612016981,"stop":1732612017087,"duration":106}},{"uid":"9d20a1c704c4285e","reportUrl":"https://novasamatech.github.io/test-runner/5853//#testresult/9d20a1c704c4285e","status":"passed","time":{"start":1732547212805,"stop":1732547212906,"duration":101}},{"uid":"2c48bfdcb9b6f550","reportUrl":"https://novasamatech.github.io/test-runner/5852//#testresult/2c48bfdcb9b6f550","status":"passed","time":{"start":1732525624070,"stop":1732525624195,"duration":125}},{"uid":"f231421320e0224","reportUrl":"https://novasamatech.github.io/test-runner/5851//#testresult/f231421320e0224","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732460768545,"stop":1732460768545,"duration":0}},{"uid":"da83065f36602f57","reportUrl":"https://novasamatech.github.io/test-runner/5850//#testresult/da83065f36602f57","status":"passed","time":{"start":1732439152408,"stop":1732439152512,"duration":104}},{"uid":"6f1e3393627e9388","reportUrl":"https://novasamatech.github.io/test-runner/5849//#testresult/6f1e3393627e9388","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732374367669,"stop":1732374367669,"duration":0}},{"uid":"2a2fd9fbd3755cc2","reportUrl":"https://novasamatech.github.io/test-runner/5848//#testresult/2a2fd9fbd3755cc2","status":"passed","time":{"start":1732352799931,"stop":1732352800036,"duration":105}},{"uid":"33aa2fb28b8393bd","reportUrl":"https://novasamatech.github.io/test-runner/5847//#testresult/33aa2fb28b8393bd","status":"passed","time":{"start":1732288034803,"stop":1732288034909,"duration":106}},{"uid":"9e0974d7fcd13d7b","reportUrl":"https://novasamatech.github.io/test-runner/5846//#testresult/9e0974d7fcd13d7b","status":"passed","time":{"start":1732266449827,"stop":1732266449928,"duration":101}},{"uid":"2c344a0d2e9cfa81","reportUrl":"https://novasamatech.github.io/test-runner/5845//#testresult/2c344a0d2e9cfa81","status":"passed","time":{"start":1732201629219,"stop":1732201629324,"duration":105}}]},"tags":[]},"source":"4c5ffd1400c926d8.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}