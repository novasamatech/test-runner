{"uid":"8fb0c6b7807705a0","name":"test_rpc_node_is_synced[Test for Bit.Country Pioneer, url: wss://pioneer-rpc-1.bit.country/wss]","fullName":"tests.test_substrate_node_is_synced#test_rpc_node_is_synced","historyId":"a8d6607b35f1fe3827a95004d0142c85","time":{"start":1730019967275,"stop":1730019967275,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'content-length': '19', 'content-type': 'text/plain', 'via': '1.1 google', 'date': 'Sun, 27 Oct 2024 09:06:05 GMT', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', 'connection': 'close'} -+-+- b'no healthy upstream'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_node_is_synced[Test for Bit.Country Pioneer, url: wss://pioneer-rpc-1.bit.country/wss]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'content-length': '19', 'content-type': 'text/plain', 'via': '1.1 google', 'date': 'Sun, 27 Oct 2024 09:06:05 GMT', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', 'connection': 'close'} -+-+- b'no healthy upstream'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1730019955987,"stop":1730019956542,"duration":555},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'content-length': '19', 'content-type': 'text/plain', 'via': '1.1 google', 'date': 'Sun, 27 Oct 2024 09:05:56 GMT', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', 'connection': 'close'} -+-+- b'no healthy upstream'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1730019961667,"stop":1730019962187,"duration":520},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'content-length': '19', 'content-type': 'text/plain', 'via': '1.1 google', 'date': 'Sun, 27 Oct 2024 09:06:01 GMT', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', 'connection': 'close'} -+-+- b'no healthy upstream'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1730019967275,"stop":1730019967674,"duration":399},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'content-length': '19', 'content-type': 'text/plain', 'via': '1.1 google', 'date': 'Sun, 27 Oct 2024 09:06:05 GMT', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', 'connection': 'close'} -+-+- b'no healthy upstream'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'content-length': '19', 'content-type': 'text/plain', 'via': '1.1 google', 'date': 'Sun, 27 Oct 2024 09:06:05 GMT', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', 'connection': 'close'} -+-+- b'no healthy upstream'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_node_is_synced[Test for Bit.Country Pioneer, url: wss://pioneer-rpc-1.bit.country/wss]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'content-length': '19', 'content-type': 'text/plain', 'via': '1.1 google', 'date': 'Sun, 27 Oct 2024 09:06:05 GMT', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', 'connection': 'close'} -+-+- b'no healthy upstream'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"f7d4d059885986ef","name":"stdout","source":"f7d4d059885986ef.txt","type":"text/plain","size":1089}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_substrate_node_is_synced"},{"name":"host","value":"fv-az529-595"},{"name":"thread","value":"2109-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_substrate_node_is_synced"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://pioneer-rpc-1.bit.country/wss', 'name': 'Bit.Country Pioneer'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5f3c024365d05458","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'content-length': '19', 'content-type': 'text/plain', 'via': '1.1 google', 'date': 'Sun, 27 Oct 2024 09:06:01 GMT', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', 'connection': 'close'} -+-+- b'no healthy upstream'","time":{"start":1730019961666,"stop":1730019961666,"duration":0}},{"uid":"f43abb270430abfc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'content-length': '19', 'content-type': 'text/plain', 'via': '1.1 google', 'date': 'Sun, 27 Oct 2024 09:05:56 GMT', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', 'connection': 'close'} -+-+- b'no healthy upstream'","time":{"start":1730019955986,"stop":1730019955986,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":23,"unknown":0,"total":24},"items":[{"uid":"5f790d1f5a072d83","reportUrl":"https://novasamatech.github.io/test-runner/5793//#testresult/5f790d1f5a072d83","status":"passed","time":{"start":1729955157186,"stop":1729955157559,"duration":373}},{"uid":"7cd4ea0dcaae4182","reportUrl":"https://novasamatech.github.io/test-runner/5792//#testresult/7cd4ea0dcaae4182","status":"passed","time":{"start":1729933540652,"stop":1729933540856,"duration":204}},{"uid":"d17db0dc1ba9f134","reportUrl":"https://novasamatech.github.io/test-runner/5791//#testresult/d17db0dc1ba9f134","status":"passed","time":{"start":1729868754804,"stop":1729868755036,"duration":232}},{"uid":"53a422fd23d3b109","reportUrl":"https://novasamatech.github.io/test-runner/5790//#testresult/53a422fd23d3b109","status":"passed","time":{"start":1729847178310,"stop":1729847178541,"duration":231}},{"uid":"e9641a5509a0e098","reportUrl":"https://novasamatech.github.io/test-runner/5789//#testresult/e9641a5509a0e098","status":"passed","time":{"start":1729782369167,"stop":1729782369396,"duration":229}},{"uid":"9ec92a14cfa2051f","reportUrl":"https://novasamatech.github.io/test-runner/5788//#testresult/9ec92a14cfa2051f","status":"passed","time":{"start":1729760772625,"stop":1729760772851,"duration":226}},{"uid":"8a2033af037c4875","reportUrl":"https://novasamatech.github.io/test-runner/5787//#testresult/8a2033af037c4875","status":"passed","time":{"start":1729695960758,"stop":1729695960981,"duration":223}},{"uid":"dd30bd30b0d10f3a","reportUrl":"https://novasamatech.github.io/test-runner/5786//#testresult/dd30bd30b0d10f3a","status":"passed","time":{"start":1729674366631,"stop":1729674366858,"duration":227}},{"uid":"1a62f04d909a31dc","reportUrl":"https://novasamatech.github.io/test-runner/5785//#testresult/1a62f04d909a31dc","status":"passed","time":{"start":1729609583750,"stop":1729609583921,"duration":171}},{"uid":"39d1a94ea4de09d9","reportUrl":"https://novasamatech.github.io/test-runner/5784//#testresult/39d1a94ea4de09d9","status":"passed","time":{"start":1729587974346,"stop":1729587974545,"duration":199}},{"uid":"d70f828a899eaef8","reportUrl":"https://novasamatech.github.io/test-runner/5783//#testresult/d70f828a899eaef8","status":"passed","time":{"start":1729523173981,"stop":1729523174207,"duration":226}},{"uid":"74fd87740e2319e6","reportUrl":"https://novasamatech.github.io/test-runner/5782//#testresult/74fd87740e2319e6","status":"passed","time":{"start":1729501594988,"stop":1729501595191,"duration":203}},{"uid":"cdcbd4f1ed06e5f2","reportUrl":"https://novasamatech.github.io/test-runner/5781//#testresult/cdcbd4f1ed06e5f2","status":"passed","time":{"start":1729436733903,"stop":1729436734118,"duration":215}},{"uid":"c9d7d277131517e4","reportUrl":"https://novasamatech.github.io/test-runner/5780//#testresult/c9d7d277131517e4","status":"passed","time":{"start":1729415128914,"stop":1729415129141,"duration":227}},{"uid":"d5e870a4b713a43f","reportUrl":"https://novasamatech.github.io/test-runner/5779//#testresult/d5e870a4b713a43f","status":"passed","time":{"start":1729350327350,"stop":1729350327572,"duration":222}},{"uid":"2b987460d317e355","reportUrl":"https://novasamatech.github.io/test-runner/5778//#testresult/2b987460d317e355","status":"passed","time":{"start":1729328731174,"stop":1729328731403,"duration":229}},{"uid":"d3180e0e9283491b","reportUrl":"https://novasamatech.github.io/test-runner/5777//#testresult/d3180e0e9283491b","status":"passed","time":{"start":1729263975971,"stop":1729263976140,"duration":169}},{"uid":"25451556ab9d71d8","reportUrl":"https://novasamatech.github.io/test-runner/5776//#testresult/25451556ab9d71d8","status":"passed","time":{"start":1729242411283,"stop":1729242411455,"duration":172}},{"uid":"f74492b9745c09a8","reportUrl":"https://novasamatech.github.io/test-runner/5775//#testresult/f74492b9745c09a8","status":"passed","time":{"start":1729177534948,"stop":1729177535172,"duration":224}},{"uid":"2604d9c04d04e959","reportUrl":"https://novasamatech.github.io/test-runner/5774//#testresult/2604d9c04d04e959","status":"passed","time":{"start":1729155963327,"stop":1729155963530,"duration":203}}]},"tags":[]},"source":"8fb0c6b7807705a0.json","parameterValues":["{'url': 'wss://pioneer-rpc-1.bit.country/wss', 'name': 'Bit.Country Pioneer'}"]}