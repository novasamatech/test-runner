{"uid":"586bc2cd000e56c5","name":"test_rpc_method_is_available[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_rpc_methods_availability#test_rpc_method_is_available","historyId":"08673a041a5e97df267c5fe36110b6df","time":{"start":1731229588691,"stop":1731229588778,"duration":87},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":true,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1731229571291,"stop":1731229576782,"duration":5491},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1731229581893,"stop":1731229588690,"duration":6797},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"453f8ec9062cf2a","name":"stdout","source":"453f8ec9062cf2a.txt","type":"text/plain","size":195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_rpc_methods_availability"},{"name":"host","value":"fv-az1499-554"},{"name":"thread","value":"2106-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_rpc_methods_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b69624c174774dd4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1731229571290,"stop":1731229571290,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":46,"unknown":0,"total":52},"items":[{"uid":"d00ddc669c959e47","reportUrl":"https://novasamatech.github.io/test-runner/5821//#testresult/d00ddc669c959e47","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1731164785317,"stop":1731164785317,"duration":0}},{"uid":"12d291a98fa30a4c","reportUrl":"https://novasamatech.github.io/test-runner/5820//#testresult/12d291a98fa30a4c","status":"passed","time":{"start":1731143176334,"stop":1731143176440,"duration":106}},{"uid":"c686943f88c49d6","reportUrl":"https://novasamatech.github.io/test-runner/5819//#testresult/c686943f88c49d6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1731078556398,"stop":1731078556398,"duration":0}},{"uid":"4e85e6e887d657c3","reportUrl":"https://novasamatech.github.io/test-runner/5818//#testresult/4e85e6e887d657c3","status":"passed","time":{"start":1731056786040,"stop":1731056786166,"duration":126}},{"uid":"4a891be8b7d3b125","reportUrl":"https://novasamatech.github.io/test-runner/5817//#testresult/4a891be8b7d3b125","status":"passed","time":{"start":1730991967847,"stop":1730991967935,"duration":88}},{"uid":"1678bbb1b923e56a","reportUrl":"https://novasamatech.github.io/test-runner/5816//#testresult/1678bbb1b923e56a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1730970397697,"stop":1730970397697,"duration":0}},{"uid":"d547c9a7cbeaba1","reportUrl":"https://novasamatech.github.io/test-runner/5815//#testresult/d547c9a7cbeaba1","status":"passed","time":{"start":1730905589255,"stop":1730905589370,"duration":115}},{"uid":"5fea94def855b221","reportUrl":"https://novasamatech.github.io/test-runner/5814//#testresult/5fea94def855b221","status":"passed","time":{"start":1730883987701,"stop":1730883987808,"duration":107}},{"uid":"35560fbb9184d7e","reportUrl":"https://novasamatech.github.io/test-runner/5813//#testresult/35560fbb9184d7e","status":"passed","time":{"start":1730819209987,"stop":1730819210094,"duration":107}},{"uid":"5c65f8b928c401d1","reportUrl":"https://novasamatech.github.io/test-runner/5812//#testresult/5c65f8b928c401d1","status":"passed","time":{"start":1730797582745,"stop":1730797582866,"duration":121}},{"uid":"b25f91fa6f3c5d1","reportUrl":"https://novasamatech.github.io/test-runner/5811//#testresult/b25f91fa6f3c5d1","status":"passed","time":{"start":1730732798866,"stop":1730732798972,"duration":106}},{"uid":"5feacfd4d8018889","reportUrl":"https://novasamatech.github.io/test-runner/5810//#testresult/5feacfd4d8018889","status":"passed","time":{"start":1730711258057,"stop":1730711258189,"duration":132}},{"uid":"79ee71ea51f8153d","reportUrl":"https://novasamatech.github.io/test-runner/5809//#testresult/79ee71ea51f8153d","status":"passed","time":{"start":1730646406053,"stop":1730646406129,"duration":76}},{"uid":"674773351dc0683f","reportUrl":"https://novasamatech.github.io/test-runner/5808//#testresult/674773351dc0683f","status":"passed","time":{"start":1730624822381,"stop":1730624822465,"duration":84}},{"uid":"672e6ff3772ff753","reportUrl":"https://novasamatech.github.io/test-runner/5807//#testresult/672e6ff3772ff753","status":"passed","time":{"start":1730560011283,"stop":1730560011392,"duration":109}},{"uid":"23443b70df3bd480","reportUrl":"https://novasamatech.github.io/test-runner/5806//#testresult/23443b70df3bd480","status":"passed","time":{"start":1730538384661,"stop":1730538384741,"duration":80}},{"uid":"5108e8de056697da","reportUrl":"https://novasamatech.github.io/test-runner/5805//#testresult/5108e8de056697da","status":"passed","time":{"start":1730473612277,"stop":1730473612359,"duration":82}},{"uid":"98ba7ad50d55ea8c","reportUrl":"https://novasamatech.github.io/test-runner/5804//#testresult/98ba7ad50d55ea8c","status":"passed","time":{"start":1730452010384,"stop":1730452010490,"duration":106}},{"uid":"7604838a61e0ac0e","reportUrl":"https://novasamatech.github.io/test-runner/5803//#testresult/7604838a61e0ac0e","status":"passed","time":{"start":1730387173802,"stop":1730387173894,"duration":92}},{"uid":"e9afc3986bb1baad","reportUrl":"https://novasamatech.github.io/test-runner/5802//#testresult/e9afc3986bb1baad","status":"passed","time":{"start":1730365570846,"stop":1730365570973,"duration":127}}]},"tags":[]},"source":"586bc2cd000e56c5.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}