{"uid":"4be874f4a51c83b2","name":"test_rpc_node_is_synced[Test for Kintsugi, url: wss://api-kusama.interlay.io/parachain]","fullName":"tests.test_substrate_node_is_synced#test_rpc_node_is_synced","historyId":"45bcb73aa11fdfc68b831ff221fe2da3","time":{"start":1730300753138,"stop":1730300753138,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Wed, 30 Oct 2024 15:05:53 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=fuIS0eiABD49JoVr2UFhhqfN0f8qK9XXVxCsk7F7XYolOtsUfhMoEzCypSQW9Kngfo02LUr6nLEBemqyqMYhKQmBO%2Fb1y4uVIQae%2BrFuOzqYSyecaEp0N7GCp%2FzLewWOrH9G0tpZRws%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '8dac4e5ce9e3c981-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_node_is_synced[Test for Kintsugi, url: wss://api-kusama.interlay.io/parachain]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Wed, 30 Oct 2024 15:05:53 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=fuIS0eiABD49JoVr2UFhhqfN0f8qK9XXVxCsk7F7XYolOtsUfhMoEzCypSQW9Kngfo02LUr6nLEBemqyqMYhKQmBO%2Fb1y4uVIQae%2BrFuOzqYSyecaEp0N7GCp%2FzLewWOrH9G0tpZRws%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '8dac4e5ce9e3c981-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1730300741546,"stop":1730300742287,"duration":741},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Wed, 30 Oct 2024 15:05:42 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=3mdBg7i4rc1q0CJFh%2BPrlcaJ9J2SRgow1lBu6gVtVtSeqwhJFoMkEuuVCJxxAnUGjWYgZIormQwJNKRzMu6Ar0rtbADIlFjrf8CFhAeegc8WY2w9ZMhTKHbsa4veYTOGUWprvj6hwLU%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '8dac4e155eafc55e-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1730300747486,"stop":1730300748079,"duration":593},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Wed, 30 Oct 2024 15:05:48 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=1ytPaFJuCi7OC5PJUidVdltcZWvNPNE%2F8DRA6Wf5tHhkeL%2FiMzQTqFUGr9lO5AcHyuTiVRGY6IySjtRcXomldZIWWPcOAaJoaittbluUpQXYUCDOKmHYq1eHu6JcVc8sFIv%2Fo4WQVAQ%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '8dac4e39cb2cc957-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1730300753138,"stop":1730300753713,"duration":575},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Wed, 30 Oct 2024 15:05:53 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=fuIS0eiABD49JoVr2UFhhqfN0f8qK9XXVxCsk7F7XYolOtsUfhMoEzCypSQW9Kngfo02LUr6nLEBemqyqMYhKQmBO%2Fb1y4uVIQae%2BrFuOzqYSyecaEp0N7GCp%2FzLewWOrH9G0tpZRws%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '8dac4e5ce9e3c981-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Wed, 30 Oct 2024 15:05:53 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=fuIS0eiABD49JoVr2UFhhqfN0f8qK9XXVxCsk7F7XYolOtsUfhMoEzCypSQW9Kngfo02LUr6nLEBemqyqMYhKQmBO%2Fb1y4uVIQae%2BrFuOzqYSyecaEp0N7GCp%2FzLewWOrH9G0tpZRws%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '8dac4e5ce9e3c981-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_node_is_synced[Test for Kintsugi, url: wss://api-kusama.interlay.io/parachain]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Wed, 30 Oct 2024 15:05:53 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=fuIS0eiABD49JoVr2UFhhqfN0f8qK9XXVxCsk7F7XYolOtsUfhMoEzCypSQW9Kngfo02LUr6nLEBemqyqMYhKQmBO%2Fb1y4uVIQae%2BrFuOzqYSyecaEp0N7GCp%2FzLewWOrH9G0tpZRws%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '8dac4e5ce9e3c981-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"9da981ae87bb4e23","name":"stdout","source":"9da981ae87bb4e23.txt","type":"text/plain","size":2318}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_substrate_node_is_synced"},{"name":"host","value":"fv-az569-105"},{"name":"thread","value":"2128-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_substrate_node_is_synced"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://api-kusama.interlay.io/parachain', 'name': 'Kintsugi'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"dd5035f11fb039bf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Wed, 30 Oct 2024 15:05:48 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=1ytPaFJuCi7OC5PJUidVdltcZWvNPNE%2F8DRA6Wf5tHhkeL%2FiMzQTqFUGr9lO5AcHyuTiVRGY6IySjtRcXomldZIWWPcOAaJoaittbluUpQXYUCDOKmHYq1eHu6JcVc8sFIv%2Fo4WQVAQ%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '8dac4e39cb2cc957-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1730300747486,"stop":1730300747486,"duration":0}},{"uid":"86481d8f21156c07","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Wed, 30 Oct 2024 15:05:42 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=3mdBg7i4rc1q0CJFh%2BPrlcaJ9J2SRgow1lBu6gVtVtSeqwhJFoMkEuuVCJxxAnUGjWYgZIormQwJNKRzMu6Ar0rtbADIlFjrf8CFhAeegc8WY2w9ZMhTKHbsa4veYTOGUWprvj6hwLU%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '8dac4e155eafc55e-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1730300741544,"stop":1730300741544,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":30,"unknown":0,"total":31},"items":[{"uid":"3016a1f3d268fc2","reportUrl":"https://novasamatech.github.io/test-runner/5800//#testresult/3016a1f3d268fc2","status":"passed","time":{"start":1730279153687,"stop":1730279153787,"duration":100}},{"uid":"9af34b3abeca435e","reportUrl":"https://novasamatech.github.io/test-runner/5799//#testresult/9af34b3abeca435e","status":"passed","time":{"start":1730214351307,"stop":1730214351428,"duration":121}},{"uid":"4dbaa8b6af6f8244","reportUrl":"https://novasamatech.github.io/test-runner/5798//#testresult/4dbaa8b6af6f8244","status":"passed","time":{"start":1730192773078,"stop":1730192773245,"duration":167}},{"uid":"15bf7e460abd999e","reportUrl":"https://novasamatech.github.io/test-runner/5797//#testresult/15bf7e460abd999e","status":"passed","time":{"start":1730127965287,"stop":1730127965401,"duration":114}},{"uid":"a79873cbf1271b41","reportUrl":"https://novasamatech.github.io/test-runner/5796//#testresult/a79873cbf1271b41","status":"passed","time":{"start":1730106380531,"stop":1730106380666,"duration":135}},{"uid":"fe03023e001006a8","reportUrl":"https://novasamatech.github.io/test-runner/5795//#testresult/fe03023e001006a8","status":"passed","time":{"start":1730041539407,"stop":1730041539512,"duration":105}},{"uid":"6c49c7c5df6d2cb6","reportUrl":"https://novasamatech.github.io/test-runner/5794//#testresult/6c49c7c5df6d2cb6","status":"passed","time":{"start":1730019952302,"stop":1730019952416,"duration":114}},{"uid":"283a356543b7e733","reportUrl":"https://novasamatech.github.io/test-runner/5793//#testresult/283a356543b7e733","status":"passed","time":{"start":1729955142801,"stop":1729955142906,"duration":105}},{"uid":"1a2946f3449b6538","reportUrl":"https://novasamatech.github.io/test-runner/5792//#testresult/1a2946f3449b6538","status":"passed","time":{"start":1729933527180,"stop":1729933527323,"duration":143}},{"uid":"f5981434a3f04940","reportUrl":"https://novasamatech.github.io/test-runner/5791//#testresult/f5981434a3f04940","status":"passed","time":{"start":1729868760875,"stop":1729868760977,"duration":102}},{"uid":"3249744f707459c5","reportUrl":"https://novasamatech.github.io/test-runner/5790//#testresult/3249744f707459c5","status":"passed","time":{"start":1729847162816,"stop":1729847162915,"duration":99}},{"uid":"2a25534e48274508","reportUrl":"https://novasamatech.github.io/test-runner/5789//#testresult/2a25534e48274508","status":"passed","time":{"start":1729782354959,"stop":1729782355066,"duration":107}},{"uid":"60907d43b5dc894f","reportUrl":"https://novasamatech.github.io/test-runner/5788//#testresult/60907d43b5dc894f","status":"passed","time":{"start":1729760755105,"stop":1729760755234,"duration":129}},{"uid":"990bc4ec919535fb","reportUrl":"https://novasamatech.github.io/test-runner/5787//#testresult/990bc4ec919535fb","status":"passed","time":{"start":1729695948623,"stop":1729695948726,"duration":103}},{"uid":"dda5a73ece42e791","reportUrl":"https://novasamatech.github.io/test-runner/5786//#testresult/dda5a73ece42e791","status":"passed","time":{"start":1729674356067,"stop":1729674356198,"duration":131}},{"uid":"8b18aff55b310f90","reportUrl":"https://novasamatech.github.io/test-runner/5785//#testresult/8b18aff55b310f90","status":"passed","time":{"start":1729609593605,"stop":1729609593772,"duration":167}},{"uid":"e518f8f78e9eb541","reportUrl":"https://novasamatech.github.io/test-runner/5784//#testresult/e518f8f78e9eb541","status":"passed","time":{"start":1729587957289,"stop":1729587957405,"duration":116}},{"uid":"e886d70a94c532af","reportUrl":"https://novasamatech.github.io/test-runner/5783//#testresult/e886d70a94c532af","status":"passed","time":{"start":1729523166410,"stop":1729523166526,"duration":116}},{"uid":"aef3dc6c53cd12fe","reportUrl":"https://novasamatech.github.io/test-runner/5782//#testresult/aef3dc6c53cd12fe","status":"passed","time":{"start":1729501566767,"stop":1729501566894,"duration":127}},{"uid":"a3119921ede3f3b5","reportUrl":"https://novasamatech.github.io/test-runner/5781//#testresult/a3119921ede3f3b5","status":"passed","time":{"start":1729436723864,"stop":1729436723968,"duration":104}}]},"tags":[]},"source":"4be874f4a51c83b2.json","parameterValues":["{'url': 'wss://api-kusama.interlay.io/parachain', 'name': 'Kintsugi'}"]}