{"uid":"4aaf36a05edf4225","name":"test_rpc_method_is_available[Test for Kusama, url: wss://kusama.api.onfinality.io/public-ws]","fullName":"tests.test_rpc_methods_availability#test_rpc_method_is_available","historyId":"6c1ee962852741aa869e53c12182474c","time":{"start":1729695904606,"stop":1729695904606,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Wed, 23 Oct 2024 15:05:04 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '6', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': '8e1fd3646ba01c7b33d8c439b0488333'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1849104763493285888}'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_method_is_available[Test for Kusama, url: wss://kusama.api.onfinality.io/public-ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Wed, 23 Oct 2024 15:05:04 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '6', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': '8e1fd3646ba01c7b33d8c439b0488333'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1849104763493285888}'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1729695893571,"stop":1729695894018,"duration":447},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Wed, 23 Oct 2024 15:04:53 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '5', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': '39b62851c376154484688b418b8de45d'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1849104717343358976}'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1729695899082,"stop":1729695899545,"duration":463},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Wed, 23 Oct 2024 15:04:59 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '5', 'x-kong-proxy-latency': '1', 'via': 'kong/3.6.1', 'x-kong-request-id': 'd89d6208ef6e17453dbf9c7d3fda8a51'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1849104740512694272}'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1729695904606,"stop":1729695905022,"duration":416},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Wed, 23 Oct 2024 15:05:04 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '6', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': '8e1fd3646ba01c7b33d8c439b0488333'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1849104763493285888}'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Wed, 23 Oct 2024 15:05:04 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '6', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': '8e1fd3646ba01c7b33d8c439b0488333'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1849104763493285888}'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_method_is_available[Test for Kusama, url: wss://kusama.api.onfinality.io/public-ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Wed, 23 Oct 2024 15:05:04 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '6', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': '8e1fd3646ba01c7b33d8c439b0488333'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1849104763493285888}'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"ee3354b1daca9dd9","name":"stdout","source":"ee3354b1daca9dd9.txt","type":"text/plain","size":1926}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_rpc_methods_availability"},{"name":"host","value":"fv-az525-994"},{"name":"thread","value":"2087-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_rpc_methods_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://kusama.api.onfinality.io/public-ws', 'name': 'Kusama'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"42ff05487cd5fc0e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Wed, 23 Oct 2024 15:04:59 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '5', 'x-kong-proxy-latency': '1', 'via': 'kong/3.6.1', 'x-kong-request-id': 'd89d6208ef6e17453dbf9c7d3fda8a51'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1849104740512694272}'","time":{"start":1729695899082,"stop":1729695899082,"duration":0}},{"uid":"409cc84b72e845ad","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Wed, 23 Oct 2024 15:04:53 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '5', 'x-kong-proxy-latency': '0', 'via': 'kong/3.6.1', 'x-kong-request-id': '39b62851c376154484688b418b8de45d'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1849104717343358976}'","time":{"start":1729695893570,"stop":1729695893570,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":15,"unknown":0,"total":17},"items":[{"uid":"8eb7d5f1bfeb91f9","reportUrl":"https://novasamatech.github.io/test-runner/5786//#testresult/8eb7d5f1bfeb91f9","status":"passed","time":{"start":1729674323984,"stop":1729674324114,"duration":130}},{"uid":"98e2928dca8d327a","reportUrl":"https://novasamatech.github.io/test-runner/5785//#testresult/98e2928dca8d327a","status":"passed","time":{"start":1729609513553,"stop":1729609513655,"duration":102}},{"uid":"fecba1e33166a2f9","reportUrl":"https://novasamatech.github.io/test-runner/5784//#testresult/fecba1e33166a2f9","status":"passed","time":{"start":1729587900024,"stop":1729587900109,"duration":85}},{"uid":"5bbf89b41021081","reportUrl":"https://novasamatech.github.io/test-runner/5783//#testresult/5bbf89b41021081","status":"passed","time":{"start":1729523110515,"stop":1729523110602,"duration":87}},{"uid":"32c2e70febcc337a","reportUrl":"https://novasamatech.github.io/test-runner/5782//#testresult/32c2e70febcc337a","status":"passed","time":{"start":1729501534427,"stop":1729501534520,"duration":93}},{"uid":"e11b160f0a387bb9","reportUrl":"https://novasamatech.github.io/test-runner/5781//#testresult/e11b160f0a387bb9","status":"passed","time":{"start":1729436685637,"stop":1729436685715,"duration":78}},{"uid":"3f04dedda72eb86","reportUrl":"https://novasamatech.github.io/test-runner/5780//#testresult/3f04dedda72eb86","status":"passed","time":{"start":1729415078986,"stop":1729415079063,"duration":77}},{"uid":"c59444d05abaafb5","reportUrl":"https://novasamatech.github.io/test-runner/5779//#testresult/c59444d05abaafb5","status":"passed","time":{"start":1729350332565,"stop":1729350332641,"duration":76}},{"uid":"a140e725fdb5f737","reportUrl":"https://novasamatech.github.io/test-runner/5778//#testresult/a140e725fdb5f737","status":"passed","time":{"start":1729328681019,"stop":1729328681106,"duration":87}},{"uid":"b3762dab8a09ab83","reportUrl":"https://novasamatech.github.io/test-runner/5777//#testresult/b3762dab8a09ab83","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain; charset=utf-8', 'content-length': '110', 'connection': 'keep-alive', 'access-control-allow-origin': 'https://kusama.api.onfinality.io', 'date': 'Fri, 18 Oct 2024 15:05:14 GMT', 'x-continent': 'NA', 'x-cluster': 'nv', 'x-kong-upstream-latency': '8', 'x-kong-proxy-latency': '1', 'via': 'kong/3.6.1', 'x-kong-request-id': 'c1a60b6c4048a15040a3df49ab7d7140'} -+-+- b'{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32029,\"message\":\"Too many websocket connections.\"},\"id\":1847292865378516992}'","time":{"start":1729263914611,"stop":1729263914611,"duration":0}},{"uid":"62239d4574f6b14f","reportUrl":"https://novasamatech.github.io/test-runner/5776//#testresult/62239d4574f6b14f","status":"passed","time":{"start":1729242341554,"stop":1729242341641,"duration":87}},{"uid":"e71ff94c6218ab14","reportUrl":"https://novasamatech.github.io/test-runner/5775//#testresult/e71ff94c6218ab14","status":"passed","time":{"start":1729177476794,"stop":1729177476904,"duration":110}},{"uid":"b91c5d4514ea497","reportUrl":"https://novasamatech.github.io/test-runner/5774//#testresult/b91c5d4514ea497","status":"passed","time":{"start":1729155900294,"stop":1729155900375,"duration":81}},{"uid":"6488cb47b92bbff9","reportUrl":"https://novasamatech.github.io/test-runner/5773//#testresult/6488cb47b92bbff9","status":"passed","time":{"start":1729091103355,"stop":1729091103491,"duration":136}},{"uid":"62da0f6c2d815941","reportUrl":"https://novasamatech.github.io/test-runner/5772//#testresult/62da0f6c2d815941","status":"passed","time":{"start":1729069508935,"stop":1729069509013,"duration":78}},{"uid":"da8e9e7bbd310838","reportUrl":"https://novasamatech.github.io/test-runner/5771//#testresult/da8e9e7bbd310838","status":"passed","time":{"start":1729004705367,"stop":1729004705466,"duration":99}}]},"tags":[]},"source":"4aaf36a05edf4225.json","parameterValues":["{'url': 'wss://kusama.api.onfinality.io/public-ws', 'name': 'Kusama'}"]}