{"uid":"7d9ee68f6475eef5","name":"test_address_prefix[Test for Litentry]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"7e094241732d9b79c00e802fab4e66ce","time":{"start":1734275100683,"stop":1734275100683,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"chain_model","time":{"start":1734275088685,"stop":1734275090414,"duration":1729},"status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 81, in chain_model\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 45, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 648, in init_runtime\n    block_hash = self.get_chain_head()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 434, in get_chain_head\n    if self.supports_rpc_method(\"chain_getHead\"):\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 230, in supports_rpc_method\n    result = self.rpc_request(\"rpc_methods\", []).get('result')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 323, in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n  File \"/usr/lib/python3.10/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib/python3.10/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/lib/python3.10/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"chain_model","time":{"start":1734275095594,"stop":1734275100682,"duration":5088},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"4f61c24d13c064e8","name":"stdout","source":"4f61c24d13c064e8.txt","type":"text/plain","size":460}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az1052-496"},{"name":"thread","value":"2199-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7fde6d79f160>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"16b74dffe363f887","status":"broken","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1734275088684,"stop":1734275088684,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":123,"unknown":0,"total":123},"items":[{"uid":"75f9d87c7af4afb0","reportUrl":"https://novasamatech.github.io/test-runner/5892//#testresult/75f9d87c7af4afb0","status":"passed","time":{"start":1734253506733,"stop":1734253506733,"duration":0}},{"uid":"4ca114808b65fa4e","reportUrl":"https://novasamatech.github.io/test-runner/5891//#testresult/4ca114808b65fa4e","status":"passed","time":{"start":1734188690715,"stop":1734188690715,"duration":0}},{"uid":"2438031f82eac108","reportUrl":"https://novasamatech.github.io/test-runner/5890//#testresult/2438031f82eac108","status":"passed","time":{"start":1734167102706,"stop":1734167102706,"duration":0}},{"uid":"c07a426884e5a990","reportUrl":"https://novasamatech.github.io/test-runner/5889//#testresult/c07a426884e5a990","status":"passed","time":{"start":1734102321941,"stop":1734102321942,"duration":1}},{"uid":"31c7a35815c2070d","reportUrl":"https://novasamatech.github.io/test-runner/5888//#testresult/31c7a35815c2070d","status":"passed","time":{"start":1734080747919,"stop":1734080747919,"duration":0}},{"uid":"b196b633b38f841e","reportUrl":"https://novasamatech.github.io/test-runner/5887//#testresult/b196b633b38f841e","status":"passed","time":{"start":1734015939755,"stop":1734015939755,"duration":0}},{"uid":"19758f8a9d4f0d8b","reportUrl":"https://novasamatech.github.io/test-runner/5886//#testresult/19758f8a9d4f0d8b","status":"passed","time":{"start":1733994348623,"stop":1733994348624,"duration":1}},{"uid":"e3a6a26cbed17ea5","reportUrl":"https://novasamatech.github.io/test-runner/5885//#testresult/e3a6a26cbed17ea5","status":"passed","time":{"start":1733929552294,"stop":1733929552294,"duration":0}},{"uid":"3d9f69a381711f1b","reportUrl":"https://novasamatech.github.io/test-runner/5884//#testresult/3d9f69a381711f1b","status":"passed","time":{"start":1733907942962,"stop":1733907942963,"duration":1}},{"uid":"b5873ffa95f95309","reportUrl":"https://novasamatech.github.io/test-runner/5883//#testresult/b5873ffa95f95309","status":"passed","time":{"start":1733843139032,"stop":1733843139033,"duration":1}},{"uid":"8edbdc46136f83f4","reportUrl":"https://novasamatech.github.io/test-runner/5882//#testresult/8edbdc46136f83f4","status":"passed","time":{"start":1733821579946,"stop":1733821579946,"duration":0}},{"uid":"9b09bfa2b28b6db1","reportUrl":"https://novasamatech.github.io/test-runner/5881//#testresult/9b09bfa2b28b6db1","status":"passed","time":{"start":1733756753123,"stop":1733756753123,"duration":0}},{"uid":"973378284431c51a","reportUrl":"https://novasamatech.github.io/test-runner/5880//#testresult/973378284431c51a","status":"passed","time":{"start":1733735170050,"stop":1733735170050,"duration":0}},{"uid":"b3e53f56ea3c20d5","reportUrl":"https://novasamatech.github.io/test-runner/5879//#testresult/b3e53f56ea3c20d5","status":"passed","time":{"start":1733670283919,"stop":1733670283919,"duration":0}},{"uid":"fa706f6e29ba0d9a","reportUrl":"https://novasamatech.github.io/test-runner/5878//#testresult/fa706f6e29ba0d9a","status":"passed","time":{"start":1733648707938,"stop":1733648707939,"duration":1}},{"uid":"1fc7e32fe0733e1d","reportUrl":"https://novasamatech.github.io/test-runner/5877//#testresult/1fc7e32fe0733e1d","status":"passed","time":{"start":1733583889049,"stop":1733583889049,"duration":0}},{"uid":"4f35cc72ab607ae2","reportUrl":"https://novasamatech.github.io/test-runner/5876//#testresult/4f35cc72ab607ae2","status":"passed","time":{"start":1733562302756,"stop":1733562302756,"duration":0}},{"uid":"6fa30d68af070e71","reportUrl":"https://novasamatech.github.io/test-runner/5875//#testresult/6fa30d68af070e71","status":"passed","time":{"start":1733497545267,"stop":1733497545268,"duration":1}},{"uid":"af6d66e9e754805a","reportUrl":"https://novasamatech.github.io/test-runner/5874//#testresult/af6d66e9e754805a","status":"passed","time":{"start":1733475946823,"stop":1733475946824,"duration":1}},{"uid":"f2ace5ec493c7c1f","reportUrl":"https://novasamatech.github.io/test-runner/5873//#testresult/f2ace5ec493c7c1f","status":"passed","time":{"start":1733411131427,"stop":1733411131427,"duration":0}}]},"tags":[]},"source":"7d9ee68f6475eef5.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fde6d79f160>"]}