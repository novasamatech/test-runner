{"uid":"9f5cf99ed8b0904c","name":"test_rpc_method_is_available[Test for Dock, url: wss://mainnet-node.dock.io]","fullName":"tests.test_rpc_methods_availability#test_rpc_method_is_available","historyId":"9ebfe826b7df47a81a29dc3d8bd2ac73","time":{"start":1737385805572,"stop":1737385805572,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 20 Jan 2025 15:10:05 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_method_is_available[Test for Dock, url: wss://mainnet-node.dock.io]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.12/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.12/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.12/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.12/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.12/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.12/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=2, type=1, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 20 Jan 2025 15:10:05 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- None\n\n.venv/lib/python3.12/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1737385794677,"stop":1737385795196,"duration":519},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 20 Jan 2025 15:09:55 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n                     ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1737385800268,"stop":1737385800509,"duration":241},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 20 Jan 2025 15:10:00 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n                     ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1737385805573,"stop":1737385805875,"duration":302},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 20 Jan 2025 15:10:05 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n                     ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 20 Jan 2025 15:10:05 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_rpc_method_is_available[Test for Dock, url: wss://mainnet-node.dock.io]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.12/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.12/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.12/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.12/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.12/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.12/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=2, type=1, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 20 Jan 2025 15:10:05 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- None\n\n.venv/lib/python3.12/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"b505bf067c9698d0","name":"stdout","source":"b505bf067c9698d0.txt","type":"text/plain","size":810}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_rpc_methods_availability"},{"name":"host","value":"fv-az1695-829"},{"name":"thread","value":"5174-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_rpc_methods_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://mainnet-node.dock.io', 'name': 'Dock'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c63d92b76227aa50","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 20 Jan 2025 15:10:00 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- None","time":{"start":1737385800268,"stop":1737385800268,"duration":0}},{"uid":"f36cf534788a87f6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 20 Jan 2025 15:09:55 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- None","time":{"start":1737385794676,"stop":1737385794676,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":23,"unknown":0,"total":24},"items":[{"uid":"d91ea9305f4b2ee8","reportUrl":"https://novasamatech.github.io/test-runner/5968//#testresult/d91ea9305f4b2ee8","status":"passed","time":{"start":1737364245775,"stop":1737364245891,"duration":116}},{"uid":"83c55f2755d376d3","reportUrl":"https://novasamatech.github.io/test-runner/5967//#testresult/83c55f2755d376d3","status":"passed","time":{"start":1737299410545,"stop":1737299410638,"duration":93}},{"uid":"7f7a6467b67b272f","reportUrl":"https://novasamatech.github.io/test-runner/5966//#testresult/7f7a6467b67b272f","status":"passed","time":{"start":1737277767987,"stop":1737277768108,"duration":121}},{"uid":"44ef4b4827c5a60a","reportUrl":"https://novasamatech.github.io/test-runner/5965//#testresult/44ef4b4827c5a60a","status":"passed","time":{"start":1737212919091,"stop":1737212919124,"duration":33}},{"uid":"5fb78231cb2aed82","reportUrl":"https://novasamatech.github.io/test-runner/5964//#testresult/5fb78231cb2aed82","status":"passed","time":{"start":1737191337240,"stop":1737191337344,"duration":104}},{"uid":"94b81125f80a046f","reportUrl":"https://novasamatech.github.io/test-runner/5963//#testresult/94b81125f80a046f","status":"passed","time":{"start":1737126568047,"stop":1737126568115,"duration":68}},{"uid":"2f5401551cb4d617","reportUrl":"https://novasamatech.github.io/test-runner/5962//#testresult/2f5401551cb4d617","status":"passed","time":{"start":1737104948929,"stop":1737104949008,"duration":79}},{"uid":"ecb6ec9b8e73659d","reportUrl":"https://novasamatech.github.io/test-runner/5961//#testresult/ecb6ec9b8e73659d","status":"passed","time":{"start":1737040170472,"stop":1737040170538,"duration":66}},{"uid":"501960116e3e8720","reportUrl":"https://novasamatech.github.io/test-runner/5960//#testresult/501960116e3e8720","status":"passed","time":{"start":1737018556049,"stop":1737018556165,"duration":116}},{"uid":"270b6502a55cd5ca","reportUrl":"https://novasamatech.github.io/test-runner/5959//#testresult/270b6502a55cd5ca","status":"passed","time":{"start":1736953738173,"stop":1736953738252,"duration":79}},{"uid":"b1bfdf313d438aee","reportUrl":"https://novasamatech.github.io/test-runner/5958//#testresult/b1bfdf313d438aee","status":"passed","time":{"start":1736932156198,"stop":1736932156268,"duration":70}},{"uid":"2ca92e8c83bdf613","reportUrl":"https://novasamatech.github.io/test-runner/5957//#testresult/2ca92e8c83bdf613","status":"passed","time":{"start":1736867354265,"stop":1736867354335,"duration":70}},{"uid":"b055b02870ab03e9","reportUrl":"https://novasamatech.github.io/test-runner/5956//#testresult/b055b02870ab03e9","status":"passed","time":{"start":1736845761807,"stop":1736845761909,"duration":102}},{"uid":"9f101e2891d19317","reportUrl":"https://novasamatech.github.io/test-runner/5955//#testresult/9f101e2891d19317","status":"passed","time":{"start":1736780962533,"stop":1736780962603,"duration":70}},{"uid":"c6a0a04e0e91383c","reportUrl":"https://novasamatech.github.io/test-runner/5953//#testresult/c6a0a04e0e91383c","status":"passed","time":{"start":1736694568010,"stop":1736694568078,"duration":68}},{"uid":"b7983985a11df69d","reportUrl":"https://novasamatech.github.io/test-runner/5952//#testresult/b7983985a11df69d","status":"passed","time":{"start":1736672959616,"stop":1736672959688,"duration":72}},{"uid":"2d16dd2f842d6b3f","reportUrl":"https://novasamatech.github.io/test-runner/5951//#testresult/2d16dd2f842d6b3f","status":"passed","time":{"start":1736608186880,"stop":1736608186947,"duration":67}},{"uid":"5aae9dc114285650","reportUrl":"https://novasamatech.github.io/test-runner/5950//#testresult/5aae9dc114285650","status":"passed","time":{"start":1736586545367,"stop":1736586545435,"duration":68}},{"uid":"e05116db99b86f4","reportUrl":"https://novasamatech.github.io/test-runner/5949//#testresult/e05116db99b86f4","status":"passed","time":{"start":1736521775192,"stop":1736521775259,"duration":67}},{"uid":"e0cd44d772b167bb","reportUrl":"https://novasamatech.github.io/test-runner/5948//#testresult/e0cd44d772b167bb","status":"passed","time":{"start":1736500171286,"stop":1736500171356,"duration":70}}]},"tags":[]},"source":"9f5cf99ed8b0904c.json","parameterValues":["{'url': 'wss://mainnet-node.dock.io', 'name': 'Dock'}"]}