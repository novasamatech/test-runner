{"uid":"351cc91140586556","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"900a02a36e60d19a7ffc41e41fa7d34d","time":{"start":1732093617459,"stop":1732093617459,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":true,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1732093596918,"stop":1732093602548,"duration":5630},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1732093607611,"stop":1732093617458,"duration":9847},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"68ac6bcaf8a5f03c","name":"stdout","source":"68ac6bcaf8a5f03c.txt","type":"text/plain","size":195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az984-581"},{"name":"thread","value":"2123-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"339fbce772cd5f7a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732093596917,"stop":1732093596917,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":12,"skipped":0,"passed":60,"unknown":0,"total":72},"items":[{"uid":"bf2f5644b8d3d41d","reportUrl":"https://novasamatech.github.io/test-runner/5841//#testresult/bf2f5644b8d3d41d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732028847594,"stop":1732028847594,"duration":0}},{"uid":"30ad75996dd43228","reportUrl":"https://novasamatech.github.io/test-runner/5840//#testresult/30ad75996dd43228","status":"passed","time":{"start":1732007263811,"stop":1732007263811,"duration":0}},{"uid":"6a869256d14fc3dc","reportUrl":"https://novasamatech.github.io/test-runner/5839//#testresult/6a869256d14fc3dc","status":"passed","time":{"start":1731942473262,"stop":1731942473262,"duration":0}},{"uid":"6d9a89eb98f92f5d","reportUrl":"https://novasamatech.github.io/test-runner/5838//#testresult/6d9a89eb98f92f5d","status":"passed","time":{"start":1731920887531,"stop":1731920887531,"duration":0}},{"uid":"321d6868a4c2c965","reportUrl":"https://novasamatech.github.io/test-runner/5837//#testresult/321d6868a4c2c965","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1731855972035,"stop":1731855972035,"duration":0}},{"uid":"e822a6925e4f750e","reportUrl":"https://novasamatech.github.io/test-runner/5836//#testresult/e822a6925e4f750e","status":"passed","time":{"start":1731834372519,"stop":1731834372519,"duration":0}},{"uid":"87e0208cc80c3e23","reportUrl":"https://novasamatech.github.io/test-runner/5835//#testresult/87e0208cc80c3e23","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1731769618669,"stop":1731769618669,"duration":0}},{"uid":"7903aa02ec6214fa","reportUrl":"https://novasamatech.github.io/test-runner/5834//#testresult/7903aa02ec6214fa","status":"passed","time":{"start":1731747992549,"stop":1731747992549,"duration":0}},{"uid":"3167d4979d61c00a","reportUrl":"https://novasamatech.github.io/test-runner/5833//#testresult/3167d4979d61c00a","status":"passed","time":{"start":1731683240251,"stop":1731683240251,"duration":0}},{"uid":"f0b086a4db52b750","reportUrl":"https://novasamatech.github.io/test-runner/5832//#testresult/f0b086a4db52b750","status":"passed","time":{"start":1731661606793,"stop":1731661606793,"duration":0}},{"uid":"c9bfa4f627ec0e3a","reportUrl":"https://novasamatech.github.io/test-runner/5831//#testresult/c9bfa4f627ec0e3a","status":"passed","time":{"start":1731596807818,"stop":1731596807818,"duration":0}},{"uid":"ba104c94feec54b6","reportUrl":"https://novasamatech.github.io/test-runner/5830//#testresult/ba104c94feec54b6","status":"passed","time":{"start":1731575247488,"stop":1731575247488,"duration":0}},{"uid":"9bdd0761b2d7fb2e","reportUrl":"https://novasamatech.github.io/test-runner/5829//#testresult/9bdd0761b2d7fb2e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1731510403621,"stop":1731510403621,"duration":0}},{"uid":"ad43966dbe0bd463","reportUrl":"https://novasamatech.github.io/test-runner/5828//#testresult/ad43966dbe0bd463","status":"passed","time":{"start":1731488781381,"stop":1731488781381,"duration":0}},{"uid":"fe50c5d5090cd8c1","reportUrl":"https://novasamatech.github.io/test-runner/5827//#testresult/fe50c5d5090cd8c1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1731424000323,"stop":1731424000323,"duration":0}},{"uid":"d31229fa388c7457","reportUrl":"https://novasamatech.github.io/test-runner/5826//#testresult/d31229fa388c7457","status":"passed","time":{"start":1731402387276,"stop":1731402387276,"duration":0}},{"uid":"6e6398915b76e16a","reportUrl":"https://novasamatech.github.io/test-runner/5825//#testresult/6e6398915b76e16a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1731337609329,"stop":1731337609329,"duration":0}},{"uid":"a2e4b4d18120d765","reportUrl":"https://novasamatech.github.io/test-runner/5824//#testresult/a2e4b4d18120d765","status":"passed","time":{"start":1731316011360,"stop":1731316011360,"duration":0}},{"uid":"c2d2710373254ffc","reportUrl":"https://novasamatech.github.io/test-runner/5823//#testresult/c2d2710373254ffc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1731251225716,"stop":1731251225716,"duration":0}},{"uid":"d4192c4932f6e29d","reportUrl":"https://novasamatech.github.io/test-runner/5822//#testresult/d4192c4932f6e29d","status":"passed","time":{"start":1731229578528,"stop":1731229578528,"duration":0}}]},"tags":[]},"source":"351cc91140586556.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}