{"uid":"7708338750406748","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"900a02a36e60d19a7ffc41e41fa7d34d","time":{"start":1737623300489,"stop":1737623300490,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1737623281006,"stop":1737623286687,"duration":5681},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n                     ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1737623291751,"stop":1737623300489,"duration":8738},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"4dbe974e8cef0dd6","name":"stdout","source":"4dbe974e8cef0dd6.txt","type":"text/plain","size":195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1675-705"},{"name":"thread","value":"5155-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5fc4ec5061e7be4a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1737623281005,"stop":1737623281005,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":25,"unknown":0,"total":29},"items":[{"uid":"2842864f1bb6e3b","reportUrl":"https://novasamatech.github.io/test-runner/5973//#testresult/2842864f1bb6e3b","status":"passed","time":{"start":1737558523460,"stop":1737558523461,"duration":1}},{"uid":"a0554b96db862743","reportUrl":"https://novasamatech.github.io/test-runner/5972//#testresult/a0554b96db862743","status":"passed","time":{"start":1737536897367,"stop":1737536897368,"duration":1}},{"uid":"ace409daee2365c4","reportUrl":"https://novasamatech.github.io/test-runner/5971//#testresult/ace409daee2365c4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1737472058134,"stop":1737472058134,"duration":0}},{"uid":"942652dcb42dd9e0","reportUrl":"https://novasamatech.github.io/test-runner/5970//#testresult/942652dcb42dd9e0","status":"passed","time":{"start":1737450476300,"stop":1737450476301,"duration":1}},{"uid":"d056e5ef6ae59def","reportUrl":"https://novasamatech.github.io/test-runner/5969//#testresult/d056e5ef6ae59def","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1737385684620,"stop":1737385684620,"duration":0}},{"uid":"bc7fab4c91c43262","reportUrl":"https://novasamatech.github.io/test-runner/5968//#testresult/bc7fab4c91c43262","status":"passed","time":{"start":1737364120621,"stop":1737364120621,"duration":0}},{"uid":"bb16fbbd9bb5b6e1","reportUrl":"https://novasamatech.github.io/test-runner/5967//#testresult/bb16fbbd9bb5b6e1","status":"passed","time":{"start":1737299301526,"stop":1737299301526,"duration":0}},{"uid":"a2a7e8419fcfc1ae","reportUrl":"https://novasamatech.github.io/test-runner/5966//#testresult/a2a7e8419fcfc1ae","status":"passed","time":{"start":1737277680769,"stop":1737277680769,"duration":0}},{"uid":"a7eb8f6758e03dd1","reportUrl":"https://novasamatech.github.io/test-runner/5965//#testresult/a7eb8f6758e03dd1","status":"passed","time":{"start":1737212875079,"stop":1737212875079,"duration":0}},{"uid":"f3e2ac944cb2d5e","reportUrl":"https://novasamatech.github.io/test-runner/5964//#testresult/f3e2ac944cb2d5e","status":"passed","time":{"start":1737191273341,"stop":1737191273342,"duration":1}},{"uid":"456385913d89ce3a","reportUrl":"https://novasamatech.github.io/test-runner/5963//#testresult/456385913d89ce3a","status":"passed","time":{"start":1737126433942,"stop":1737126433942,"duration":0}},{"uid":"64b2b274122d9f46","reportUrl":"https://novasamatech.github.io/test-runner/5962//#testresult/64b2b274122d9f46","status":"passed","time":{"start":1737104889434,"stop":1737104889434,"duration":0}},{"uid":"4adca24b32dd2132","reportUrl":"https://novasamatech.github.io/test-runner/5961//#testresult/4adca24b32dd2132","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1737040075647,"stop":1737040075647,"duration":0}},{"uid":"e7df5fca9ede8594","reportUrl":"https://novasamatech.github.io/test-runner/5960//#testresult/e7df5fca9ede8594","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1737018487057,"stop":1737018487057,"duration":0}},{"uid":"e8648c5ef1bde16f","reportUrl":"https://novasamatech.github.io/test-runner/5959//#testresult/e8648c5ef1bde16f","status":"passed","time":{"start":1736953699698,"stop":1736953699698,"duration":0}},{"uid":"ca5214dcfa3b55d7","reportUrl":"https://novasamatech.github.io/test-runner/5958//#testresult/ca5214dcfa3b55d7","status":"passed","time":{"start":1736932065501,"stop":1736932065501,"duration":0}},{"uid":"ff53a66e0b2f1031","reportUrl":"https://novasamatech.github.io/test-runner/5957//#testresult/ff53a66e0b2f1031","status":"passed","time":{"start":1736867221953,"stop":1736867221953,"duration":0}},{"uid":"f1aed154f7c4f1e0","reportUrl":"https://novasamatech.github.io/test-runner/5956//#testresult/f1aed154f7c4f1e0","status":"passed","time":{"start":1736845651227,"stop":1736845651227,"duration":0}},{"uid":"b88e81448a593436","reportUrl":"https://novasamatech.github.io/test-runner/5955//#testresult/b88e81448a593436","status":"passed","time":{"start":1736780879405,"stop":1736780879406,"duration":1}},{"uid":"b93bac056fffb67d","reportUrl":"https://novasamatech.github.io/test-runner/5953//#testresult/b93bac056fffb67d","status":"passed","time":{"start":1736694461684,"stop":1736694461684,"duration":0}}]},"tags":[]},"source":"7708338750406748.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}