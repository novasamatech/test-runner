{"uid":"8c944a6f6cb54d96","name":"test_can_create_connection[Test for NeuroWeb, url: wss://parachain-rpc.origin-trail.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"6eb16cb568cd5b60f5963d2db7aab074","time":{"start":1738746497689,"stop":1738746497689,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1738746489322,"stop":1738746489840,"duration":518},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 05 Feb 2025 09:08:09 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n                 ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n                     ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.12/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1738746494950,"stop":1738746497688,"duration":2738},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"5240b21c38bf775e","name":"stdout","source":"5240b21c38bf775e.txt","type":"text/plain","size":504}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1118-846"},{"name":"thread","value":"5194-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://parachain-rpc.origin-trail.network', 'name': 'NeuroWeb'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3366415035607576","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 05 Feb 2025 09:08:09 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1738746489322,"stop":1738746489322,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":50,"unknown":0,"total":55},"items":[{"uid":"1aae2d700d440795","reportUrl":"https://novasamatech.github.io/test-runner/5999//#testresult/1aae2d700d440795","status":"passed","time":{"start":1738681739500,"stop":1738681739501,"duration":1}},{"uid":"c395585e6de8719d","reportUrl":"https://novasamatech.github.io/test-runner/5998//#testresult/c395585e6de8719d","status":"passed","time":{"start":1738660086852,"stop":1738660086852,"duration":0}},{"uid":"1f5243b03eed7a86","reportUrl":"https://novasamatech.github.io/test-runner/5997//#testresult/1f5243b03eed7a86","status":"passed","time":{"start":1738595326141,"stop":1738595326141,"duration":0}},{"uid":"f5de0146b9594b67","reportUrl":"https://novasamatech.github.io/test-runner/5996//#testresult/f5de0146b9594b67","status":"passed","time":{"start":1738573735214,"stop":1738573735214,"duration":0}},{"uid":"f83dc900317fe82","reportUrl":"https://novasamatech.github.io/test-runner/5995//#testresult/f83dc900317fe82","status":"passed","time":{"start":1738508852732,"stop":1738508852732,"duration":0}},{"uid":"4b746f1d7d9ec05d","reportUrl":"https://novasamatech.github.io/test-runner/5994//#testresult/4b746f1d7d9ec05d","status":"passed","time":{"start":1738487247080,"stop":1738487247080,"duration":0}},{"uid":"3bd1e1f7cf952878","reportUrl":"https://novasamatech.github.io/test-runner/5993//#testresult/3bd1e1f7cf952878","status":"passed","time":{"start":1738422521067,"stop":1738422521067,"duration":0}},{"uid":"46c1d4e2ad29d42b","reportUrl":"https://novasamatech.github.io/test-runner/5992//#testresult/46c1d4e2ad29d42b","status":"passed","time":{"start":1738400914446,"stop":1738400914446,"duration":0}},{"uid":"2ae91aa63a5d4086","reportUrl":"https://novasamatech.github.io/test-runner/5991//#testresult/2ae91aa63a5d4086","status":"passed","time":{"start":1738336079597,"stop":1738336079598,"duration":1}},{"uid":"2796e3b18acbd931","reportUrl":"https://novasamatech.github.io/test-runner/5990//#testresult/2796e3b18acbd931","status":"passed","time":{"start":1738314499028,"stop":1738314499028,"duration":0}},{"uid":"a79130f09f685721","reportUrl":"https://novasamatech.github.io/test-runner/5989//#testresult/a79130f09f685721","status":"passed","time":{"start":1738249684021,"stop":1738249684022,"duration":1}},{"uid":"cfb92ef58cafbbf9","reportUrl":"https://novasamatech.github.io/test-runner/5988//#testresult/cfb92ef58cafbbf9","status":"passed","time":{"start":1738228085298,"stop":1738228085298,"duration":0}},{"uid":"7aeb14abc6b09dad","reportUrl":"https://novasamatech.github.io/test-runner/5987//#testresult/7aeb14abc6b09dad","status":"passed","time":{"start":1738163318119,"stop":1738163318119,"duration":0}},{"uid":"ffbd34ac58a6f243","reportUrl":"https://novasamatech.github.io/test-runner/5986//#testresult/ffbd34ac58a6f243","status":"passed","time":{"start":1738141699259,"stop":1738141699260,"duration":1}},{"uid":"c3fde85f875ff03a","reportUrl":"https://novasamatech.github.io/test-runner/5985//#testresult/c3fde85f875ff03a","status":"passed","time":{"start":1738076898836,"stop":1738076898836,"duration":0}},{"uid":"540dc86c154534bd","reportUrl":"https://novasamatech.github.io/test-runner/5984//#testresult/540dc86c154534bd","status":"passed","time":{"start":1738055368115,"stop":1738055368115,"duration":0}},{"uid":"822dfcf8d1935e8a","reportUrl":"https://novasamatech.github.io/test-runner/5983//#testresult/822dfcf8d1935e8a","status":"passed","time":{"start":1737990498984,"stop":1737990498985,"duration":1}},{"uid":"d3d1e2201cae5237","reportUrl":"https://novasamatech.github.io/test-runner/5982//#testresult/d3d1e2201cae5237","status":"passed","time":{"start":1737968950493,"stop":1737968950493,"duration":0}},{"uid":"8c11e6988227f7c6","reportUrl":"https://novasamatech.github.io/test-runner/5981//#testresult/8c11e6988227f7c6","status":"passed","time":{"start":1737904095298,"stop":1737904095298,"duration":0}},{"uid":"ccc2fd420d39d8d0","reportUrl":"https://novasamatech.github.io/test-runner/5980//#testresult/ccc2fd420d39d8d0","status":"passed","time":{"start":1737882515363,"stop":1737882515364,"duration":1}}]},"tags":[]},"source":"8c944a6f6cb54d96.json","parameterValues":["{'url': 'wss://parachain-rpc.origin-trail.network', 'name': 'NeuroWeb'}"]}