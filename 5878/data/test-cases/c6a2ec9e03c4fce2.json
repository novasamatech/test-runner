{"uid":"c6a2ec9e03c4fce2","name":"test_can_create_connection[Test for Kusama, url: wss://1rpc.io/ksm]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"83b36cc2e926a7d7a5f575744e27793a","time":{"start":1733648685043,"stop":1733648685043,"duration":0},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Kusama, url: wss://1rpc.io/ksm]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:256: in connect\n    self.sock, addrs = connect(\n.venv/lib/python3.10/site-packages/websocket/_http.py:147: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:307: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:277: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1100: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1371: SSLCertVerificationError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1733648674235,"stop":1733648674468,"duration":233},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 256, in connect\n    self.sock, addrs = connect(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 147, in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 307, in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 277, in _wrap_sni_socket\n    return context.wrap_socket(\n  File \"/usr/lib/python3.10/ssl.py\", line 513, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/lib/python3.10/ssl.py\", line 1100, in _create\n    self.do_handshake()\n  File \"/usr/lib/python3.10/ssl.py\", line 1371, in do_handshake\n    self._sslobj.do_handshake()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1733648679673,"stop":1733648679885,"duration":212},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 256, in connect\n    self.sock, addrs = connect(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 147, in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 307, in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 277, in _wrap_sni_socket\n    return context.wrap_socket(\n  File \"/usr/lib/python3.10/ssl.py\", line 513, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/lib/python3.10/ssl.py\", line 1100, in _create\n    self.do_handshake()\n  File \"/usr/lib/python3.10/ssl.py\", line 1371, in do_handshake\n    self._sslobj.do_handshake()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1733648685044,"stop":1733648685213,"duration":169},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 256, in connect\n    self.sock, addrs = connect(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 147, in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 307, in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 277, in _wrap_sni_socket\n    return context.wrap_socket(\n  File \"/usr/lib/python3.10/ssl.py\", line 513, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/lib/python3.10/ssl.py\", line 1100, in _create\n    self.do_handshake()\n  File \"/usr/lib/python3.10/ssl.py\", line 1371, in do_handshake\n    self._sslobj.do_handshake()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Kusama, url: wss://1rpc.io/ksm]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:32: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:256: in connect\n    self.sock, addrs = connect(\n.venv/lib/python3.10/site-packages/websocket/_http.py:147: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:307: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:277: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1100: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1371: SSLCertVerificationError","steps":[],"attachments":[{"uid":"dd623067bbf1ecde","name":"stdout","source":"dd623067bbf1ecde.txt","type":"text/plain","size":498}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1535-762"},{"name":"thread","value":"2187-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://1rpc.io/ksm', 'name': 'Kusama'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b647c6a6f7e378f6","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","time":{"start":1733648679673,"stop":1733648679673,"duration":0}},{"uid":"b1f6f99bf5af662d","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","time":{"start":1733648674234,"stop":1733648674234,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":107,"unknown":0,"total":108},"items":[{"uid":"c827831447b72d56","reportUrl":"https://novasamatech.github.io/test-runner/5877//#testresult/c827831447b72d56","status":"passed","time":{"start":1733583866157,"stop":1733583866157,"duration":0}},{"uid":"5e85560c1bb13532","reportUrl":"https://novasamatech.github.io/test-runner/5876//#testresult/5e85560c1bb13532","status":"passed","time":{"start":1733562280103,"stop":1733562280103,"duration":0}},{"uid":"5b57d48ff3e724df","reportUrl":"https://novasamatech.github.io/test-runner/5875//#testresult/5b57d48ff3e724df","status":"passed","time":{"start":1733497512131,"stop":1733497512131,"duration":0}},{"uid":"6dcf984451fddd25","reportUrl":"https://novasamatech.github.io/test-runner/5874//#testresult/6dcf984451fddd25","status":"passed","time":{"start":1733475921730,"stop":1733475921730,"duration":0}},{"uid":"feb550a985333c5f","reportUrl":"https://novasamatech.github.io/test-runner/5873//#testresult/feb550a985333c5f","status":"passed","time":{"start":1733411104587,"stop":1733411104587,"duration":0}},{"uid":"31b053e65a1d172d","reportUrl":"https://novasamatech.github.io/test-runner/5872//#testresult/31b053e65a1d172d","status":"passed","time":{"start":1733389541787,"stop":1733389541787,"duration":0}},{"uid":"8c2eae906a6107da","reportUrl":"https://novasamatech.github.io/test-runner/5871//#testresult/8c2eae906a6107da","status":"passed","time":{"start":1733324709527,"stop":1733324709527,"duration":0}},{"uid":"881daea924c1971c","reportUrl":"https://novasamatech.github.io/test-runner/5870//#testresult/881daea924c1971c","status":"passed","time":{"start":1733303134497,"stop":1733303134497,"duration":0}},{"uid":"be73a6661fe11e3","reportUrl":"https://novasamatech.github.io/test-runner/5869//#testresult/be73a6661fe11e3","status":"passed","time":{"start":1733238302646,"stop":1733238302646,"duration":0}},{"uid":"8fa373ebe9a1b98a","reportUrl":"https://novasamatech.github.io/test-runner/5868//#testresult/8fa373ebe9a1b98a","status":"passed","time":{"start":1733216723519,"stop":1733216723519,"duration":0}},{"uid":"50cd17b91fcd0779","reportUrl":"https://novasamatech.github.io/test-runner/5867//#testresult/50cd17b91fcd0779","status":"passed","time":{"start":1733151926236,"stop":1733151926236,"duration":0}},{"uid":"6015e7c6af629835","reportUrl":"https://novasamatech.github.io/test-runner/5866//#testresult/6015e7c6af629835","status":"passed","time":{"start":1733130351365,"stop":1733130351366,"duration":1}},{"uid":"b1cb66dd31728dfe","reportUrl":"https://novasamatech.github.io/test-runner/5865//#testresult/b1cb66dd31728dfe","status":"passed","time":{"start":1733065477535,"stop":1733065477535,"duration":0}},{"uid":"f7de5502c4e0edf0","reportUrl":"https://novasamatech.github.io/test-runner/5864//#testresult/f7de5502c4e0edf0","status":"passed","time":{"start":1733043884742,"stop":1733043884742,"duration":0}},{"uid":"45cc0f1a34bfff85","reportUrl":"https://novasamatech.github.io/test-runner/5863//#testresult/45cc0f1a34bfff85","status":"passed","time":{"start":1732979072689,"stop":1732979072689,"duration":0}},{"uid":"8a5f4bb74b4911c7","reportUrl":"https://novasamatech.github.io/test-runner/5862//#testresult/8a5f4bb74b4911c7","status":"passed","time":{"start":1732957489173,"stop":1732957489174,"duration":1}},{"uid":"40aa71945c4d7b79","reportUrl":"https://novasamatech.github.io/test-runner/5861//#testresult/40aa71945c4d7b79","status":"passed","time":{"start":1732892708275,"stop":1732892708275,"duration":0}},{"uid":"93ba2fc68da6c4c5","reportUrl":"https://novasamatech.github.io/test-runner/5860//#testresult/93ba2fc68da6c4c5","status":"passed","time":{"start":1732871122643,"stop":1732871122643,"duration":0}},{"uid":"a6576fba2bb58607","reportUrl":"https://novasamatech.github.io/test-runner/5859//#testresult/a6576fba2bb58607","status":"passed","time":{"start":1732806294882,"stop":1732806294882,"duration":0}},{"uid":"5adb36143e2faa45","reportUrl":"https://novasamatech.github.io/test-runner/5858//#testresult/5adb36143e2faa45","status":"passed","time":{"start":1732784731433,"stop":1732784731433,"duration":0}}]},"tags":[]},"source":"c6a2ec9e03c4fce2.json","parameterValues":["{'url': 'wss://1rpc.io/ksm', 'name': 'Kusama'}"]}