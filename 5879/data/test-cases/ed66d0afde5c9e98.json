{"uid":"ed66d0afde5c9e98","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"900a02a36e60d19a7ffc41e41fa7d34d","time":{"start":1733670365226,"stop":1733670365226,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1733670336085,"stop":1733670341588,"duration":5503},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1733670346760,"stop":1733670352270,"duration":5510},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1733670357357,"stop":1733670365225,"duration":7868},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"18c7ae2e181c03f","name":"stdout","source":"18c7ae2e181c03f.txt","type":"text/plain","size":390}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az520-636"},{"name":"thread","value":"2105-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b57487bdd70c5f23","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733670346759,"stop":1733670346759,"duration":0}},{"uid":"5463da804276a643","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733670336084,"stop":1733670336084,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":20,"skipped":0,"passed":89,"unknown":0,"total":109},"items":[{"uid":"71a0065f9933fd8b","reportUrl":"https://novasamatech.github.io/test-runner/5878//#testresult/71a0065f9933fd8b","status":"passed","time":{"start":1733648782714,"stop":1733648782714,"duration":0}},{"uid":"fe17274beb5a9027","reportUrl":"https://novasamatech.github.io/test-runner/5877//#testresult/fe17274beb5a9027","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733583969463,"stop":1733583969463,"duration":0}},{"uid":"5f028d9dfc05d62c","reportUrl":"https://novasamatech.github.io/test-runner/5876//#testresult/5f028d9dfc05d62c","status":"passed","time":{"start":1733562413164,"stop":1733562413164,"duration":0}},{"uid":"d9ca60a34e95fc92","reportUrl":"https://novasamatech.github.io/test-runner/5875//#testresult/d9ca60a34e95fc92","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733497636355,"stop":1733497636355,"duration":0}},{"uid":"623c04f7aa494f30","reportUrl":"https://novasamatech.github.io/test-runner/5874//#testresult/623c04f7aa494f30","status":"passed","time":{"start":1733476008669,"stop":1733476008669,"duration":0}},{"uid":"331248a63cb95c38","reportUrl":"https://novasamatech.github.io/test-runner/5873//#testresult/331248a63cb95c38","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733411212996,"stop":1733411212996,"duration":0}},{"uid":"bc4a9382fe63efeb","reportUrl":"https://novasamatech.github.io/test-runner/5872//#testresult/bc4a9382fe63efeb","status":"passed","time":{"start":1733389667848,"stop":1733389667848,"duration":0}},{"uid":"641f0ecb8dd5da08","reportUrl":"https://novasamatech.github.io/test-runner/5871//#testresult/641f0ecb8dd5da08","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733324830339,"stop":1733324830339,"duration":0}},{"uid":"5a427a5ae1e72fdc","reportUrl":"https://novasamatech.github.io/test-runner/5870//#testresult/5a427a5ae1e72fdc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733303241468,"stop":1733303241468,"duration":0}},{"uid":"cd7fe0a5fbb5de11","reportUrl":"https://novasamatech.github.io/test-runner/5869//#testresult/cd7fe0a5fbb5de11","status":"passed","time":{"start":1733238393244,"stop":1733238393244,"duration":0}},{"uid":"fc8dae37df8703c8","reportUrl":"https://novasamatech.github.io/test-runner/5868//#testresult/fc8dae37df8703c8","status":"passed","time":{"start":1733216803285,"stop":1733216803286,"duration":1}},{"uid":"de75bb3c78dd65e7","reportUrl":"https://novasamatech.github.io/test-runner/5867//#testresult/de75bb3c78dd65e7","status":"passed","time":{"start":1733152047138,"stop":1733152047138,"duration":0}},{"uid":"e0d667eae475b53f","reportUrl":"https://novasamatech.github.io/test-runner/5866//#testresult/e0d667eae475b53f","status":"passed","time":{"start":1733130502632,"stop":1733130502632,"duration":0}},{"uid":"ef163752e0b86ae2","reportUrl":"https://novasamatech.github.io/test-runner/5865//#testresult/ef163752e0b86ae2","status":"passed","time":{"start":1733065647362,"stop":1733065647363,"duration":1}},{"uid":"9385568cc22257cd","reportUrl":"https://novasamatech.github.io/test-runner/5864//#testresult/9385568cc22257cd","status":"passed","time":{"start":1733043984885,"stop":1733043984885,"duration":0}},{"uid":"c752fbadd66456ff","reportUrl":"https://novasamatech.github.io/test-runner/5863//#testresult/c752fbadd66456ff","status":"passed","time":{"start":1732979178584,"stop":1732979178584,"duration":0}},{"uid":"671619901a07baf0","reportUrl":"https://novasamatech.github.io/test-runner/5862//#testresult/671619901a07baf0","status":"passed","time":{"start":1732957577595,"stop":1732957577596,"duration":1}},{"uid":"89ffcdd0f4ecccc2","reportUrl":"https://novasamatech.github.io/test-runner/5861//#testresult/89ffcdd0f4ecccc2","status":"passed","time":{"start":1732892840988,"stop":1732892840988,"duration":0}},{"uid":"71ea881c663a00fd","reportUrl":"https://novasamatech.github.io/test-runner/5860//#testresult/71ea881c663a00fd","status":"passed","time":{"start":1732871207696,"stop":1732871207696,"duration":0}},{"uid":"21b9edfc3594ad9c","reportUrl":"https://novasamatech.github.io/test-runner/5859//#testresult/21b9edfc3594ad9c","status":"passed","time":{"start":1732806450954,"stop":1732806450954,"duration":0}}]},"tags":[]},"source":"ed66d0afde5c9e98.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}