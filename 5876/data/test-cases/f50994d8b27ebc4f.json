{"uid":"f50994d8b27ebc4f","name":"test_rpc_node_is_synced[Test for Nodle Parachain, url: wss://nodle-rpc.dwellir.com]","fullName":"tests.test_substrate_node_is_synced#test_rpc_node_is_synced","historyId":"d1dde89f48f5b964faa5b75d8926ce6c","time":{"start":1733562378683,"stop":1733562378785,"duration":102},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":true,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1733562359608,"stop":1733562365119,"duration":5511},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 57, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 32, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1733562370182,"stop":1733562378682,"duration":8500},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"e6b111b26d50affd","name":"stdout","source":"e6b111b26d50affd.txt","type":"text/plain","size":195}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_substrate_node_is_synced"},{"name":"host","value":"fv-az570-393"},{"name":"thread","value":"2112-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_substrate_node_is_synced"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"99a52ef68557157b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733562359607,"stop":1733562359607,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":25,"skipped":0,"passed":81,"unknown":0,"total":106},"items":[{"uid":"a62d9fe5acc9e364","reportUrl":"https://novasamatech.github.io/test-runner/5875//#testresult/a62d9fe5acc9e364","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733497631165,"stop":1733497631165,"duration":0}},{"uid":"ce0eb8dd4acff45c","reportUrl":"https://novasamatech.github.io/test-runner/5874//#testresult/ce0eb8dd4acff45c","status":"passed","time":{"start":1733476009259,"stop":1733476009375,"duration":116}},{"uid":"b24a2ca49b73046f","reportUrl":"https://novasamatech.github.io/test-runner/5873//#testresult/b24a2ca49b73046f","status":"passed","time":{"start":1733411196261,"stop":1733411196522,"duration":261}},{"uid":"356cf0f8a5d89809","reportUrl":"https://novasamatech.github.io/test-runner/5872//#testresult/356cf0f8a5d89809","status":"passed","time":{"start":1733389730480,"stop":1733389730659,"duration":179}},{"uid":"f1f8defb91b7478d","reportUrl":"https://novasamatech.github.io/test-runner/5871//#testresult/f1f8defb91b7478d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733324836942,"stop":1733324836942,"duration":0}},{"uid":"56193b545e3664b9","reportUrl":"https://novasamatech.github.io/test-runner/5870//#testresult/56193b545e3664b9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1733303235902,"stop":1733303235902,"duration":0}},{"uid":"9d69e334c16e4031","reportUrl":"https://novasamatech.github.io/test-runner/5869//#testresult/9d69e334c16e4031","status":"passed","time":{"start":1733238389044,"stop":1733238389151,"duration":107}},{"uid":"3734a08396d5aa92","reportUrl":"https://novasamatech.github.io/test-runner/5868//#testresult/3734a08396d5aa92","status":"passed","time":{"start":1733216812714,"stop":1733216812815,"duration":101}},{"uid":"d1d54b3c0ff688d7","reportUrl":"https://novasamatech.github.io/test-runner/5867//#testresult/d1d54b3c0ff688d7","status":"passed","time":{"start":1733152028359,"stop":1733152028516,"duration":157}},{"uid":"f598576a82d6c47b","reportUrl":"https://novasamatech.github.io/test-runner/5866//#testresult/f598576a82d6c47b","status":"passed","time":{"start":1733130430337,"stop":1733130430460,"duration":123}},{"uid":"4c5ffd1400c926d8","reportUrl":"https://novasamatech.github.io/test-runner/5865//#testresult/4c5ffd1400c926d8","status":"passed","time":{"start":1733065647384,"stop":1733065647488,"duration":104}},{"uid":"fe3187168af342e","reportUrl":"https://novasamatech.github.io/test-runner/5864//#testresult/fe3187168af342e","status":"passed","time":{"start":1733043963765,"stop":1733043963870,"duration":105}},{"uid":"6a77292873a87f0e","reportUrl":"https://novasamatech.github.io/test-runner/5863//#testresult/6a77292873a87f0e","status":"passed","time":{"start":1732979189470,"stop":1732979189574,"duration":104}},{"uid":"4a2bbb309f62f0ce","reportUrl":"https://novasamatech.github.io/test-runner/5862//#testresult/4a2bbb309f62f0ce","status":"passed","time":{"start":1732957624338,"stop":1732957624451,"duration":113}},{"uid":"356da4907e979497","reportUrl":"https://novasamatech.github.io/test-runner/5861//#testresult/356da4907e979497","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732892819472,"stop":1732892819472,"duration":0}},{"uid":"dff03827dfb932db","reportUrl":"https://novasamatech.github.io/test-runner/5860//#testresult/dff03827dfb932db","status":"passed","time":{"start":1732871204981,"stop":1732871205086,"duration":105}},{"uid":"10f11401fa6a2d65","reportUrl":"https://novasamatech.github.io/test-runner/5859//#testresult/10f11401fa6a2d65","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732806387149,"stop":1732806387149,"duration":0}},{"uid":"6f23bb527678a6bc","reportUrl":"https://novasamatech.github.io/test-runner/5858//#testresult/6f23bb527678a6bc","status":"passed","time":{"start":1732784815303,"stop":1732784815408,"duration":105}},{"uid":"443776039403569c","reportUrl":"https://novasamatech.github.io/test-runner/5857//#testresult/443776039403569c","status":"passed","time":{"start":1732719973409,"stop":1732719973511,"duration":102}},{"uid":"6b1bb0b276bb30b9","reportUrl":"https://novasamatech.github.io/test-runner/5856//#testresult/6b1bb0b276bb30b9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1732698422656,"stop":1732698422656,"duration":0}}]},"tags":[]},"source":"f50994d8b27ebc4f.json","parameterValues":["{'url': 'wss://nodle-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}