name: Networks healthcheck

on:
  schedule:
    - cron: '0 0/4 * * *'
  workflow_dispatch:
  pull_request:

env:
  ACALA_PROD_AUTH_TOKEN: 'token'
  ACALA_TEST_AUTH_TOKEN: 'token'
  MOONBEAM_PROD_AUTH_TOKEN: 'token'
  MOONBEAM_TEST_AUTH_TOKEN: 'token'
  MOONPAY_PRODUCTION_SECRET: 'token'
  MOONPAY_TEST_SECRET: 'token'

  CI_KEYSTORE_PASS: 'token'
  CI_KEYSTORE_KEY_ALIAS: 'token'
  CI_KEYSTORE_KEY_PASS: 'token'

  TEST_RE_RUNS: 1
  TEST_RE_RUNS_DELAY: 10


jobs:

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Check out
        uses: actions/checkout@master
        with:
          repository: nova-wallet/nova-wallet-android
          ref: 'develop'
          token: ${{ secrets.PAT }}

      - name: ‚òïÔ∏è Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: üèó Build app for testing
        run: ./gradlew :app:assembleDebugAndroidTest

      - name: üß™ Build instrumential test
        run: ./gradlew :app:assembleInstrumentialTest

      - uses: actions/upload-artifact@v2
        with:
          name: apk
          path: |
            app/build/outputs/apk/instrumentialTest/
            app/build/outputs/apk/androidTest/debug/


  android-test:
    needs: build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master

      - name: Download built artifact
        uses: actions/download-artifact@v2
        with:
          name: apk
          path: app

      - name: Debug
        run: |
          ls -R

      - name: Add permissions
        run: chmod +x .github/workflows/networks_test.sh

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          disable-animations: true
          profile: Nexus 5X
          api-level: 28
          script: .github/workflows/networks_test.sh

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: anroid-results
          path: ./allure-results.tar

  utils-test:
    name: ${{ matrix.tests }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        tests:
          [
            test_nodes_availability,
            test_network_parameters,
            test_xcm_data,
          ]
    steps:
      - name: Checout to nova-utils
        uses: actions/checkout@v2
        with:
          repository: nova-wallet/nova-utils
          ref: 'feature/xcm_tests'
          path: nova-utils
          token: ${{ secrets.PAT }}

      - name: Debug
        run: |
          ls -R
        shell: bash

      - name: Install dependencies
        run: pip install -r nova-utils/requirements.txt

      - name: Run test
        continue-on-error: true
        run: |
          cd ./nova-utils
          python -m pytest --rootdir . --alluredir=allure-results/ -n auto "./tests/${{ matrix.tests }}.py" --reruns ${{ env.TEST_RE_RUNS }} --reruns-delay ${{ env.TEST_RE_RUNS_DELAY }}

      - name: Tar files
        if: always()
        run: |
          cd ./nova-utils
          tar -cvf allure-results.tar allure-results/

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ matrix.tests }}
          path: ./nova-utils/allure-results.tar

  report:
    runs-on: ubuntu-latest
    needs: [android-test, utils-test]
    if: always() && (needs.build.result == 'success')
    steps:
      - uses: actions/checkout@v2
      - name: Download built artifact
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Unzip results
        run: |
          tar -xvf artifacts/test_nodes_availability/allure-results.tar
          tar -xvf artifacts/test_network_parameters/allure-results.tar
          tar -xvf artifacts/test_xcm_data/allure-results.tar
          tar -xvf artifacts/anroid-results/allure-results.tar

      - uses: ./.github/workflows/report
        with:
          secret-token: ${{ secrets.GITHUB_TOKEN }}
          keep-reports-history: 30

  # alert:
  #   runs-on: ubuntu-latest
  #   needs: report
  #   if: always() && (needs.test.result == 'failure')
  #   env:
  #     GITHUB_WORKFLOW_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
  #   steps:
  #     - name: Report
  #       uses: appleboy/telegram-action@master
  #       with:
  #         to: ${{ secrets.TELEGRAM_TO }}
  #         token: ${{ secrets.TELEGRAM_TOKEN }}
  #         message: |
  #           Network tests failed, lets check:

  #           Failed run:
  #           ${{ env.GITHUB_WORKFLOW_URL }}

  #           Report:
  #           https://nova-wallet.github.io/test-runner/${{ github.run_number }}
